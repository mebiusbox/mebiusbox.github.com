<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Mebiusbox software Blog</title>
        <link>https://mebiusbox.github.io/blog</link>
        <description>Mebiusbox software Blog</description>
        <lastBuildDate>Tue, 27 Aug 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>ja</language>
        <item>
            <title><![CDATA[WindowsでのPython環境について]]></title>
            <link>https://mebiusbox.github.io/blog/2024/08/27/python-on-windows</link>
            <guid>https://mebiusbox.github.io/blog/2024/08/27/python-on-windows</guid>
            <pubDate>Tue, 27 Aug 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Anacondaから別の環境に移行できるのか]]></description>
            <content:encoded><![CDATA[<p>WindowsでのPython環境はこれまでMiniconda(Anaconda)を利用してきました．個人的利用では正直なところ、とくに問題ありません．ただ、現在Minicondaを利用する理由がPythonとNodejsのバージョン管理にしか使っておらず、そろそろ別のに乗り換えるいい機会かなと思いました．そこで、いくつか試してみた結果を記録しておきます．</p>
<p>結論から言うと、やはりMinicondaが楽かなと思います．情報量も多いですし．ただ、最終的に py + winget + pip/uv + nvm という環境になりました．
まずは他に試したものからまとめていきます．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="pyenv--poetry">pyenv + poetry<a class="hash-link" aria-label="pyenv + poetry への直接リ�ンク" title="pyenv + poetry への直接リンク" href="https://mebiusbox.github.io/blog/2024/08/27/python-on-windows#pyenv--poetry">​</a></h2>
<p>Windowsだと <a href="https://github.com/pyenv-win/pyenv-win" target="_blank" rel="noopener noreferrer">pyenv-win</a> を使います．インストールや初期設定など若干手間ではありますが、導入に関しては問題ありませんでした．ただ、pyenv経由でインストールしたpythonの動作が公式インストーラでのpythonや他のpythonバージョン管理での実行バイナリと挙動が違っていました．もちろん、それぞれ同じバージョンなのですが、ビルドはそれぞれ違います．pyenvでインストールしたバイナリだと結果がエラーになってしまう部分があり、こちらの環境で問題が発生しました．具体的には "-c" コマンドを空で実行したときに返ってくる結果が異なります．こちらのコードを調整すれば対応できますが、クローンしたプロジェクトで発生しており、ちょっと面倒なため、残念ながら不採用となりました．pyenvそのものは特に問題なかったのですけどね．あと、poetryに関してもとくに問題ないと思います．ただ、uv があまりにも速かったのでそちらにしました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rye">Rye<a class="hash-link" aria-label="Rye への直接リンク" title="Rye への直接リンク" href="https://mebiusbox.github.io/blog/2024/08/27/python-on-windows#rye">​</a></h2>
<p><a href="https://rye.astral.sh/" target="_blank" rel="noopener noreferrer">Rye</a> はPythonのバージョン、およびパッケージ、プロジェクトを管理できるツールです．これから新規にやっていくならありかなと思いますが、率直に思ったのがすでにある環境への対応が難しいです．とくにpipコマンドが隠蔽されてしまうのが致命的で、スクリプトなどがまったく動かなくなります．ちなみに、pipコマンドが隠蔽されることは別に悪いことではなく、rye経由のパッケージ管理に集中できます．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="uv">uv<a class="hash-link" aria-label="uv への直接リンク" title="uv への直接リンク" href="https://mebiusbox.github.io/blog/2024/08/27/python-on-windows#uv">​</a></h2>
<p><a href="https://github.com/astral-sh/uv" target="_blank" rel="noopener noreferrer">uv</a> はパッケージとプロジェクト管理ツールです．Pythonのバージョン管理もあります．
とにかく仮想環境の構築が速いです．Ryeも標準でuvを使うようになっています．使い方も <code>uv pip ...</code> と pip に準拠した形になっているので移行しやすいです．
非常に魅力的なツールではありますが、まだまだ実験的な機能が多く、安定するには時間がかかるかもしれません．
また、pipでインストールすると問題なかったものが uv だと上手く動作しなかったことが1度だけありました．依存解決の仕方が違うようなのでそういったことが起こることがあるようです．ただ、それでも仮想環境の構築やパッケージのインストールが速いので、とりあえず uv で構築して、問題が起きたら pip にするようにしています．ちょっと気になっているのは仮想環境のフォルダが <code>.venv</code> 固定ということです．個人的には <code>venv</code> にしたいんですよね．これを逆に利用して <code>venv</code> なら pip 、<code>.venv</code> なら uv で管理しているという見分けができるようにしています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="py">py<a class="hash-link" aria-label="py への直接リンク" title="py への直接リンク" href="https://mebiusbox.github.io/blog/2024/08/27/python-on-windows#py">​</a></h2>
<p>py はPythonランチャーのことで、公式インストーラを使うとインストールされます．py はインストールされているPythonのバイナリを実行時に指定できます．
なので、複数のバージョンをインストールして py でバージョンを切り替えて使うということになります．各バージョンについては winget を使うことで簡単にインストールできますので、py+winget でPythonのバージョン管理ができます．また、一部のWindowsアプリはPythonによるスクリプト実行ができるのですが、グローバルにインストールしていると設定が楽だったりします．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="py--winget--pip-uv">py + winget + pip (uv)<a class="hash-link" aria-label="py + winget + pip (uv) への直接リンク" title="py + winget + pip (uv) への直接リンク" href="https://mebiusbox.github.io/blog/2024/08/27/python-on-windows#py--winget--pip-uv">​</a></h2>
<p>ということで、最終的に py + winget で python のバージョン管理を、pip/uv でパッケージ管理をするようになりました．とりあえず、ローカルにある環境はほとんど Miniconda から移行できました．ちなみに基本的に pyproject.toml に依存関係をまとめて uv を使ったり、pip を使う場合は uv で pyproject.toml から requirements.txt を生成して使うという形になります．あと、パッケージの依存関係を調べるのに <code>uv pip tree</code> コマンドが使えるので便利です．また、poetry も使ってもいいかもしれません．それはもうちょっと試してみないとわからないです．</p>
<p>環境は移行したものの、Miniconda よりも良くなったというところはとくにないので、Miniconda(Anaconda)を使ってもいいと思います．py+winget の部分が Miniconda になるだけです．とりあえず、どちらでも好きな方で問題ないという認識です．</p>
<p>以上です．</p>]]></content:encoded>
            <category>windows</category>
            <category>python</category>
        </item>
        <item>
            <title><![CDATA[zoxideのデータベースを整理する]]></title>
            <link>https://mebiusbox.github.io/blog/2024/04/03/prune-zoxide-database</link>
            <guid>https://mebiusbox.github.io/blog/2024/04/03/prune-zoxide-database</guid>
            <pubDate>Wed, 03 Apr 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[zoxideのデータベースからスコアを参照して整理するPowerShellスクリプト]]></description>
            <content:encoded><![CDATA[<p>zoxideのデータベースを参照してスコアの低いエントリを削除するpowershellスクリプトの紹介です．</p>
<p><a href="https://github.com/ajeetdsouza/zoxide" target="_blank" rel="noopener noreferrer">zoxide</a>はターミナルで使うcdコマンドの改良版です．cdコマンドで移動したディレクトリを履歴としてデータベースに保存し、あとは履歴を参照して移動したことがある場所に行き来するときに便利です．その際に、短い名前で履歴から一致した場所に移動できるので、よくディレクトリを切り替えたりするときに便利です．</p>
<p>履歴はzoxideのデータベースに格納されます．私の環境(Windows11)では以下の場所にありました．</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">C:\Users\&lt;username&gt;\AppData\Local\zoxide\db.zo</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>このファイルを削除すれば、データベースは初期化されます．
しかし、データベースの初期化ではなく、低いスコアのエントリを削除するためにpowershellスクリプトを作成しました．
これは、スコアが特定の値以下であるものを削除します．また、ついでに存在しないディレクトリであれば、それも削除します．
一応、zoxideは<a href="https://github.com/ajeetdsouza/zoxide/wiki/Algorithm#pruning" target="_blank" rel="noopener noreferrer">一定期間(90日)</a>で似たようなことをしてくれるようです．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="エントリの閲覧">エントリの閲覧<a class="hash-link" aria-label="エントリの閲覧 への直接リンク" title="エントリの閲覧 への直接リンク" href="https://mebiusbox.github.io/blog/2024/04/03/prune-zoxide-database#%E3%82%A8%E3%83%B3%E3%83%88%E3%83%AA%E3%81%AE%E9%96%B2%E8%A6%A7">​</a></h2>
<p>データベースの内容を確認するには<code>zoxide query</code>コマンドを使います．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">zoxide query </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[OPTIONS]</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[KEYWORDS]</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>現在、有効なエントリを見るには <code>--list</code> または <code>-l</code> を指定します．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">zoxide query </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>無効なディレクトリも確認したい場合は、<code>--all</code> または <code>-a</code> を合わせて使います．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">zoxide query </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">all</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>また、スコアも表示したい場合は <code>--score</code> または <code>-s</code> を指定します．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">zoxide query </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">score</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">zoxide query </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">all </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">score</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">zoxide query </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">las</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="powershellスクリプト">powershellスクリプト<a class="hash-link" aria-label="powershellスクリプト への直接リンク" title="powershellスクリプト への直接リンク" href="https://mebiusbox.github.io/blog/2024/04/03/prune-zoxide-database#powershell%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88">​</a></h2>
<p>本題のスクリプトです．やっていることはエントリをスコア付きでリストアップし、各エントリごとにディレクトリの存在チェック、そしてスコアをチェックして、削除対象であれば、エントリをデータベースから削除します．削除するには<code>zoxide remove</code>コマンドを使います．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> Prune-ZoxideDB</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[double]</span><span class="token variable" style="color:#f8f8f2">$threshold</span><span class="token plain">=1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[Console]</span><span class="token plain">::OutputEncoding = </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[Text.UTF8Encoding]</span><span class="token plain">::UTF8</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Score threshold = {0}"</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">f </span><span class="token variable" style="color:#f8f8f2">$threshold</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$total</span><span class="token plain"> = 0</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$count</span><span class="token plain"> = 0</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    zoxide query </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">all </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">score </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$total</span><span class="token operator" style="color:#66d9ef">++</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-match</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'([0-9]+\.[0-9]+)\s+(.+)'</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token variable" style="color:#f8f8f2">$score</span><span class="token plain"> = </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[double]</span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">1</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token variable" style="color:#f8f8f2">$path</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">2</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">-Not</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">Test-Path</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">LiteralPath </span><span class="token variable" style="color:#f8f8f2">$path</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                zoxide remove </span><span class="token variable" style="color:#f8f8f2">$path</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Not Exist (removed). [{0}]"</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">f </span><span class="token variable" style="color:#f8f8f2">$path</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                </span><span class="token variable" style="color:#f8f8f2">$count</span><span class="token operator" style="color:#66d9ef">++</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">elseif</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$score</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-lt</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$threshold</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                zoxide remove </span><span class="token variable" style="color:#f8f8f2">$path</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"{0}, {1} (removed)"</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">f </span><span class="token variable" style="color:#f8f8f2">$score</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$path</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                </span><span class="token variable" style="color:#f8f8f2">$count</span><span class="token operator" style="color:#66d9ef">++</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"total={0} removed={1}"</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">f </span><span class="token variable" style="color:#f8f8f2">$total</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$count</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>標準でスコアは 1.0 未満を削除するようにしています．</li>
<li>コンソールに詳細（日本語含む）を出力するためにUTF8エンコーディングに変更しています．</li>
</ul>
<p>次のように使います．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">Prune-ZoxideDB</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Prune-ZoxideDB 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">8</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以上です．</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>注記</div><div class="admonitionContent_BuS1"><p>PowerShellのcdコマンド(Set-Location)では名前の先頭に<code>[]</code>があると、ディレクトリ名として正しく認識できません．その場合、<code>-LiteralPath</code> を指定する必要があります．</p><ul>
<li><a href="https://github.com/PowerShell/PowerShell/issues/16476" target="_blank" rel="noopener noreferrer">https://github.com/PowerShell/PowerShell/issues/16476</a></li>
<li><a href="https://github.com/ajeetdsouza/zoxide/issues/312" target="_blank" rel="noopener noreferrer">https://github.com/ajeetdsouza/zoxide/issues/312</a></li>
</ul><p>例えば、次のように標準の cd エイリアスを無効にして、新しいcd関数を定義することができます．</p><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">Test-Path</span><span class="token plain"> alias:cd</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">Remove-Alias</span><span class="token plain"> cd</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> cd </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[string]</span><span class="token variable" style="color:#f8f8f2">$Path</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">Set-Location</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">LiteralPath </span><span class="token variable" style="color:#f8f8f2">$Path</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>powershellのエイリアスはパラメータを指定することが出来ないため、関数として定義します．この方法でも zoxide は有効になります．</p></div></div>]]></content:encoded>
            <category>zoxide</category>
            <category>powershell</category>
        </item>
        <item>
            <title><![CDATA[gitui で Pending Other に Other が表示される]]></title>
            <link>https://mebiusbox.github.io/blog/2024/03/11/gitui-pending-other</link>
            <guid>https://mebiusbox.github.io/blog/2024/03/11/gitui-pending-other</guid>
            <pubDate>Mon, 11 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[gitui で Pending Other に Other が表示されたので対応したこと]]></description>
            <content:encoded><![CDATA[<p>ターミナルでのgit管理に<a href="https://github.com/extrawurst/gitui" target="_blank" rel="noopener noreferrer">gitui</a>を使っています．
細かい操作をUIで操作するときに便利です．
ところで、ローカルで作業中のリポジトリでgituiを実行すると画面に「Pending Other」が表示されていることに気づきました．何かが終わっていない、途中の状態というのは何となくわかるのですが、これだけでは詳しいことがわかりません．ここでは備忘録として対応したことを書いておきます．</p>
<p>具体的には次のような画面のように、「Pending Other」のウィンドウが表示され、内容は「Other」となっています．</p>
<p><img decoding="async" loading="lazy" alt="gitui" src="https://mebiusbox.github.io/assets/images/03-11-gitui-pending-other-240311-192012-b73f26e2f5ecffdc61c2402371f541ce.png" width="939" height="444" class="img_ev3q"></p>
<p>これに関する情報がほとんど見つけられなかったので、とりあえずgituiのソースコードを確認してみることにしました．
どうやらリポジトリのステートを表しているようです．</p>
<div class="language-rust codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">src/sync/state.rs</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-rust codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">pub</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:#e6db74">RepoState</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token comment" style="color:#8292a2;font-style:italic">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token class-name" style="color:#e6db74">Clean</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token comment" style="color:#8292a2;font-style:italic">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token class-name" style="color:#e6db74">Merge</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token comment" style="color:#8292a2;font-style:italic">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token class-name" style="color:#e6db74">Rebase</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token comment" style="color:#8292a2;font-style:italic">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token class-name" style="color:#e6db74">Revert</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token comment" style="color:#8292a2;font-style:italic">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">	</span><span class="token class-name" style="color:#e6db74">Other</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>Clean</code>以外のステートのときに画面に表示されるようになっていました．
結局、まだ詳しいことはわからないので、<code>.git</code>ディレクトリの中を他のリポジトリのものと比較してみることにしました．
そうすると、「Pending Other」が表示されるリポジトリの<code>.git</code>ディレクトリの中に<code>rebase-apply</code>というディレクトリが存在していました．中身は空です．どうやら、Rebaseが中途半端な状態だったようです．といってもRebaseをした覚えがないので、何か間違った操作をしてRebaseしようとしたのかもしれません．ということで、この<code>rebace-apply</code>ディレクトリを削除することで「Pending Other」は表示されなくなりました．</p>
<p>以上です．</p>]]></content:encoded>
            <category>gitui</category>
        </item>
        <item>
            <title><![CDATA[Espanso の force_clipboard について]]></title>
            <link>https://mebiusbox.github.io/blog/2023/12/23/espanso-force-clipboard</link>
            <guid>https://mebiusbox.github.io/blog/2023/12/23/espanso-force-clipboard</guid>
            <pubDate>Sat, 23 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Espanso で置換文字に改行が含まれる時の問題]]></description>
            <content:encoded><![CDATA[<p><a href="https://espanso.org/" target="_blank" rel="noopener noreferrer">Espanso</a> というテキスト入力支援ソフトで置換文字が改行を含んでいる場合に起こる問題とその対応方法についてまとめました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="espanso-とは">Espanso とは<a class="hash-link" aria-label="Espanso とは への直接リンク" title="Espanso とは への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/23/espanso-force-clipboard#espanso-%E3%81%A8%E3%81%AF">​</a></h2>
<p><a href="https://espanso.org/" target="_blank" rel="noopener noreferrer">Espanso</a> はテキスト入力支援ソフトです．WindowsやMacOSでも使えます．あらかじめトリガー文字と置換文字を指定しておくと、トリガー文字が入力されると同時に置換文字に置き換わります．Espanso では置換文字にクリップボードの内容やスクリプトの実行結果など様々な機能が利用できます．テキスト入力支援ソフトは他にも様々なものがあります．例えば、<a href="https://www.trankynam.com/atext/" target="_blank" rel="noopener noreferrer">aText</a> があります．また、<a href="https://sites.google.com/site/craftware/keyhac-ja" target="_blank" rel="noopener noreferrer">keyhac</a> を使って同様のことも出来るでしょう．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="改行を含んでいる場合の問題となるケース">改行を含んでいる場合の問題となるケース<a class="hash-link" aria-label="改行を含んでいる場合の問題となるケース への直接リンク" title="改行を含んでいる場合の問題となるケース への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/23/espanso-force-clipboard#%E6%94%B9%E8%A1%8C%E3%82%92%E5%90%AB%E3%82%93%E3%81%A7%E3%81%84%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E5%95%8F%E9%A1%8C%E3%81%A8%E3%81%AA%E3%82%8B%E3%82%B1%E3%83%BC%E3%82%B9">​</a></h2>
<p>Espanso には文字を置換するときに2つのバックエンドを使い分けて処理します．<code>Inject</code>と<code>Clipboard</code>です．</p>
<p><code>Inject</code>はキー入力をシミュレートし、<code>Clipboard</code>はクリップボードを経由して置換します．このバックエンドは設定で切り替えることが出来ます．標準で <code>Auto</code> となっており、トリガー時に自動で切り替わります．</p>
<p>問題となるのは <code>Enterキー</code> が改行ではなくショートカットなどに割り当てられている場合です．その場合 <code>Inject</code> だと適切に処理されません．
ではどうするかというとバックエンドに<code>Clipboard</code>を指定すればいいことになります．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="バックエンドに-clipboard-を使う方法">バックエンドに Clipboard を使う方法<a class="hash-link" aria-label="バ�ックエンドに Clipboard を使う方法 への直接リンク" title="バックエンドに Clipboard を使う方法 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/23/espanso-force-clipboard#%E3%83%90%E3%83%83%E3%82%AF%E3%82%A8%E3%83%B3%E3%83%89%E3%81%AB-clipboard-%E3%82%92%E4%BD%BF%E3%81%86%E6%96%B9%E6%B3%95">​</a></h2>
<p>3つの方法があります．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="すべてに-clipboard-バックエンドを使う">すべてに Clipboard バックエンドを使う<a class="hash-link" aria-label="すべてに Clipboard バックエンドを使う への直接リンク" title="すべてに Clipboard バックエンドを使う への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/23/espanso-force-clipboard#%E3%81%99%E3%81%B9%E3%81%A6%E3%81%AB-clipboard-%E3%83%90%E3%83%83%E3%82%AF%E3%82%A8%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%86">​</a></h3>
<p>設定ファイルで次のように設定します．</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">default.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key atrule">backend</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> clipboard</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="clipboard_threshold-を設定する">clipboard_threshold を設定する<a class="hash-link" aria-label="clipboard_threshold を設定する への直接リンク" title="clipboard_threshold を設定する への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/23/espanso-force-clipboard#clipboard_threshold-%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B">​</a></h3>
<p>Clipboard バックエンドを使用する閾値を設定します．標準で <code>100</code> に設定されています．この閾値を超えると Clipboard バックエンドが利用されます．
これは <code>backend</code> が <code>Auto</code> のとき（標準）に機能します．</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">default.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key atrule">clipboard_threshold</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">20</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="force_clipboard-を設定する">force_clipboard を設定する<a class="hash-link" aria-label="force_clipboard を設定する への直接リンク" title="force_clipboard を設定する への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/23/espanso-force-clipboard#force_clipboard-%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B">​</a></h3>
<p>上記2つの方法はすべてのトリガーに適用されるのですが、 <code>force_clipboard</code> を使ってトリガーごとに Clipboardバックエンドを使うかどうか設定することができます．
次のように指定します．</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">-</span><span class="token plain"> </span><span class="token key atrule">trigger</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Hello"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">replace</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Hello, World"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">force_clipboard</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#ae81ff">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>この <code>force_clipboard</code> は公式ドキュメントには見当たらず、ソースコードを見るか、Issues で見つけることができます．
もしかすると将来的に無くなるかもしれません．</p>
<p>また、<code>force_mode</code> でも指定することができます．これはドキュメントにも<a href="https://espanso.org/docs/matches/basics/#injection-mechanism" target="_blank" rel="noopener noreferrer">記載</a>があるのでこちらを使った方がいいかもしれません．<code>force_mode</code> で指定する場合は <code>clipboard</code> または <code>keys</code> を指定します．</p>
<div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">-</span><span class="token plain"> </span><span class="token key atrule">trigger</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Hello"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">replace</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Hello, World"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">force_mode</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> clipboard</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="さいごに">さいごに<a class="hash-link" aria-label="さいごに への直接リンク" title="さいごに への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/23/espanso-force-clipboard#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB">​</a></h2>
<p>結局、Clipboard バックエンドを常に使うようにしておくのもありですし、環境によって適切な設定をすればいいと思います．
以上です．</p>]]></content:encoded>
            <category>Espanso</category>
        </item>
        <item>
            <title><![CDATA[Three.jsのカラー管理]]></title>
            <link>https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace</link>
            <guid>https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace</guid>
            <pubDate>Sat, 16 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Three.jsの最新のカラー管理について]]></description>
            <content:encoded><![CDATA[<p>Three.js のカラー管理は r152 から ColorSpace に変わりました．レンダリングにおいて結構大事なところなので調べてみました．</p>
<p>この記事は、前回 <a href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159">Three.js を r116 から r159 にアップデートしたこと</a> の続きです．
Three.js のバージョンを上げたときに <code>WebGLRenderer</code> の <code>.gammaInput</code>, <code>.gammaOutput</code> が無くなっていました．これはガンマ変換を制御するパラメータなのですが、最新版では <code>.outputColorSpace</code> となっており、 カラー空間を指定するように変更されています．ちなみに、その前は <code>.outputEncoding</code> という名前でカラーエンコーディングを指定するようになっていました．Three.js のカラー管理については公式のドキュメント<sup><a id="user-content-fnref-1-0e8825" data-footnote-ref="true" aria-describedby="footnote-label" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#user-content-fn-1-0e8825">1</a></sup>にもあります（今のところ日本語訳はありません）．この記事はそのドキュメントに基づいて書いています．また、three.js のソースコードは r159 のものを参考にしています．</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>備考</div><div class="admonitionContent_BuS1"><p>Three.js のドキュメントでは、前提知識として原色、白色点、伝達関数、カラーモデル、色域について説明があります．興味がある方は読んでみてください．
ここでは詳しく触れません．</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="リニアワークフロー">リニアワークフロー<a class="hash-link" aria-label="リニアワークフロー への直接リンク" title="リニアワークフロー への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#%E3%83%AA%E3%83%8B%E3%82%A2%E3%83%AF%E3%83%BC%E3%82%AF%E3%83%95%E3%83%AD%E3%83%BC">​</a></h2>
<p>カラー管理はリニアワークフローのためにあります．リニアワークフローについては以下のサイトが参考になるでしょう：</p>
<ul>
<li><a href="http://compojigoku.blog.fc2.com/blog-entry-26.html" target="_blank" rel="noopener noreferrer">分かる！リニアワークフローのコンポジット</a></li>
<li><a href="https://tech.cygames.co.jp/archives/2296/" target="_blank" rel="noopener noreferrer">物理ベースレンダリング -リニアワークフロー編</a></li>
</ul>
<p>Three.jsでは主に sRGB 空間と Linear-sRGB 空間を扱います（他には <a href="https://k-tai.watch.impress.co.jp/docs/column/keyword/1288035.html" target="_blank" rel="noopener noreferrer">Display-P3</a> があります）．基本として内部では Linear-sRGB 空間で処理し、Canvas に描画するときに sRGB 空間に変換して描画します．（Working color space と Output color space 参照<sup><a id="user-content-fnref-1-0e8825-2" data-footnote-ref="true" aria-describedby="footnote-label" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#user-content-fn-1-0e8825">1</a></sup>）．重要なのは色を扱うときにカラー空間が影響してくるということです．特に THREE.Color（マテリアルやライト、シェーダ、頂点カラー）やテクスチャを扱っている場合に問題になってくることがあります．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="threejs-のカラー管理">Three.js のカラー管理<a class="hash-link" aria-label="Three.js のカラー管理 への直接リンク" title="Three.js のカラー管理 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#threejs-%E3%81%AE%E3%82%AB%E3%83%A9%E3%83%BC%E7%AE%A1%E7%90%86">​</a></h2>
<p>Three.js のカラー管理は標準で有効になっています．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">three/src/math/ColorManagement.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token maybe-class-name">ColorManagement</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token literal-property property" style="color:#f92672">enabled</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token spread operator" style="color:#66d9ef">...</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>実際、以下のようにログを出力して確認すると <code>true</code> になっています．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token console class-name" style="color:#e6db74">console</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">log</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token constant" style="color:#e6db74">THREE</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access maybe-class-name">ColorManagement</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">enabled</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic">// true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>先ほど述べたように Three.js の内部では Linear-sRGB で処理しています．また、レンダリングの出力では標準で sRGB となっています．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> renderer </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">THREE</span><span class="token class-name punctuation" style="color:#f8f8f2">.</span><span class="token class-name" style="color:#e6db74">WebGLRenderer</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token console class-name" style="color:#e6db74">console</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">log</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">renderer</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">outputColorSpace</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic">// srgb</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>次に、カラースペースの定義は次のようになっています．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">three/src/constants.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token comment" style="color:#8292a2;font-style:italic">// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token maybe-class-name">NoColorSpace</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">''</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token maybe-class-name">SRGBColorSpace</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'srgb'</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token maybe-class-name">LinearSRGBColorSpace</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'srgb-linear'</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token maybe-class-name">DisplayP3ColorSpace</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'display-p3'</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token maybe-class-name">LinearDisplayP3ColorSpace</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'display-p3-linear'</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="threecolor">THREE.Color<a class="hash-link" aria-label="THREE.Color への直接リンク" title="THREE.Color への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#threecolor">​</a></h2>
<p>カラー管理が何を行っているのか、THREE.Color を例に見てみましょう．
以下は <code>setHex</code> メソッドの実装です．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">setHex</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token parameter">hex</span><span class="token parameter punctuation" style="color:#f8f8f2">,</span><span class="token parameter"> colorSpace </span><span class="token parameter operator" style="color:#66d9ef">=</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">SRGBColorSpace</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    hex </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#e6db74">Math</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">floor</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> hex </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">r</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> hex </span><span class="token operator" style="color:#66d9ef">&gt;&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">16</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">255</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">/</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">255</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">g</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> hex </span><span class="token operator" style="color:#66d9ef">&gt;&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">8</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">255</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">/</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">255</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">b</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> hex </span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">255</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">/</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">255</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token maybe-class-name">ColorManagement</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">toWorkingColorSpace</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> colorSpace </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>ColorManagement.toWorkingColorSpace</code> でカラー空間を調整しています．Working color space とは Three.js 内部でのカラー空間のことを指しています．
Three.js 内部のカラー空間は標準で Linear-sRGB 空間でした．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">three/src/math/ColorManagemnt.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token maybe-class-name">ColorManagement</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token spread operator" style="color:#66d9ef">...</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token literal-property property" style="color:#f92672">_workingColorSpace</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token maybe-class-name">LinearSRGBColorSpace</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">get</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">workingColorSpace</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">_workingColorSpace</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token spread operator" style="color:#66d9ef">...</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>sexHex</code> では、入力カラー空間 <code>colorSpace</code> から Three.js 内部でのカラー空間への変換が行われていることがわかります．
実際の相互変換処理は Linear-sRGB 空間を経由して行われています．sRGB も Display P3 も Linear-sRGB 空間に変換してから、別のカラー空間に変換しています．
もちろん、カラー管理が無効になっていたり、入力と出力が同じカラー空間であれば何もしません．</p>
<p><code>setHex</code> や <code>setStyle</code>, <code>setColorName</code> は入力カラー空間が <code>sRGB</code> になっているのに対して、<code>setRGB</code> や <code>setScalar</code>, <code>setHSL</code> は Working color space になっていることに注意が必要です．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">three/src/math/Color.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">setRGB</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token parameter">r</span><span class="token parameter punctuation" style="color:#f8f8f2">,</span><span class="token parameter"> g</span><span class="token parameter punctuation" style="color:#f8f8f2">,</span><span class="token parameter"> b</span><span class="token parameter punctuation" style="color:#f8f8f2">,</span><span class="token parameter"> colorSpace </span><span class="token parameter operator" style="color:#66d9ef">=</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">ColorManagement</span><span class="token parameter punctuation" style="color:#f8f8f2">.</span><span class="token parameter property-access">workingColorSpace</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">r</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> r</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">g</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> g</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">b</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> b</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token maybe-class-name">ColorManagement</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">toWorkingColorSpace</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> colorSpace </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>THREE.Color には sRGB 空間と Linear-sRGB 空間への変換メソッドが用意されています．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">three/src/math/Color.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">copySRGBToLinear</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token parameter">color</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">r</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#e6db74">SRGBToLinear</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> color</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">r</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">g</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#e6db74">SRGBToLinear</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> color</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">g</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">b</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#e6db74">SRGBToLinear</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> color</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">b</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">copyLinearToSRGB</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token parameter">color</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">r</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#e6db74">LinearToSRGB</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> color</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">r</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">g</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#e6db74">LinearToSRGB</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> color</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">g</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">b</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#e6db74">LinearToSRGB</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> color</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">b</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">convertSRGBToLinear</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">copySRGBToLinear</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">convertLinearToSRGB</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">copyLinearToSRGB</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>LinearToSRGB</code> と <code>SRGBToLinear</code> は次のようになっています．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#e6db74">SRGBToLinear</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token parameter">c</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> c </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.04045</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">?</span><span class="token plain"> c </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.0773993808</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#e6db74">Math</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">pow</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> c </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.9478672986</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.0521327014</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">2.4</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#e6db74">LinearToSRGB</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token parameter">c</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> c </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.0031308</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">?</span><span class="token plain"> c </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">12.92</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1.055</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#e6db74">Math</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">pow</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> c</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.41666</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.055</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>set系のメソッドを見てきましたが、get系メソッドでも同様の変換処理が行われています．
ちなみに、このカラー管理を有効にすることは推奨となっています．
これからわかるように例えば <code>#123456</code> の値を <code>setHex</code> で設定したものと、<code>#123456</code> をRGBに変換して 255 で割った値をカラー空間を適切に設定せずにそのまま setRGB で設定すると結果が異なります．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="マテリアルやライトは">マテリアルやライトは？<a class="hash-link" aria-label="マテリアルやライトは？ への直接リンク" title="マテリアルやライトは？ への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#%E3%83%9E%E3%83%86%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%84%E3%83%A9%E3%82%A4%E3%83%88%E3%81%AF">​</a></h2>
<p>これらは Working color space (標準では Linear-sRGB) での値と見なされます．
<code>BufferAttributes</code>での頂点カラーも同様です．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="テクスチャ">テクスチャ<a class="hash-link" aria-label="テクスチャ への直接リンク" title="テクスチャ への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#%E3%83%86%E3%82%AF%E3%82%B9%E3%83%81%E3%83%A3">​</a></h2>
<p>一番注意しなければならないのがテクスチャでしょう．
テクスチャがどのカラー空間なのかは自動で判別することはできないので、データ製作者および開発者側が適切なカラー空間を設定する必要があります．</p>
<p>テクスチャのカラー空間は <code>.colorSpace</code> プロパティで設定します．標準では <code>NoColorSpace</code> となっています．つまり、何も変換しません．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">three/src/textures/Texture.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">class</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Texture</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">EventDispatcher</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">constructor</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token parameter spread operator" style="color:#66d9ef">...</span><span class="token parameter punctuation" style="color:#f8f8f2">,</span><span class="token parameter"> colorSpace </span><span class="token parameter operator" style="color:#66d9ef">=</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">NoColorSpace</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token spread operator" style="color:#66d9ef">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>例えば、カラーテクスチャ (Diffuse) を読み込んでテクスチャに設定する場合、sRGB 空間のデータならばカラー空間を設定します．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> textureLoader </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">THREE</span><span class="token class-name punctuation" style="color:#f8f8f2">.</span><span class="token class-name" style="color:#e6db74">TextureLoader</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">textureLoader</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">load</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'textures/diffuse.jpg'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token parameter">map</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    map</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">colorSpace</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token constant" style="color:#e6db74">THREE</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access maybe-class-name">SRGBColorSpace</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>テクスチャに設定した ColorSpace はどのような処理を行っているのでしょうか．<code>three/src/renderers/webgl/WebGLTextures.js</code> を見てみると、WebGL のバージョンによって挙動が異なっているようです．WebGL1では場合によってCPU側で変換しているようです．WebGL2ではテクスチャのバッファーフォーマットで対応しているようです．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="レンダーテクスチャ">レンダーテクスチャ<a class="hash-link" aria-label="レンダーテクスチャ への直接リンク" title="レンダーテクスチャ への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#%E3%83%AC%E3%83%B3%E3%83%80%E3%83%BC%E3%83%86%E3%82%AF%E3%82%B9%E3%83%81%E3%83%A3">​</a></h3>
<p>他にテクスチャを使っているところはレンダーターゲットのフレームバッファテクスチャです．
こちらも標準で <code>NoColorSpace</code> となっています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="出力カラー空間">出力カラー空間<a class="hash-link" aria-label="出力カラー空間 への直接リンク" title="出力カラー空間 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#%E5%87%BA%E5%8A%9B%E3%82%AB%E3%83%A9%E3%83%BC%E7%A9%BA%E9%96%93">​</a></h2>
<p><code>WebGLRenderer.outputColorSpace</code> で出力カラー空間を設定できることは述べました．
この値はどのように使われるのでしょうか？</p>
<p>マテリアルを使って描画するときに内部ではシェーダを生成していますが、そのときに使われています．
シェーダのお話になりますが、内部で <code>linearToOutputTexel</code> という関数を定義し、ピクセルシェーダの出力時に変換を行います．
MeshBasicMaterial や MeshStandardMaterial は自動で処理されますが、ShaderMaterial や RawShaderMaterial では自動で行ってくれません．
この場合、適切に処理する必要があります．</p>
<p>ShaderMaterial の場合は対応が簡単で、シェーダコードの中に <code>#include &lt;colorspace_framgent&gt;</code> を入れれば処理するようになります．
例えば次のようになります．</p>
<div class="language-c++ codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c++ codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">gl_FragColor = vec4( outputColor, outputAlpha );</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">#include &lt;colorspace_fragment&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>これは <code>gl_FragColor</code> に出力した後に入れます．ちなみに <code>colorspace_fragment</code> シェーダチャンクの中身は次のようになっています．</p>
<div class="language-c++ codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c++ codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">gl_FragColor = linearToOutputTexel( gl_FragColor );</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>RawShaderMaterial の場合は自分で実装する必要があります．
ちょっと面倒なので、 RawShaderMaterial は Working color space で処理して、最終的な出力などには ShaderMaterial などを使った方が楽な気がします．
ポストプロセスなど、WebGLRenderTarget に描画して色々やっている場合、特に何もしてなければ <code>NoColorSpace</code> なので今までと処理は変わりません．
レンダーターゲットが null のときに RawShaderMaterial を使っている場合、対応しないと <code>WebGLRenderer.outputColorSpace</code> は効果がありません．</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>備考</div><div class="admonitionContent_BuS1"><p>Working color space は自由に書き換えることができるので、何か問題が起きたときに確認した方がいいかもしれません．</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token constant" style="color:#e6db74">THREE</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access maybe-class-name">ColorManagement</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">workingColorSpace</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token constant" style="color:#e6db74">THREE</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access maybe-class-name">LinearDisplayP3ColorSpace</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="さいごに">さいごに<a class="hash-link" aria-label="さいごに への直接リンク" title="さいごに への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB">​</a></h2>
<p>Three.js のカラー管理について調べたことをまとめました．
カラー空間が関係するメソッドには引数にカラー空間があったり、GLTFLoader などローダーが適切にテクスチャなどのカラー空間を設定する場合もあります．
何か勝手にやられると困るから全部自分でやってやるという場合には ColorManagement を無効にするのもありかもしれません．
今後、大きく変更があるとは思えないですが重要な部分ですので、レンダリングしたときに色がおかしいなと思ったらカラー空間を見直してみるのもありでしょう．</p>
<p>何か抜けがあったり間違っているところがあるかもしれません．その場合は、ご連絡いただけると幸いです．
以上です．</p>
<hr>
<!-- -->
<section data-footnotes="true" class="footnotes"><h2 class="anchor anchorWithStickyNavbar_LWe7 sr-only" id="footnote-label">Footnotes<a class="hash-link" aria-label="Footnotes への直接リンク" title="Footnotes への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#footnote-label">​</a></h2>
<ol>
<li id="user-content-fn-1-0e8825">
<p><a href="https://threejs.org/docs/index.html#manual/en/introduction/Color-management" target="_blank" rel="noopener noreferrer">Color Management</a> <a data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#user-content-fnref-1-0e8825">↩</a> <a data-footnote-backref="" aria-label="Back to reference 1-2" class="data-footnote-backref" href="https://mebiusbox.github.io/blog/2023/12/16/threejs-colorspace#user-content-fnref-1-0e8825-2">↩<sup>2</sup></a></p>
</li>
</ol>
</section>]]></content:encoded>
            <category>Three.js</category>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[Three.js を r116 から r159 にアップデートしたこと]]></title>
            <link>https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159</link>
            <guid>https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159</guid>
            <pubDate>Fri, 15 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Pixy.js で使用している Three.js のバージョンを r116 から r159 まで上げました]]></description>
            <content:encoded><![CDATA[<p>最近、<a href="https://github.com/mebiusbox/pixy.js" target="_blank" rel="noopener noreferrer">Pixy.js</a> で使用している Three.js のバージョンを r116 から最新の r159 までアップデートしたので、それについてまとめておきます．</p>
<p><a href="http://mebiusbox.github.io/contents/EffectTextureMaker/" target="_blank" rel="noopener noreferrer">EffectTextureMaker</a>というエフェクト用のテクスチャを作成するツールを公開しているのですが、ちょくちょく要望が来たり質問されたりしていました．
機能を追加する前に、まずは最新の環境に更新することにしました．EffectTextureMakerでは自作したシェーダライブラリ Pixy.js を使用しているのですが、これは Three.js を使って実装しています．なので、Three.js を最新にアップデートする必要があります．長い間手をつけずにいたのでバージョンが r116 から最新の r159 まで2年間もの期間が空いたことになります．その間に Three.js も色々変わっていました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="threejs-で気になった変更部分">Three.js で気になった変更部分<a class="hash-link" aria-label="Three.js で気になった変更部分 への直接リンク" title="Three.js で気になった変更部分 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#threejs-%E3%81%A7%E6%B0%97%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%9F%E5%A4%89%E6%9B%B4%E9%83%A8%E5%88%86">​</a></h2>
<p>2020年5月に Three.js の r116 がリリースされ、同時に Pixy.js も更新していました．そこで r116 まで遡ってログを見直しました．以下が気になった変更点です．ほとんどが対応する必要がありました．</p>
<ul>
<li>ESM への対応 (three.module.js, three.module.min.js)</li>
<li>ライブラリが /lib から アドオン /jsm に変わった</li>
<li>インポートマップを使ってライブラリをインポートし、ESM で実装するようになった</li>
<li>dat.GUI から lil-gui に変更された</li>
<li>WebGL2 の対応 (GLSL3)</li>
<li>WebGPURenderer実装された</li>
<li>Matrix の getInverse() が廃止され、 invert() に変更された</li>
<li>PlaneBufferGeometry などがなくなり PlaneGeometry というように単純になった</li>
<li>BufferGeometryUtils にあった computeTangents が BufferGeometry に実装された</li>
<li>Geometryの頂点が .vertices ではなく BufferAttribute 経由で取得するようになった</li>
<li>WebGLMultipleRenderTargets (MRT) が実装された</li>
<li>UBO (Uniform Buffer Objects)対応</li>
<li>RGBFormat が無くなった</li>
<li>CommonJS 形式である three.js, three.min.js が deprecated．r160 で削除される予定（コンソールに警告が出力される）</li>
<li>カラー管理が colorspace になった</li>
</ul>
<p>ということで、以下対応した内容です．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="esmoduleの対応">ESModuleの対応<a class="hash-link" aria-label="ESModuleの対応 への直接リンク" title="ESModuleの対応 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#esmodule%E3%81%AE%E5%AF%BE%E5%BF%9C">​</a></h2>
<p>Pixy.js の一部のコードは ESM 形式になっていたので、他の部分も ESM に書き直しました．
また、ES6の class で再実装するようにしました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rollupの更新">Rollupの更新<a class="hash-link" aria-label="Rollupの更新 への直接リンク" title="Rollupの更新 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#rollup%E3%81%AE%E6%9B%B4%E6%96%B0">​</a></h2>
<p>Pixy.js は Three.js と同様に rollup でまとめています．こちらも ESModule 形式で出力するようにしました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="サンプルの修正">サンプルの修正<a class="hash-link" aria-label="サンプルの修正 への直接リンク" title="サンプルの修正 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AE%E4%BF%AE%E6%AD%A3">​</a></h2>
<p>インポートマップを使用し、すべてを ESM に変更．また、JavaScriptファイルを外部に出してメンテナンスしやすいようにしました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="アドオン">アドオン<a class="hash-link" aria-label="アドオン への直接リンク" title="アドオン への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#%E3%82%A2%E3%83%89%E3%82%AA%E3%83%B3">​</a></h2>
<p>アドオンになってインポートするコードは次のようになります．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword module" style="color:#66d9ef">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">WebGL</span><span class="token plain"> </span><span class="token keyword module" style="color:#66d9ef">from</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'three/addons/capabilities/WebGL.js'</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Stats</span><span class="token plain"> </span><span class="token keyword module" style="color:#66d9ef">from</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'three/addons/libs/stats.module.js'</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#f8f8f2">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">OrbitControls</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#66d9ef">from</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'three/addons/controls/OrbitControls.js'</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>使用するときに THREE をつけないので微妙に違和感を感じます．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="matrixinvert">Matrix.invert()<a class="hash-link" aria-label="Matrix.invert() への直接リンク" title="Matrix.invert() への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#matrixinvert">​</a></h2>
<p>具体的には以下のようなコード：</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">projectionCamera</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">matrixWorldInverse</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">getInverse</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">projectionCamera</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">matrixWorld</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>これが次のようになります．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">projectionCamera</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">matrixWorldInverse</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">copy</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> projectionCamera</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">matrixWorld</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">invert</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>これは <code>normalize()</code> などと同じ書き方になりました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="buffergeometryutilscomputetangents">BufferGeometryUtils.computeTangents()<a class="hash-link" aria-label="BufferGeometryUtils.computeTangents() への直接リンク" title="BufferGeometryUtils.computeTangents() への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#buffergeometryutilscomputetangents">​</a></h2>
<p>BufferGeometry に移動したので楽になりました．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> sphereGeometry </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">THREE</span><span class="token class-name punctuation" style="color:#f8f8f2">.</span><span class="token class-name" style="color:#e6db74">SphereBufferGeometry</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">2</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">64</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">64</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token constant" style="color:#e6db74">THREE</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access maybe-class-name">BufferGeometryUtils</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">computeTangents</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sphere</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">geometry</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>変更後．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> sphereGeometry </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">THREE</span><span class="token class-name punctuation" style="color:#f8f8f2">.</span><span class="token class-name" style="color:#e6db74">SphereGeometry</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">2</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">64</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">64</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">sphereGeometry</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">computeTangents</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="webglmultiplerendertargets-mrt">WebGLMultipleRenderTargets (MRT)<a class="hash-link" aria-label="WebGLMultipleRenderTargets (MRT) への直接リンク" title="WebGLMultipleRenderTargets (MRT) への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#webglmultiplerendertargets-mrt">​</a></h2>
<p>MRTがThree.jsにも実装されました．Pixy.js の<a href="https://mebiusbox.github.io/contents/pixyjs/samples/shader_deferred.html" target="_blank" rel="noopener noreferrer">ディファードレンダリング</a>の部分で使用しています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="xxxbuffergeometry">XXXBufferGeometry<a class="hash-link" aria-label="XXXBufferGeometry への直接リンク" title="XXXBufferGeometry への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#xxxbuffergeometry">​</a></h2>
<p>単純に Buffer を消せば問題ありませんでした．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rgbformat">RGBFormat<a class="hash-link" aria-label="RGBFormat への直接リンク" title="RGBFormat への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#rgbformat">​</a></h2>
<p>レンダーターゲットの生成時に指定していたのですが、定数から消えていました．
標準で RGBAFormat であり、alpha パラメータで制御するようになったのかもしれません．詳しく調べていないです．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="カラー空間">カラー空間<a class="hash-link" aria-label="カラー空間 への直接リンク" title="カラー空間 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#%E3%82%AB%E3%83%A9%E3%83%BC%E7%A9%BA%E9%96%93">​</a></h2>
<p>r152 で ColorManagement API が ColorSpace ベースになりました．最初は gammaInput, gammaOutput、次に outputEncoding 、そして今は outputColorSpace になったようです．これについては別のエントリで書こうと思います（まだ調査中）．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="lil-gui">lil-gui<a class="hash-link" aria-label="lil-gui への直接リンク" title="lil-gui への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#lil-gui">​</a></h2>
<p>GUIメニューの表示に dat.GUI が使われていましたが、lil-gui に変更されました．
ある程度互換がありますが、完全に互換があるわけではありません．lil-gui に dat.GUI からの<a href="https://lil-gui.georgealways.com/#Migrating" target="_blank" rel="noopener noreferrer">マイグレーションガイド</a>があるので参考になります．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="glsl3">GLSL3<a class="hash-link" aria-label="GLSL3 への直接リンク" title="GLSL3 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#glsl3">​</a></h2>
<p>ShaderMaterial の <code>glslVersion</code> で指定することができます．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">shaderMaterial</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">glslVersion</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token constant" style="color:#e6db74">THREE</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token constant" style="color:#e6db74">GLSL3</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Three.js 側でマクロを使って GLSL3 でコンパイルできるようになっているので、前のバージョンで書かれたシェーダコードでもそのままコンパイルされるようです．
ですが、RawShaderMaterial を使っている場合は自分で対応しなければなりません．
GLSL3 のシェーダコードは先頭に <code>#version 300 es</code> を入れるのですが、RawShaderMaterialでも自動で入れてくれます．
ここで、<code>fwidth</code> などを使うために以下のコードを入れる必要があって、RawShaderMaterialを使う場合はこちらでシェーダコードに入れてました．</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">#extension GL_OES_standard_derivatives : enable</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>どうもこの辺りの宣言順番が問題となってGLSL3にするとコンパイルエラーとなっていました．
結局 ShaderMaterial の extensions で derivatives を有効にすることで対応できました．</p>
<p>基本的に Three.js と同様に GLSL3 への対応はマクロを使って対応し、シェーダコードは以前のままになっているのですが、MRTを使った部分だけは <code>layout(location)</code> を使っています．GLSL3 では <code>gl_FlagData</code> は使えないので．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="webglrendererrender">WebGLRenderer.render()<a class="hash-link" aria-label="WebGLRenderer.render() への直接リンク" title="WebGLRenderer.render() への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#webglrendererrender">​</a></h2>
<p>引数に WebGLRenderTarget を渡すことが出来たのですが、それが出来なくなっていました．なので、<code>setRenderTarget</code> で設定するようにしました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="おわりに">おわりに<a class="hash-link" aria-label="おわりに への直接リンク" title="おわりに への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/15/bump-threejs-from-r116-to-r159#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB">​</a></h2>
<p>Three.js の対応というよりかは ESModule などの JavaScript 関連や開発環境周りの情報更新の方が大変だった気がします．
以上です．</p>]]></content:encoded>
            <category>Three.js</category>
            <category>JavaScript</category>
        </item>
        <item>
            <title><![CDATA[自分用にVSCodeのアウトライン拡張を作ってみました]]></title>
            <link>https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline</link>
            <guid>https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline</guid>
            <pubDate>Wed, 13 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[VSCodeのアウトラインに見つけやすいシンボルを表示する拡張機能を作りました]]></description>
            <content:encoded><![CDATA[<p>標準でアウトラインに表示されるシンボルは多すぎて使いづらいので、自分好みのシンボルをアウトラインに表示させるようにするために拡張機能を作りました．ここでは開発の備忘録としていくつかまとめておきます．</p>
<!-- -->
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="はじめに">はじめに<a class="hash-link" aria-label="はじめに への直接リンク" title="はじめに への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">​</a></h2>
<p>VSCode の標準機能にあるアウトラインにはシンボル情報が表示されます．設定で一部を非表示に出来たり、<code>Ctrl+F</code>キーを押すと検索で絞り込むことができます．</p>
<p><img decoding="async" loading="lazy" alt="VSCode Outline View" src="https://mebiusbox.github.io/assets/images/2023-12-13-vscode-pixy-notion-231213153911-71867db6b4734b7b457c395dd566f098.png" width="390" height="435" class="img_ev3q"></p>
<p>また、シンボル検索(<code>Ctrl+Shift+O</code>)を使うこともできます．これはコマンドパレットで <code>@</code> と入力しても同じ結果になります．</p>
<p><img decoding="async" loading="lazy" alt="Symbol Search" src="https://mebiusbox.github.io/assets/images/2023-12-13-vscode-pixy-notion-231213165821-59d53bf0df3a362885286fa15f13637a.png" width="702" height="298" class="img_ev3q"></p>
<p>ここで <code>@:</code> と入力すればカテゴリごとに分けて表示されます．</p>
<p><img decoding="async" loading="lazy" alt="Symbol Search with Category" src="https://mebiusbox.github.io/assets/images/2023-12-13-vscode-pixy-notion-231213165920-fe97421d196ffaa794593162fb1961ef.png" width="716" height="248" class="img_ev3q"></p>
<p>検索を使えば事足りそうな気がしますが、しばらく触っていなかったりするとそもそも関数名とか何があるのかを記憶していません．
もう少し自分に優しいシンボル検索がとても欲しいと感じました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="目印と関数">目印と関数<a class="hash-link" aria-label="目印と関数 への直接リンク" title="目印と関数 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline#%E7%9B%AE%E5%8D%B0%E3%81%A8%E9%96%A2%E6%95%B0">​</a></h2>
<p>アウトラインとして欲しいものに「目印（マーク）」と「関数（メソッド）」の2種類があります．
関数は標準の機能でありますが、目印は拡張機能を導入する必要があります．
今回は、アウトラインに目印を表示してくれる拡張機能「<a href="https://marketplace.visualstudio.com/items?itemName=roabramov.marks-to-outline" target="_blank" rel="noopener noreferrer">Marks To Outline</a>」のソースコードを調整して自分好みのアウトライン機能を作りました．</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=roabramov.marks-to-outline" target="_blank" rel="noopener noreferrer" class="card padding--md margin-bottom--sm cardContainer_yMBB"><span class="text--truncate cardTitle_SiGl" title="Marks to outline"><i class="cardIcon_VTdI fas fa-external-link-alt"></i> <!-- -->Marks to outline</span><span class="text--truncate cardDescription_fnmI" title="Adds MARKS symbols to outline view">Adds MARKS symbols to outline view</span></a></p>
<p>次のようなアウトライン表示になります．</p>
<p><img decoding="async" loading="lazy" alt="Pixy Outline View" src="https://mebiusbox.github.io/assets/images/2023-12-13-vscode-pixy-notion-231213170838-9ed047d939c9fbe5ad32cde30be1549e.png" width="396" height="416" class="img_ev3q"></p>
<p>目印は <code>MARK: ***</code> と記述するようになっています．
また、シンボル名にはそれぞれ <code>M: </code>、 <code>F: </code> を付けています．これによってシンボル検索で、目印は <code>@M: </code>、関数は <code>@F: </code> で絞り込むことができます．</p>
<p><img decoding="async" loading="lazy" alt="Search Function Symbols" src="https://mebiusbox.github.io/assets/images/2023-12-13-vscode-pixy-notion-231213172106-6a712f09fdc9f81f0306079777b72dae.png" width="721" height="318" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="Search Mark Symbols" src="https://mebiusbox.github.io/assets/images/2023-12-13-vscode-pixy-notion-231213172155-7e4b4e5d6562a1156c3ef459288e9662.png" width="695" height="219" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vscode拡張機能の作成">VSCode拡張機能の作成<a class="hash-link" aria-label="VSCode拡張機能の作成 への直接リンク" title="VSCode拡張機能の作成 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline#vscode%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD%E3%81%AE%E4%BD%9C%E6%88%90">​</a></h2>
<p>Node.jsの環境で作成します．以下を参考にしました．</p>
<p><a href="https://qiita.com/HelloRusk/items/073b58c1605de224e67e" target="_blank" rel="noopener noreferrer" class="card padding--md margin-bottom--sm cardContainer_yMBB"><span class="text--truncate cardTitle_SiGl" title="VSCode Extensions(拡張機能) 自作入門 〜VSCodeにおみくじ機能を追加する〜"><i class="cardIcon_VTdI fas fa-external-link-alt"></i> <!-- -->VSCode Extensions(拡張機能) 自作入門 〜VSCodeにおみくじ機能を追加する〜</span><span class="text--truncate cardDescription_fnmI" title="VSCode Extensions(拡張機能) 自作入門 〜VSCodeにおみくじ機能を追加する〜">VSCode Extensions(拡張機能) 自作入門 〜VSCodeにおみくじ機能を追加する〜</span></a></p>
<p>まず、<code>yo</code>, <code>generator-code</code> パッケージが必要なのでインストールします．</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">npm i yo generator-code -g</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Node.jsのバージョンも条件を満たすようにアップデートしました．</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">$ node -v</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">v18.17.1</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">$ npm -v</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">10.2.5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ひな形を作成します．</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">$ yo code</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>次に Marks to Outline を参考に実装していきます．
別に Marks to Outline をクローンして編集しても問題ありません．コードが比較的少ない場合は、どのような処理をやっているかを確認するためにもよく書き写しています．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="機能の追加">機能の追加<a class="hash-link" aria-label="機能の追加 への直接リンク" title="機能の追加 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline#%E6%A9%9F%E8%83%BD%E3%81%AE%E8%BF%BD%E5%8A%A0">​</a></h3>
<p>Marks to Outline には目印をアウトラインに表示する機能がすでに入っています．そこに関数を追加します．
関数は目印と同様に正規表現で抽出します．ただし、1行でしか判定していないので正確な関数抽出は出来ません．これは妥協しました．</p>
<p>関数は無視パターンと一致パターンを使って、先に無視パターンで弾いてから一致パターンでチェックするようにしています．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> funcIgnorePatterns </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">"^\\s*[a-zA-Z_][a-zA-Z0-9_]+\\([^;]*\\)[^;\\{]*$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">"^\\s*[a-zA-Z_][a-zA-Z0-9_]+\\([^(=&gt;);]*\\{.*$"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> funcSearchPatterns </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">"^\\s*([a-zA-Z_][a-zA-Z0-9_]+)\\([^;]*$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">"^\\s*([a-zA-Z_][a-zA-Z0-9_]+)&lt;[^\\(]+&gt;\\([^;]*$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">"^\\s*function\\s*([a-zA-Z_][a-zA-Z0-9_]+)\\([^;]*$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">"^\\s*function\\s*([a-zA-Z_][a-zA-Z0-9_]+)&lt;[^\\(]+&gt;\\([^;]*$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">"^\\s*(?:const|let|var)\\s*([a-zA-Z_][a-zA-Z0-9_]+)[^;]*=\\s*async\\s*\\([^;]*$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>一応、<code>async</code> やアロー関数も対応していますが、まだまだ調整は必要だと思います．
また、JavaScript(+TypeScript)にしか対応していません．これは随時更新していけばいいかなと．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="documentsymbol">DocumentSymbol<a class="hash-link" aria-label="DocumentSymbol への直接リンク" title="DocumentSymbol への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline#documentsymbol">​</a></h3>
<p>Marks to Outline では <code>vscode.SymbolInformation</code> をシンボルプロバイダの生成物として返しているのですが、これだとアウトラインの階層表示に対応できません．
階層表示させるには <code>vscode.DocumentSymbol</code> を使います．詳しくは、以下を参考にしました．</p>
<p><a href="https://qiita.com/PrsPrsBK/items/d71b13e733f3bbacf8b5" target="_blank" rel="noopener noreferrer" class="card padding--md margin-bottom--sm cardContainer_yMBB"><span class="text--truncate cardTitle_SiGl" title="VS Code拡張API - DocumentSymbolProvider"><i class="cardIcon_VTdI fas fa-external-link-alt"></i> <!-- -->VS Code拡張API - DocumentSymbolProvider</span></a></p>
<p>具体的には <code>vscode.DocumentSymbol</code> で親子関係を構築していけばよいみたいです． <code>vscode.DocumentSymbol.children</code> に <code>vscode.DocumentSymbol</code> を追加していく感じです．</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> vscodeSymbols</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">DocumentSymbol</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> markGroup</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">DocumentSymbol </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">DocumentSymbol</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">"MARKS"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">""</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">SymbolKind</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Key</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">Range</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">Position</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">Position</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">10</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">Range</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">Position</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">Position</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">10</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">resultMarks</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">map</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">result</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> MarkTokens</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    markGroup</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">children</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">push</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    finder</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">makeDocumentSymbol</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">...</span><span class="token plain">result</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> document </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">SymbolKind</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Key</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token string" style="color:#a6e22e">"M: "</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">vscodeSymbols</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">push</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">markGroup</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> funcGroup</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">DocumentSymbol </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">vscode</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">DocumentSymbol</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic">// (...)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic">// (...)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">vscodeSymbols</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">push</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">funcGroup</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>この <code>vscodeSymbols</code> を <code>provideDocumentSymbols</code> メソッドで返すようにしています．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="パッケージの生成とインストール">パッケージの生成とインストール<a class="hash-link" aria-label="パッケージの生成とインストール への直接リンク" title="パッケージの生成とインストール への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline#%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%81%AE%E7%94%9F%E6%88%90%E3%81%A8%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB">​</a></h3>
<p>デバッグをしていい感じになったら、パッケージングします．
この時 <code>README.md</code> を編集しないと怒られるので適当に編集します．以下のコマンドでパッケージが作成できます．</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">npx vsce package</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>拡張子が <code>.vsix</code> のファイルが生成されます．VSCode上ならこのファイルを右クリックからインストールできます．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="役に立ったサイト">役に立ったサイト<a class="hash-link" aria-label="役に立ったサイト への直接リンク" title="役に立ったサイト への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline#%E5%BD%B9%E3%81%AB%E7%AB%8B%E3%81%A3%E3%81%9F%E3%82%B5%E3%82%A4%E3%83%88">​</a></h3>
<p>拡張機能のアクティベートの部分に関しては次のサイトを参考にしました．</p>
<p><a href="https://clickan.click/activation-events/" target="_blank" rel="noopener noreferrer" class="card padding--md margin-bottom--sm cardContainer_yMBB"><span class="text--truncate cardTitle_SiGl" title="Visual Studio Code 拡張機能のアクティベート activationEvents"><i class="cardIcon_VTdI fas fa-external-link-alt"></i> <!-- -->Visual Studio Code 拡張機能のアクティベート activationEvents</span></a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="合わせて使いたい拡張機能">合わせて使いたい拡張機能<a class="hash-link" aria-label="合わせて使いたい拡張機能 への直接リンク" title="合わせて使いたい拡張機能 への直接リンク" href="https://mebiusbox.github.io/blog/2023/12/13/vscode-pixy-outline#%E5%90%88%E3%82%8F%E3%81%9B%E3%81%A6%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84%E6%8B%A1%E5%BC%B5%E6%A9%9F%E8%83%BD">​</a></h2>
<p>おまけで <code>TODO Highlight</code> という拡張機能を使うと、目印のコードをハイライトすることができます．</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight" target="_blank" rel="noopener noreferrer" class="card padding--md margin-bottom--sm cardContainer_yMBB"><span class="text--truncate cardTitle_SiGl" title="TODO Highlight"><i class="cardIcon_VTdI fas fa-external-link-alt"></i> <!-- -->TODO Highlight</span><span class="text--truncate cardDescription_fnmI" title="highlight TODOs, FIXMEs, and any keywords, annotations...">highlight TODOs, FIXMEs, and any keywords, annotations...</span></a></p>
<p>インストールしただけではダメで、カスタマイズする必要があります．</p>
<p>設定で <code>todohighlight.keywords</code> を追加します．以下は私の設定です．</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">"todohighlight.keywords": [</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "text": "NOTE:",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "color": "#242424",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "border": "1px solid #66D9EF",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "borderRadius": "2px",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "backgroundColor": "#66D9EF",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "overviewRulerColor": "transparent"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "text": "//!",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "color": "#242424",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "border": "1px solid #A6E22E",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "borderRadius": "2px",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "backgroundColor": "#A6E22E",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "overviewRulerColor": "transparent"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "text": "MARK:",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "color": "#242424",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "border": "1px solid #A6E22E",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "borderRadius": "2px",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "backgroundColor": "#A6E22E",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "fontWeight": "600",</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        "isWholeLine": true,</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">],</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>次のように表示されます：</p>
<p><img decoding="async" loading="lazy" alt="TODO Highlight" src="https://mebiusbox.github.io/assets/images/2023-12-13-vscode-pixy-notion-231213180211-068e3db6156f6aa7587b575857f85a76.png" width="686" height="357" class="img_ev3q"></p>
<p>これで少しは快適になった感じがします．もしかすると便利な拡張機能や標準で出来るかもしれません．
ちなみに、今のところ作成した拡張機能は公開する予定はありません．
以上です．</p>]]></content:encoded>
            <category>vscode</category>
        </item>
        <item>
            <title><![CDATA[Docusaurus v3 にアップグレードしました]]></title>
            <link>https://mebiusbox.github.io/blog/2023/11/30/docusaurus-v3</link>
            <guid>https://mebiusbox.github.io/blog/2023/11/30/docusaurus-v3</guid>
            <pubDate>Thu, 30 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[このサイトに使っているDocusaurusをv2からv3にアップグレードしました]]></description>
            <content:encoded><![CDATA[<p>このサイトを生成するのに使っている <a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a> を <a href="https://docusaurus.io/blog/2022/08/01/announcing-docusaurus-2.0" target="_blank" rel="noopener noreferrer">v2</a> から <a href="https://docusaurus.io/blog/releases/3.0" target="_blank" rel="noopener noreferrer">v3</a> にアップグレードしました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="動機">動機<a class="hash-link" aria-label="動機 への直接リンク" title="動機 への直接リンク" href="https://mebiusbox.github.io/blog/2023/11/30/docusaurus-v3#%E5%8B%95%E6%A9%9F">​</a></h2>
<p>単純に最新にしたかっただけです．古いままだとやはりメンテしづらいですから．
あまり独自でいじってしまうとアップグレードしづらくなって、結局面倒なことになりかねないので、なるべく用意されている機能で拡張していくのがいいですね．私もプラグインを自作して使っていますが、大したことはしていないですし、補助的なものです．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="アップグレード時の問題">アップグレード時の問題<a class="hash-link" aria-label="アップグレード時の問題 への直接リンク" title="アップグレード時の問題 への直接リンク" href="https://mebiusbox.github.io/blog/2023/11/30/docusaurus-v3#%E3%82%A2%E3%83%83%E3%83%97%E3%82%B0%E3%83%AC%E3%83%BC%E3%83%89%E6%99%82%E3%81%AE%E5%95%8F%E9%A1%8C">​</a></h2>
<p><a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a> のバージョンが上がって v1 から一気に v3 に上がったみたいです．Markdown ファイルの制限が厳しくなり、より厳密なチェックがされるようになりました．特に影響の大きかったのは<a href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering">数式処理の部分をCSRにしているところ</a>で、<code>{}</code>がJavaScriptとして認識されてしまい、数式内のコマンドがエラーになってしまいました．これに関してはエスケープをすることで対応しましたが、数式すべてで<code>{}</code>をエスケープするのは置換で対応できるとはいえ面倒なので、普通に<code>remark-math</code>、<code>rehype-katex</code>プラグインを使うのが一番だと思います．この処理をしたのは数式が多いとDocusaurusのビルド時間が増えることやバンドル時の容量も増えてしまうためでした．これに関しては何らかの方法でHTMLにしたものを静的コンテンツとして扱うのがいいかなと思います．</p>
<p>あとは、カード形式のリンクを作成するために <code>react-link-card</code> を使っていたのですが、これがエラーを出すようになりました．また、このプラグインはメンテもされていないため、使わないことにしました．</p>
<p>もう1つ、最新のブログ投稿をトップページに表示するところで、デプロイするとエラーが表示されるものがありました．これは開発環境では発生しません．エラーは <a href="https://docusaurus.io/blog/releases/3.0#debug-builds" target="_blank" rel="noopener noreferrer">React 18 による hydration エラー</a>で結局原因はよくわからなかったのですが、<a href="https://github.com/mebiusbox/mebiusbox.github.com/commit/b01ed25abf87a41ac40c810648be1d1a7642e713" target="_blank" rel="noopener noreferrer">問題箇所は特定できたので対応</a>しました．</p>
<p>他は特に苦労したところはありません．Node を v18 に、React も v18、TypeScript を v5 にしたことや、コンフィグファイルでESMの文法に変更したことぐらいです．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="静的コンテンツの扱い">静的コンテンツの扱い<a class="hash-link" aria-label="静的コンテンツの扱い への直接リンク" title="静的コンテンツの扱い への直接リンク" href="https://mebiusbox.github.io/blog/2023/11/30/docusaurus-v3#%E9%9D%99%E7%9A%84%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E3%81%AE%E6%89%B1%E3%81%84">​</a></h2>
<p>これは Docusaurus v3 でのお話ではありませんが、 デフォルトだと <code>static</code> フォルダに入っているものはビルド時にコピーされます．多言語（私は<code>ja</code>と<code>en</code>）をサポートしていると、その言語ごとに静的コンテンツがコピーされることを今更ながら知りました．ちょっと静的コンテンツに入れているものが大きかったのでビルドやデプロイに時間が余計に時間がかかってました．とりあえず、<code>static</code>から別のフォルダに移動してビルド時にコピーするようにして対応しました．</p>
<p>以上です．</p>]]></content:encoded>
            <category>Docusaurus</category>
        </item>
        <item>
            <title><![CDATA[「動かして学ぶ！Rust入門」の執筆]]></title>
            <link>https://mebiusbox.github.io/blog/2023/04/23/rust-book</link>
            <guid>https://mebiusbox.github.io/blog/2023/04/23/rust-book</guid>
            <pubDate>Sun, 23 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Zennで公開している「Rust入門」が書籍化されました．また、書籍化にあたって大幅な加筆をしました．]]></description>
            <content:encoded><![CDATA[<p>Zennで公開している「Rust入門」が「動かして学ぶ！Rust入門」として書籍化されました．ここでは、書籍の執筆について色々と書くことにしました．</p>
<!-- -->
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="はじめに">はじめに<a class="hash-link" aria-label="はじめに への直接リンク" title="はじめに への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB">​</a></h2>
<p>大変嬉しいことにZennで公開している「Rust入門」を書籍化することになりました．「動かして学ぶ！Rust入門」という名前で 2023年4月24日発売です．</p>
<p><a href="https://zenn.dev/mebiusbox/books/22d4c1ed9b0003" target="_blank" rel="noopener noreferrer" class="card padding--md margin-bottom--sm cardContainer_yMBB"><span class="text--truncate cardTitle_SiGl" title="Rust入門 | Zenn"><i class="cardIcon_VTdI fas fa-external-link-alt"></i> <!-- -->Rust入門 | Zenn</span><span class="text--truncate cardDescription_fnmI" title="Rust入門">Rust入門</span></a></p>
<p><a href="https://www.amazon.co.jp/dp/B0BWR1T5QK" target="_blank" rel="noopener noreferrer" class="card padding--md margin-bottom--sm cardContainer_yMBB"><span class="text--truncate cardTitle_SiGl" title="動かして学ぶ！Rust入門 | Amazon"><i class="cardIcon_VTdI fas fa-external-link-alt"></i> <!-- -->動かして学ぶ！Rust入門 | Amazon</span><span class="text--truncate cardDescription_fnmI" title="動かして学ぶ！Rust入門">動かして学ぶ！Rust入門</span></a></p>
<p><a href="https://www.shoeisha.co.jp/book/detail/9784798177236" target="_blank" rel="noopener noreferrer" class="card padding--md margin-bottom--sm cardContainer_yMBB"><span class="text--truncate cardTitle_SiGl" title="動かして学ぶ！Rust入門 | SE Book"><i class="cardIcon_VTdI fas fa-external-link-alt"></i> <!-- -->動かして学ぶ！Rust入門 | SE Book</span><span class="text--truncate cardDescription_fnmI" title="動かして学ぶ！Rust入門">動かして学ぶ！Rust入門</span></a></p>
<p>ここでは、執筆についてやったことや思ったことなどをここにまとめておきます．</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>注記</div><div class="admonitionContent_BuS1"><p>出版社からは許可をもらっています．</p></div></div>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>警告</div><div class="admonitionContent_BuS1"><p><a href="https://www.shoeisha.co.jp/book/detail/9784798177236#errata" target="_blank" rel="noopener noreferrer">正誤表</a>を公開しています．
また、最新のサンプルコードは以下の場所は<a href="https://github.com/mebiusbox/rust-book" target="_blank" rel="noopener noreferrer">ここ</a>にあります．</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="執筆依頼">執筆依頼<a class="hash-link" aria-label="執筆依頼 への直接リンク" title="執筆依頼 への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E5%9F%B7%E7%AD%86%E4%BE%9D%E9%A0%BC">​</a></h2>
<p>まず、はじめに翔泳社の編集者さんから執筆依頼のメールが届きました．書籍執筆は私の1つの夢ではあったので、快諾の連絡をして打合せや構成案の提出などをして契約しました．その後、執筆期間に入ります．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="実際の執筆">実際の執筆<a class="hash-link" aria-label="実際の執筆 への直接リンク" title="実際の執筆 への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E5%AE%9F%E9%9A%9B%E3%81%AE%E5%9F%B7%E7%AD%86">​</a></h2>
<p>私のスタイルとして、最初に必要な情報をとにかく集めます．今回は Notion を使いました．また、コードなどの参考になりそうなものはプロジェクトフォルダを作成してそこにまとめていました．執筆前に構成案を作成するのですが、その構成に合わせて資料をすべて集めます．資料を集めて、「これで書ける」と感じたら執筆を開始します．これは今回の執筆よりも前からやっている方法で今回も変わりませんでした．ちなみに、今回の執筆でそう思ったタイミングは、原稿締め切り1カ月を切っていたときです．実際に原稿はギリギリ間に合ったのですが、全くこのやり方はオススメしません．とはいえ、このやり方そのものは決して悪い方法ではなく、もっと時間に余裕を持たせようというお話です．構成を考えて調べながら書くことも可能とは思いますが、それではいつ書き終わるかが全く予想できません．特に、調べながら書く場合はあるトピックに予定以上に時間がかかることがあると破綻してしまいます．ですので、最初に資料集めをした方が書きやすいと感じています．先に全て調べなくとも、ある程度は事前にすべてチェックしておいたほうがいいです．</p>
<p>今回の執筆では、Markdownで原稿を書き、git で管理していました．また、mdbook を使用しています．mdbook は最初から使用することを決めていました．少なくとも今は rust に関して執筆するなら mdbook がオススメです．なにより、ブラウザ上ですぐにコードを実行して確認することができるのが便利です．複雑なコードは厳しいですが、簡単なコードなら十分です．また、vscode とも相性がいいです．SUMMARY.md から各ファイルにすぐジャンプできます．</p>
<p>今回の執筆は Zenn で公開している「<a href="https://zenn.dev/mebiusbox/books/22d4c1ed9b0003" target="_blank" rel="noopener noreferrer">Rust入門</a>」を加筆したものになっています．この「Rust入門」は、もともと「<a href="https://github.com/mebiusbox/docs/blob/master/Rust%E3%81%A7%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%B3%E3%82%B0%E5%85%A5%E9%96%80.pdf" target="_blank" rel="noopener noreferrer">Rustではじめるレイトレーシング入門</a>」から Rust の解説部分を抜き出したものです．また、「Rustではじめるレイトレーシング入門」も「<a href="https://github.com/mebiusbox/docs/blob/master/%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%B3%E3%82%B0%E5%85%A5%E9%96%80.pdf" target="_blank" rel="noopener noreferrer">レイトレーシング入門</a>」のC++部分をRustに書き直し、また、Rustの解説を追加したものになっています．構成段階で、編集者さんとお話したときにレイトレーシングのサンプル部分を使ってもいいか確認して入れていました．今回、A5サイズの書籍ということで手元にあった書籍を調べて行数や1行に表示する文字数を調べました．それぞれ、ばらばらで統一されていなかったのが意外で印象的でした．同じ出版社でもです．なので平均値（横38文字、縦33行）を算出して「Rust入門」の記事をTeXを使ってA5サイズで出力したところ約80ページしかなりませんでした．最初は250ページぐらいを想定とのことでしたので、かなり加筆しなければならないとわかっていました．サンプルとしてレイトレを追加したとしてもです．また、ボリューム的にも250ページはちょっと薄いかなと思ったので、300~350ページを目標としました．この時に「計画書」という資料を私の方で作って具体的にどの部分をどれくらいのページ数にするか適当に決めています．この資料は依頼されたわけではなく、勝手に私が作ったものです．実際にサンプルのページ数を除けば、このときの計画通りになったとちょっと驚いています．</p>
<p>構成案はまず編集者さんが提示してくれますので、それをもとに作ります．私の場合、20日間の期間がありました．ギリギリまで使って考えて構成し提出しました．これも多少「節」の移動や統合はあったものの、ほぼこのときの構成通りに執筆しています．</p>
<p>加筆内容としては、まずコードの量を増やしました．タイトルにもある通り「動かして学ぶ」シリーズなので、コード例を多く提示しました．「Rustの文法と機能」と「アプリケーションの開発」では、それぞれ250個、225個のリスト（コード）があります．同じ「動かして学ぶ」シリーズ（今回のはNextOneシリーズということで少し違います）で「<a href="https://www.amazon.co.jp/dp/4798144983" target="_blank" rel="noopener noreferrer">Pythonで動かして学ぶ！機械学習の教科書</a>」という書籍があって所持しているのですが、本当に手を動かして学べる良著だったので、参考にさせてもらいました．とはいっても、Rust入門の方はコード例を多くしているのであって、別に動かす必要はないので少し違います．
次に、「アプリケーションの開発」では単語推理ゲームとレイトレーシングを書きました．単語推理ゲームはWordleとして有名ですし、レイトレーシングはこれもまた有名なコーネルボックスのプログラムになっています．レイトレーシングは既に書いてあるのでそれの調整で済みました．いくつか間違いが見つかったのでいずれPDF版にも反映させようと思います．単語推理ゲームはicedクレートを使ったサンプルです．単語推理ゲームのロジック部分は参考にしたコードはあるのですが、それはCLIなのでGUI版を作成しました．icedクレートと注目していた tauri を使うか少し迷ったのですが、tauri はRust以外にも説明しなければいけないことが多いので、Rustだけで完結するicedクレートにしました．これは、1日で書き上げました（もちろん事前に調べていたから）．ただ、説明が不十分だったり、書き方が他の部分と比べて手抜きすぎて、ここは赤字が多かったです．</p>
<p>執筆期間は土日、平日の夜などはフルに執筆に使っていました．体調を少しでも崩していたらやばかったですね．</p>
<p>当初は250ページ、目標は300ページとしていましたが、最終的には440ページ近くになりました（書籍の詳細を見るともっと多いですが、それは目次や索引などが含まれています）．何とかなるものだなー．赤字などでいろいろ説明不足な部分も指摘されたのですが、これ以上ページ数を増やしたくなかったので、結構省いています．見本誌を頂いて中を見たときは、意外にスカスカだなと思いました．これはコードを追加した影響だと思います．いい感じに読みやすくなっているのかもしれません．</p>
<p>締め切りはどれも間に合わせました．スケジュール通りに対応できたと思います．実は予定よりもスケジュールは伸びているのですが、少なくとも私が原因ではないと思っています（まあ、原稿がまずかったのかもしれません）．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="監査">監査<a class="hash-link" aria-label="監査 への直接リンク" title="監査 への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E7%9B%A3%E6%9F%BB">​</a></h2>
<p>今回は監査を付けていません．これは編集者さんに手配してもらったり、自分でお願いすることも出来るそうです．まあ、今回の件についてはお願いできる人が思いつきませんでした．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="校正検証">校正･検証<a class="hash-link" aria-label="校正･検証 への直接リンク" title="校正･検証 への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E6%A0%A1%E6%AD%A3%E6%A4%9C%E8%A8%BC">​</a></h2>
<p>原稿を書き終えてから、校正やら検証が始まります．検証は原稿に書かれているプログラムや画面が正しいかどうかチェックしてくれます．これは編集者さんの方で手配してくれます．原稿をもとに組版したものが送られてくるので、検証報告を確認しながら、チェックをして赤字という形で訂正指示をします．このとき、校正記号を知らなかったので、最初は私なりに描きこんでいたのですが、ちょっと改行問題(後述)が大きかったので、もっと簡単に表せないかと思い、校正記号について調べました（<a href="https://solution.toppan.co.jp/creative/contents/TPO_column07.html" target="_blank" rel="noopener noreferrer">校正のルールと必ず覚えておくべき校正記号一覧 | 凸版</a>）．まさに知りたかったことだったので、特に改行や字下げなど利用しました．それ以外はむしろ面倒だったので使っていません．というのも手書きならまだしもPDFでのやり取りだったので、描画ツールを使って描くにはあまりにも面倒すぎます．専用のツールがあるなら楽なんですけどね．</p>
<p>特に校正で大変だったのが、改行問題です．これは Markdown に関係してきます．DocusaurusやZennなどMarkdown形式でドキュメントを書いた場合、改行をどのように扱うかはそれぞれのレンダリング処理に依存します．多くはMarkdownファイルで改行してすぐに文章を書いている場合、改行が間に入りません．mdbookもそうです．しかし、原稿として提出した場合、改行はそのまま改行として処理されます．ですので、mdbookでビルドして確認したものと組版されたものとでは結構違っていました．組版されたものは想定外の改行が多く、その度に字下げ処理されてしまい、この校正指示が大変でした（だから校正記号を調べました）．これが改行問題です．他の書籍でも結構無駄に改行が入っているものを見かけます．Markdownで書いているのかなと思ってしまいます．これは厄介な問題で、それなら改行しなければいいのではと思うかもしれませんが、日本語を含めた文書でgit管理する場合、行単位での比較になりがちなので、1行にまとめてしまうとわかりづらくなってしまいます．これに関しては結局のところ、Markdown側の改行を消すしかないとの結論に今はなっています．diffの問題や執筆も1行にまとめることで書きづらくなってしまいますけどね．ではどう対応したらいいかということですが、考えられる方法として執筆時は改行あり、提出時は改行なしに変換するツールを作る方法があります．フォーマッタのようなものです．</p>
<p>校正に関しては原稿と一緒にgitに記録して管理していました．特に必要はなかったのですが、基本1つの校正指示に1コミットという方法を使ってやっていたのですが、あまりにも多かったので、後半は少しまとめてコミットしていたこともあります．それでも、校了になるまでに、1331回コミットしていました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="プロポーショナルフォントとiosevka">プロポーショナルフォントとIosevka<a class="hash-link" aria-label="プロ��ポーショナルフォントとIosevka への直接リンク" title="プロポーショナルフォントとIosevka への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E3%83%97%E3%83%AD%E3%83%9D%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%8A%E3%83%AB%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%A8iosevka">​</a></h2>
<p>今回の執筆で一番驚いたのが、コードの印字でプロポーショナルフォントが使われていることでした．最近では、コードをプロポーショナルフォントで表示されることも時々見るので、そういう傾向にあるのかなとも思っていました．ですが、個人的にはあり得ないので等幅フォントにしてもらいました．また、「<a href="https://github.com/be5invis/Iosevka" target="_blank" rel="noopener noreferrer">Iosevka</a>」というフォントを指定しました．Iosevkaは等幅フォントにもかかわらず文字幅が狭い、けど読みやすいとても良いフォントです．私も使っています．ライセンスもSIL Open Font Licenseで扱いやすいです．NextOneの「動かして学ぶ！」シリーズはプロポーショナルフォントが採用されているみたいです．最初お話したときは、シリーズで同じフォントにしているとのことでしたので、この本だけ等幅フォントにするのはどうなんだろうと思いましたが、そこは譲れませんでした．というのも、Rustではコンパイルエラーで具体的な位置を指定してくれるのですが、プロポーショナルフォントではずれてしまうので、困ります．他にもいくつか等幅フォントで印字されることを前提に書いている部分もありました．</p>
<p>また、A5サイズなので、横幅もA4と違って狭いです．Iosevkaとはいえ、やはり文字数が個人的に足りません．そこで、インデントサイズを4から2に減らす提案をしましたが、それならフォントサイズを調整するとのことでしたので、サンプルを頂いて確認し調整しました．オススメのサイズを実際に印刷して確認してみたんですが、私としては小さすぎると感じたので、少し大きいサイズにしてあります．ただ、それだとコードを文字幅に合わせる処理が多くなるのですが、もとからするつもりだったので問題ありませんでした．Iosevkaで印字された見本を見てもかなり見やすいので、これに関しては満足しています．ちょっと太字の等幅フォントよりかは、はるかに見やすいんじゃないかなと思います．</p>
<p>余談ですが、Iosevkaは細かいバリエーションがあってリガチャあり･なしなどがあります．特に指定しなかった私の不手際なのですが、最初リガチャありで後からリガチャなしに変えています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="対象読者">対象読者<a class="hash-link" aria-label="対象読者 への直接リンク" title="対象読者 への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E5%AF%BE%E8%B1%A1%E8%AA%AD%E8%80%85">​</a></h2>
<p>本書の冒頭にも書いてあるとおり、ある程度プログラミング言語を学んでいる人を対象としています．ですから、変数とは何かとか、関数とは何かを詳しく説明していません．これはそういったプログラミングの基本的な内容よりもRustの機能説明に重点を置いているからです．とくに所有権を中心に書いていますが、他の内容もなるべく多く入れたつもりです．ただ、A5版であることやページ数の増加のため、あまり詰め込むわけにはいきませんでした．並列処理のところなど説明が簡潔になっている部分もありますが、それはアプリケーション開発をするところで、実際に使用して理解してもらうようになっています．</p>
<p>また、プログラミング初学者でも読めるようにしていると書いていますが、それは理解できるかどうかは別として本書を最初から最後までやり遂げられるという意味です．もちろん、理解できることに越したことはありませんが、Rust言語はそう簡単ではありません．ですから、コード例を多く入れています．最低限のコーディングスキルとターミナル操作（この2つができる人をプログラミング初学者と想定）が出来れば動かしながら覚えることは可能だと思います．少なくとも最初から最後まで一通りこなすことで CUI, GUI, そして並列処理を使ったアプリケーション開発を体験できるはずです．あとはわからなかったところを見直したりしてみてください．各節は見直しやすいように機能ごとになるべく分けています．私も公式ドキュメントや参考書を読んで1回で理解できた訳ではありません．公式ドキュメントを読んだ後に本書を読んでもいいし、本書を読んでから公式ドキュメントや他の参考書を読んでみるとより理解しやすくなると思っていますし、そうなれば大変嬉しく思います．</p>
<p>本書はすでに述べているとおり Zenn で公開している「<a href="https://zenn.dev/mebiusbox/books/22d4c1ed9b0003" target="_blank" rel="noopener noreferrer">Rust入門</a>（無料）」を加筆したものになっています．本書に興味を持たれた方は、先に Zenn の「Rust入門」を読んでから購入を検討することも可能です．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="レイトレーシング">レイトレーシング<a class="hash-link" aria-label="レイトレーシング への直接リンク" title="レイトレーシング への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E3%83%AC%E3%82%A4%E3%83%88%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%B3%E3%82%B0">​</a></h2>
<p>はい、「アプリケーションの開発」にレイトレーシングのサンプルがあります．まさかのRust入門にいきなり数式が沢山でてきます．ですが、そんなことは気にしない．興味があればやってみてください．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="印税について">印税について<a class="hash-link" aria-label="印税について への直接リンク" title="印税について への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E5%8D%B0%E7%A8%8E%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">​</a></h2>
<p>詳しい事はお話できませんが、技術書が高い理由がわかった気がします．また、発売までの作業を考えると厳しいと思いました．ただ、原稿の執筆期間だけを考えれば悪くもないと思います．初回は原稿以外の部分でも大変と感じてしまいますが、そこを乗り切ればあとは原稿の執筆期間だけと考えると、なるほどという感じ．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="モチベーション">モチベーション<a class="hash-link" aria-label="モチベーション への直接リンク" title="モチベーション への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E3%83%A2%E3%83%81%E3%83%99%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3">​</a></h2>
<p>今回の執筆については、最初にも書いているある通り書籍を執筆することが夢の1つだったので、モチベが下がることはありませんでした．普段から文書を書くときにあまりモチベが下がることはありません．というのも、資料を集めて一気に書き上げるスタイルなので、書き始めてたらそのまま最後まで書き終えます．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="足りない部分">足りない部分<a class="hash-link" aria-label="足りない部分 への直接リンク" title="足りない部分 への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E8%B6%B3%E3%82%8A%E3%81%AA%E3%81%84%E9%83%A8%E5%88%86">​</a></h2>
<p>基本的に本書を読むために必要なことは順番に書いてあるつもりですが、1つだけ、<code>pin</code>について書けませんでした．これは非同期処理のところでコードとしてさらっと出てきて一切説明していません．他にもいくつか説明が足らないところが多いです．ただ、あまりに細かく説明してしまうとページ数が多くなってしまうので、分かってはいても追加はしませんでした．そういった部分はZennのRust入門に追加しようと思っています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="本を書くために">本を書くために<a class="hash-link" aria-label="本を書くために への直接リンク" title="本を書くために への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E6%9C%AC%E3%82%92%E6%9B%B8%E3%81%8F%E3%81%9F%E3%82%81%E3%81%AB">​</a></h2>
<p>私なりに思うことです．もともとPDFとして技術的な解説書を書いてきました．これは本を執筆したかったからであり、その練習でもあります．なので、原稿はTeXで書き、PDFとして出力していました．そのまま印刷できるように、かつ、そのまま本としても問題ないようにです．そのような文書を20近く書いてきました．その経験を十分に活かせたと思っています．今回の執筆では Zenn の「Rust入門」が始まりではありますが、その記事は「Rustではじめるレイトレーシング入門」の一部であり、さらに「レイトレーシング入門」という文書をRustに書き直したものです．これは2018年末に書いたものなので、4年ぐらい前になります．資料を集めて、原稿を実際に書いた期間は1カ月ほどですが、それまで積み上げてきたものがあってこそだと思います．</p>
<p>また、初回の構成案や計画書などはかなり正確にできました．これは見積もりに関係してきます．これについては WBS（Work Breakdown Structure）の考え方が大きいです．これにより正確な見積もりが出来るようになりました．</p>
<p>あと、情報の整理のやり方も大事です．Notion でも Markdown でも好きなものを使えばいいと思います．書くための情報をどのように書いておくか．基本的には箇条書きになります．十分に、そして漏らさずに．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="執筆環境">執筆環境<a class="hash-link" aria-label="執筆環境 への直接リンク" title="執筆環境 への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E5%9F%B7%E7%AD%86%E7%92%B0%E5%A2%83">​</a></h2>
<p>WindowsでVSCodeを使いました．形式は Markdown で mdbook を使っています．プロジェクトは git で管理しています．
mdbookの追加機能として<code>mdbook-admonition</code>を使っています．これは注釈を入れるものです．VSCodeの拡張機能として「テキスト校正くん」を使いました．これは表記揺れ対応に使っています．他には、Windowsツールとして <code>keyhac</code>, <code>espanso</code> を使っています．それぞれテキストを処理するためのツールです．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="執筆校正ルール">執筆（校正）ルール<a class="hash-link" aria-label="執筆（校正）ルール への直接リンク" title="執筆（校正）ルール への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E5%9F%B7%E7%AD%86%E6%A0%A1%E6%AD%A3%E3%83%AB%E3%83%BC%E3%83%AB">​</a></h2>
<p>執筆するときに、最初に自分用の執筆ルールを作成しました．これは表記揺れ対応にもつながります．主に、英語と日本語の扱い、空白の入れ方などをまとめています．また、校正時にはさらに校正ルールを作成して対応しました．これも表記揺れ対応です．一部を抜粋すると次のようなものです．</p>
<ul>
<li>日本語の句点には <code>、</code>, <code>．</code> (全角)を使用します． <code>,</code> (半角)は列挙の意味になります： <code>i32, u32, s32</code> や <code>赤, 青, 黄</code>．また、日本語の中点は半角の <code>･</code> を使います．</li>
<li><code>()</code>は半角．()内の内側に空白は入れません</li>
<li>数字は全角ではなく半角を使用．数字の前後には空白を入れません</li>
<li>用語の英語表記について、それが英単語のみであれば前後に半角空白を入れて <code>Rust</code> とし、英語+日本語の場合には空白を入れません(<code>Rust言語</code>)．これは会社名なども同じで <code>Google</code> または<code>Google社</code>とします．ただし、全角 <code>、</code> や <code>．</code> の直後には空白を入れません：<code>たとえば、Rust では...</code></li>
<li>バージョンや 英単語+数字のような場合は前後に半角空白を入れます： <code>1.3.0</code>, <code>Rust 2018</code></li>
<li>数式の前後に空白を入れます</li>
<li>ファイル名の前後には空白を入れます</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="作図">作図<a class="hash-link" aria-label="作図 への直接リンク" title="作図 への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E4%BD%9C%E5%9B%B3">​</a></h2>
<p>今回の作図では Google Slide を使っています．Google Slide から PDF で出力したものを渡しています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="画像">画像<a class="hash-link" aria-label="画像 への直接リンク" title="画像 への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E7%94%BB%E5%83%8F">​</a></h2>
<p>スクショ以外の画像については、ライセンスがCC0のものを選んで使用しています．といっても使っているのは2つだけです．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ツール">ツール<a class="hash-link" aria-label="ツール への直接リンク" title="ツール への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E3%83%84%E3%83%BC%E3%83%AB">​</a></h2>
<p>今回キャプションが多かったので、原稿にあるキャプションを一括で抜き出すツールを作りました．抜けなどのチェックに利用しました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="コード">コード<a class="hash-link" aria-label="コード への直接リンク" title="コード への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E3%82%B3%E3%83%BC%E3%83%89">​</a></h2>
<p>原稿にある動かせるコードは、すべてすぐに確認できるようにプロジェクトを作成しています．mdbookでは動作確認はできますが、細かいビルドチェックなどができません．なので、別途作っています．これは原稿が出来たあとに作っています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="厄介なこと">厄介なこと<a class="hash-link" aria-label="厄介なこと への直接リンク" title="厄介なこと への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E5%8E%84%E4%BB%8B%E3%81%AA%E3%81%93%E3%81%A8">​</a></h2>
<p>Rustは定期的にアップデートしています．エディションは変わりませんでしたが、執筆時点で 1.64、発売時には 1.69 になっていました．その間にビルドは問題なかったのですが、いくつか表示されるエラーが変わったり、Rust Playground の環境が更新されていたり、Rustのビルドの設定が変わっていたりと細かい更新がありました．これはどうしようもないので、特に発売までの間はバージョンに気を付けなければなりません．書籍で採用しているバージョンがあるとはいえ、実際に手に取って読み進めるときは最新にするでしょうから．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="zenn">Zenn<a class="hash-link" aria-label="Zenn への直接リンク" title="Zenn への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#zenn">​</a></h2>
<p>Zennで公開している「Rust入門」は「Rustではじめるレイトレーシング入門」の一部です．これをZennで書いた理由というのはいくつかあるのですが、その1つとして、多くの人に読んでもらえるというのがあります．これは GitHub で公開しているだけでは出来ません．Zennを利用する前はQiitaに書いていましたが、不満があってやめました．Zennの本形式で書いていますが、特に難しくありません．アウトプットは大事ですが、どこにアウトプットするかも大事です．私はDocusaurusやGitHubで文書を公開していますが、同時にZennにも公開しています．それはやはり多くの人に見てもらえるからです．とはいえ、複数のアウトプット先があると面倒です．微妙にMarkdownの書き方が違います．そこは、ZennのMarkdown形式に変換するツールを作って対応しました．これでかなり楽になっています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="gpt">GPT<a class="hash-link" aria-label="GPT への直接リンク" title="GPT への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#gpt">​</a></h2>
<p>これは執筆がほぼ終わった後に検証したのですが、OpenAIのAPIを使って原稿の校正チェッカを作って試しました．かなり有用だと思います．VSCodeの拡張機能「テキスト校正くん」では簡単な表記揺れなどの対応はできますが、誤字･脱字、スペルチェック、そしてなにより適切な言い回しの候補を教えてくれるので便利です．今回は利用出来ませんでしたが、執筆の機会があれば間違いなく利用すると思います．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="最後に">最後に<a class="hash-link" aria-label="最後に への直接リンク" title="最後に への直接リンク" href="https://mebiusbox.github.io/blog/2023/04/23/rust-book#%E6%9C%80%E5%BE%8C%E3%81%AB">​</a></h2>
<p>多くの経験をさせてもらいました．また、このような執筆の機会が得られたことをとても感謝しています．至らない部分も多いかと思いますが、多くの人に読んでもらえたなら大変嬉しく思います．</p>]]></content:encoded>
            <category>Rust</category>
        </item>
        <item>
            <title><![CDATA[NotionでWBSを管理する]]></title>
            <link>https://mebiusbox.github.io/blog/2023/01/17/notion-wbs</link>
            <guid>https://mebiusbox.github.io/blog/2023/01/17/notion-wbs</guid>
            <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Notionのサブアイテムを使ってWBSを構築するやり方を解説します]]></description>
            <content:encoded><![CDATA[<p>Notionのサブアイテム機能を使うことで単一のデータベースのみでWBS(Work Breakdown Structure)を構築できます．
ここでは、次のようなWBSの構築方法を解説します．</p>
<!-- -->
<div class="videoWrapper_xpwa"><div style="width:100%;height:100%" class="videoPlayer_IRVz"></div></div>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>注意</div><div class="admonitionContent_BuS1"><p>ここでは、英語版Notionで解説しています．また、CSSで見た目をカスタマイズしているものをスクショしています．ご了承ください．</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="データベースの作成">データベースの作成<a class="hash-link" aria-label="データベースの作成 への直接リンク" title="データベースの作成 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/17/notion-wbs#%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E3%81%AE%E4%BD%9C%E6%88%90">​</a></h2>
<p>まず、データベースを作成します．プロパティは次のようにします：</p>
<ul>
<li>Task: タイトル(Title)</li>
<li>進捗(子): セレクト(Select)</li>
<li>進捗(親): 関数(Formula)</li>
</ul>
<p><span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(子)</span>のセレクト項目は次のようにしました． </p>
<ul>
<li><code>0%</code> .. <code>100%</code> (10%刻み)</li>
<li><code>自動</code></li>
</ul>
<p><span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(親)</span>の関数は後で解説します．</p>
<p>この時点で次のようなプロパティ構成になっています．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117230900-50038e269079a867b3b8ec884a07b901.png" width="671" height="369" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="サブアイテムの設定">サブアイテムの設定<a class="hash-link" aria-label="サブアイテムの設定 への直接リンク" title="サブアイテムの設定 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/17/notion-wbs#%E3%82%B5%E3%83%96%E3%82%A2%E3%82%A4%E3%83%86%E3%83%A0%E3%81%AE%E8%A8%AD%E5%AE%9A">​</a></h2>
<p>データベースの設定(<code>･･･</code>ボタン)からサブアイテム(<code>Sub-items</code>)の設定を選択します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117231000-3a800a73205cb75e67e6415ef66c598b.png" width="774" height="439" class="img_ev3q"></p>
<p>設定はデフォルトのままで問題ありません．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117231026-6a9d857cd3931b510b60e543e81d25ec.png" width="788" height="476" class="img_ev3q"></p>
<p>次のようなプロパティの構成になっているはずです．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117231127-a259e6d9782c6e58f2bc3f3ae518c3a6.png" width="923" height="380" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="進捗率の計算">進捗率の計算<a class="hash-link" aria-label="進捗率の計算 への直接リンク" title="進捗率の計算 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/17/notion-wbs#%E9%80%B2%E6%8D%97%E7%8E%87%E3%81%AE%E8%A8%88%E7%AE%97">​</a></h2>
<p>子の進捗率を計算して親の進捗率として表示します．そのためにプロパティを2つ作成します．
1つは<code>_進捗N</code>で関数(Formula)タイプです．先頭の<code>_</code>は計算用を表しています．もう1つは<code>_進捗R</code>とします．こちらはロールアップ(Rollup)で、リレーション(Relation)に<code>Sub-item</code>を設定します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117225647-270169060dd6eb6c7e012b63e38a66d5.png" width="841" height="474" class="img_ev3q"></p>
<p>次にプロパティ(Property)に<code>_進捗N</code>を設定します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117225734-381c7e7b558ea108c93b9db7969d9cf2.png" width="828" height="594" class="img_ev3q"></p>
<p>計算(Calculate)は<code>オリジナルを表示(Show original)</code>に設定しておきます．</p>
<p>この時点で、プロパティは次のようになっています．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117231537-27450a558272a282cf7a9f4b56305354.png" width="1066" height="157" class="img_ev3q"></p>
<p>適当にタスクを追加して、タスクの親子関係を設定します．ここで重要なのは、子を持つ親タスクの<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(子)</span>は<code>自動</code>に設定しておいてください．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117231646-03f7f04189aaae0fa11d77564340a94b.png" width="1074" height="604" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="子タスクの進捗率">子タスクの進捗率<a class="hash-link" aria-label="子タスクの進捗率 への直接リンク" title="子タスクの進捗率 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/17/notion-wbs#%E5%AD%90%E3%82%BF%E3%82%B9%E3%82%AF%E3%81%AE%E9%80%B2%E6%8D%97%E7%8E%87">​</a></h3>
<p><code>_進捗N</code>は子タスクの<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(子)</span>のセレクト値を数値に変換します．まず、<code>_進捗N</code>を数値として扱いたいので、関数(Formula)で<code>1</code>と設定します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117232045-93ff2b9c60bf803288556eb233e824a7.png" width="995" height="327" class="img_ev3q"></p>
<p>これで、このプロパティが数値として扱われます．数値として扱われると、関数プロパティのオプションに<code>数値の形式(Number format)</code>と<code>表示形式(Show as)</code>が追加されます．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117232215-c3908f3292c1dd427aa2da81d323c0af.png" width="351" height="343" class="img_ev3q"></p>
<p>数値の形式(Number format)を<code>数値(Number)</code>にし、表示形式(Show as)を<code>リング(Ring)</code>に設定します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117232322-2307f9d485d6504ed2ffb39b3034e492.png" width="343" height="441" class="img_ev3q"></p>
<p>次に、<code>_進捗N</code>を数値に設定すると、そのプロパティをロールアップしている<code>_進捗R</code>の計算(Calculate)に項目が追加されますので、<code>合計(Sum)</code>を設定します．そうすると、<code>表示形式(Show as)</code>が選べるようになりますが<code>数値(Number)</code>のままにしておきます．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117232735-1e21ef497581026a3382438c88cdfd84.png" width="493" height="629" class="img_ev3q"></p>
<p>これで、<code>_進捗N</code>と<code>_進捗R</code>がともに数値となりました．次に<code>_進捗N</code>の関数を設定します．関数は次の通りです．</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword control-flow" style="color:#66d9ef">if</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">prop</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"進捗(子)"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"自動"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">floor</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">prop</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"_進捗R"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">/</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">max</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">length</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">replaceAll</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">prop</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Sub-item"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">","</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"[^,]"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">""</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">toNumber</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">slice</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">prop</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"進捗(子)"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>何をやっているかを説明すると、そのタスクが親タスク(<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(子)</span>で<code>自動</code>を設定しているタスク)であれば、<code>_進捗R</code>（そのタスクの子タスクすべての進捗率の合計）から子タスクの数で割って進捗率を計算しています．また、子タスクであれば、<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(子)</span>のセレクト値を数値に変換しています．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="親タスクの進捗率">親タスクの進捗率<a class="hash-link" aria-label="親タスクの進捗率 への直接リンク" title="親タスクの進捗率 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/17/notion-wbs#%E8%A6%AA%E3%82%BF%E3%82%B9%E3%82%AF%E3%81%AE%E9%80%B2%E6%8D%97%E7%8E%87">​</a></h3>
<p>あとは、<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(親)</span>の計算で進捗率を計算します．<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(親)</span>の関数に以下を設定します．</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword control-flow" style="color:#66d9ef">if</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">length</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">prop</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Sub-item"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">floor</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">prop</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"_進捗R"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">/</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">max</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">length</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">replaceAll</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">prop</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Sub-item"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">","</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"[^,]"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">""</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">prop</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"_進捗N"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">/</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">100</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117234022-9971f6985ffcb1ad38441e886245b294.png" width="1006" height="397" class="img_ev3q"></p>
<p>数値の形式は<code>パーセント(Percent)</code>、表示形式は<code>リング(Ring)</code>に設定します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117234120-63b956cbfbe5a71f3aa51491ad2c453d.png" width="340" height="453" class="img_ev3q"></p>
<p>これで親タスクや子タスクを追加すると自動で計算されるようになります．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117234223-451e7ece67201e5269256e0821be4bf6.png" width="1084" height="641" class="img_ev3q"></p>
<p>最後に不要なプロパティを非表示にすることで完成です．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117234330-7641ba78950805dbb44d47f31fe8f64b.png" width="562" height="622" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ステータスプロパティを使った方法">ステータスプロパティを使った方法<a class="hash-link" aria-label="ステータスプロパティを使った方法 への直接リンク" title="ステータスプロパティを使った方法 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/17/notion-wbs#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E3%83%97%E3%83%AD%E3%83%91%E3%83%86%E3%82%A3%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E6%96%B9%E6%B3%95">​</a></h2>
<p>これまでの方法では子タスクの進捗率を計算して親タスクの進捗率を算出しました．
もし、そこまで正確な値を求める必要はなく、全体のタスクの進捗が終わったかどうかだけ調べて進捗率に反映させたい場合、ステータスプロパティを使って数式を使わずとも計算できます．</p>
<p>まず、データベースを作成します．</p>
<ul>
<li>Task: タイトル(Title)</li>
<li>進捗(子): ステータス(Status)</li>
<li>進捗(親): ロールアップ(Rollup)</li>
</ul>
<p>次に、サブアイテムの設定をします．設定はデフォルトのままで問題ありません．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117235400-4e4e044067545360ba69e647d433ef2a.png" width="993" height="373" class="img_ev3q"></p>
<p>適当にタスクを追加して、タスクの親子関係を設定します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117235544-3976c6206d6e0c9b3c25cfd7f456dc52.png" width="1101" height="656" class="img_ev3q"></p>
<p>次に、<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(親)</span>のロールアップでリレーション(Relation)を <code>Sub-item</code> 、プロパティ(Property)を<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">進捗(子)</span>、計算(Calculate)を<code>グループごとの割合(Percent per group) → Complete</code>に設定します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117235803-1a6207acf13744d2de6405cdb54c77ad.png" width="563" height="469" class="img_ev3q"></p>
<p>そうすると、表示形式(Show as)を設定できるようになりますので、<code>リング(Ring)</code>を設定します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230117235912-e5520374dbf9d2f9414b0235017f347e.png" width="341" height="433" class="img_ev3q"></p>
<p>これで完成です．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-17-notion-wbs-230118000036-25e08b1dcffd154da3f5948eda49c299.png" width="1183" height="662" class="img_ev3q"></p>
<p>ただし、この方法では子タスクがすべて終わっても、その親タスクは自動で <code>Done</code> にならないので手動で行う必要があります．それを自動化することも可能かもしれませんが、ご自身で調べてみてください．</p>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>注意</div><div class="admonitionContent_BuS1"><p>今回のようにロールアップを使って親、または子のプロパティを参照する場合、それがさらにその親、または子のプロパティを参照するといった循環参照をしてしまうとパフォーマンスに大きな影響があるため、制限されているとサポートから聞きました．階層が深くなってしまうとロールアップした値が異常な値になるため、階層レベルは3～4以下にしておくのが無難です．</p></div></div>
<p>今回作成したWBSのテンプレートを公開しています．詳しくはテンプレートにある「はじめにお読みください」を参照してください．</p>
<p><a href="https://mebiusbox.notion.site/WBS-c33e10534921465d93f6604948302c81" target="_blank" rel="noopener noreferrer" class="card padding--md margin-bottom--sm cardContainer_yMBB"><span class="text--truncate cardTitle_SiGl" title="WBS | mebiusbox.notion.site"><i class="cardIcon_VTdI fas fa-external-link-alt"></i> <!-- -->WBS | mebiusbox.notion.site</span><span class="text--truncate cardDescription_fnmI" title="Notion用 WBS (Work Breakdown Structure)のテンプレートです">Notion用 WBS (Work Breakdown Structure)のテンプレートです</span></a></p>]]></content:encoded>
            <category>Notion</category>
        </item>
        <item>
            <title><![CDATA[Docusaurusで数式をクライアントサイドレンダリング(CSR)する]]></title>
            <link>https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering</link>
            <guid>https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering</guid>
            <pubDate>Sun, 15 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurusで数式処理をクライアントサイドで行う方法について解説します]]></description>
            <content:encoded><![CDATA[<p>Docusaurusは静的サイトジェネレータなので、すべてのページがビルド時にレンダリングされます．
DocusaurusのマークダウンからHTMLにレンダリングする部分は <a href="https://remark.js.org/" target="_blank" rel="noopener noreferrer">remark</a> と <a href="https://github.com/rehypejs/rehype" target="_blank" rel="noopener noreferrer">rehype</a> が処理しています．数式を有効にするには、<a href="https://docusaurus.io/docs/markdown-features/math-equations" target="_blank" rel="noopener noreferrer">Docusaurusのドキュメント</a> によれば、<code>remark-math</code> と <code>rehype-katex</code> (または <code>rehype-mathjax</code>）を使います．
しかし、2,3個の数式ならともかく、それなりの数があるとビルドに時間がかかるようになり、生成されるhtmlやjsファイルが肥大化します．もちろん、数式も含めて事前にレンダリングするので、閲覧する場合はブラウザで数式の処理が入らず高速に表示できますが、個人的にはデメリットの方が大きいので、数式処理はクライアントサイドでしたいところです．ここでは、その方法を記録しておきます．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="必要なスクリプトやcssファイルを読み込む">必要なスクリプトやCSSファイルを読み込む<a class="hash-link" aria-label="必要なスクリプトやCSSファイルを読み込む への直接リンク" title="必要なスクリプトやCSSファイルを読み込む への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#%E5%BF%85%E8%A6%81%E3%81%AA%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%84css%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80">​</a></h2>
<p>今回は <a href="https://katex.org/" target="_blank" rel="noopener noreferrer">katex</a> を使って数式処理をします．バージョンは <code>0.16.4</code> です．
必要なファイルは以下の通りです．</p>
<ul>
<li><a href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css" target="_blank" rel="noopener noreferrer">//cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css</a></li>
<li><a href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.js" target="_blank" rel="noopener noreferrer">//cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.js</a></li>
<li><a href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/contrib/auto-render.min.js" target="_blank" rel="noopener noreferrer">//cdn.jsdelivr.net/npm/katex@0.16.4/dist/contrib/auto-render.min.js</a></li>
</ul>
<p>Docusaurusでこれらを読み込むようにするには <code>docusaurus.config.js</code> の <code>scripts</code> および <code>stylesheets</code> で指定します．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">./docusaurus.config.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> config </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token literal-property property" style="color:#f92672">scripts</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">src</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.js"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">integrity</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"sha384-PwRUT/YqbnEjkZO0zZxNqcxACrXe+j766U2amXcgMg5457rve2Y7I6ZJSm2A0mS4"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">crossorigin</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"anonymous"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">defer</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">src</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/contrib/auto-render.min.js"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">integrity</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"sha384-+VBxd3r6XgURycqtZ117nYw44OOcIax56Z4dCRWbxyPt0Koah1uHoK0o4+/RRE05"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">crossorigin</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"anonymous"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">defer</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token literal-property property" style="color:#f92672">stylesheets</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">href</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">type</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'text/css'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">integrity</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token literal-property property" style="color:#f92672">crossorigin</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'anonymous'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="数式をレンダリングする">数式をレンダリングする<a class="hash-link" aria-label="数式をレンダリングする への直接リンク" title="数式をレンダリングする への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#%E6%95%B0%E5%BC%8F%E3%82%92%E3%83%AC%E3%83%B3%E3%83%80%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%99%E3%82%8B">​</a></h2>
<p>クライアントサイドでレンダリングするには、ページがロードし終わったときに <code>renderMathInElement</code> を呼び出す必要があります．
そのために、プラグインを作ります．ここでは <code>./plugins/docusaurus-plugin-katex-client</code> というプラグインを作ります（以降、<code>katex-client</code>プラグイン)．以下のようなフォルダ・ファイル構成にします．</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">└─ plugins</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    └─ docusaurus-plugins-katex-client</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        ├─ index.js</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        └─ render.js</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ここから、どのような仕組みになっているか説明します．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="プラグイン">プラグイン<a class="hash-link" aria-label="プラグイン への直接リンク" title="プラグイン への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3">​</a></h3>
<p>Docusaurusに機能を追加するにはさまざまな方法があります． <a href="https://docusaurus.io/docs/advanced/plugins" target="_blank" rel="noopener noreferrer">プラグイン</a> はその1つです．Docusaurusのプラグインは公式サイトによれば、次のように説明されています．</p>
<blockquote>
<p>Docusaurus' implementation of the plugins system provides us with a convenient way to hook into the website's lifecycle to modify what goes on during development/build, which involves (but is not limited to) extending the webpack config, modifying the data loaded, and creating new components to be used in a page.</p>
</blockquote>
<p>要するに、開発やビルドの中でフックして処理を入れることができるよ、という自分なりの解釈です．<code>katex-client</code>プラグインでは、すべてのページ(グローバル)に対してフックし、特定のページだけ処理するといったようにします．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="client-modules">Client Modules<a class="hash-link" aria-label="Client Modules への直接リンク" title="Client Modules への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#client-modules">​</a></h3>
<p>追加のJavascriptをすべてのページで処理するために <a href="https://docusaurus.io/docs/advanced/client#client-modules" target="_blank" rel="noopener noreferrer">Client Modules</a> を使います． 具体的には <code>renderMathInElement</code> を呼び出すJavascriptファイル(<code>render.js</code>)をClient Moduleとして指定します．指定する場所はプラグインファイル(<code>index.js</code>)です．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">./plugins/docusaurus-plugin-katex-client/index.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> path </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">require</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"path"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">module</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method-variable function-variable method function property-access" style="color:#e6db74">exports</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token parameter">context</span><span class="token parameter punctuation" style="color:#f8f8f2">,</span><span class="token parameter"> options</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token literal-property property" style="color:#f92672">name</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'docusaurus-plugin-katex-client'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">getClientModules</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">path</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">resolve</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">__dirname</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"./render"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="executionenvironment">ExecutionEnvironment<a class="hash-link" aria-label="ExecutionEnvironment への直接リンク" title="ExecutionEnvironment への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#executionenvironment">​</a></h3>
<p>DocusaurusのSSGについては<a href="https://docusaurus.io/docs/advanced/ssg" target="_blank" rel="noopener noreferrer">こちら</a>に説明があります．プラグインは開発やビルドにも影響があるため、ブラウザに表示されるときのみ処理するようにしたいです．そのために <a href="https://docusaurus.io/docs/advanced/ssg#executionenvironment" target="_blank" rel="noopener noreferrer">ExecutionEnvironment</a> を使います．<code>ExecutionEnvironment.canUseDOM</code> でブラウザに表示されるかどうかが判定できます．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword module" style="color:#66d9ef">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">ExecutionEnvironment</span><span class="token plain"> </span><span class="token keyword module" style="color:#66d9ef">from</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"@docusaurus/ExecutionEnvironment"</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#66d9ef">default</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">!</span><span class="token maybe-class-name">ExecutionEnvironment</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">canUseDOM</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#66d9ef">null</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic">// browser only</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>次に、ページがロードし終わったときに処理するためには Client Module の<a href="https://docusaurus.io/docs/advanced/client#client-module-lifecycles" target="_blank" rel="noopener noreferrer">ライフサイクル関数</a> <code>onRouteDidUpdate</code> を使います．これはルートが変わってDOMに描画し終わった後に呼ばれます．ドキュメントによれば</p>
<blockquote>
<ol>
<li>The user clicks a link, which causes the router to change its current location.</li>
<li>Docusaurus preloads the next route's assets, while keeping displaying the current page's content.</li>
<li>The next route's assets have loaded.</li>
<li>The new location's route component gets rendered to DOM.</li>
</ol>
<p><code>onRouteUpdate</code> will be called at event (2), and <code>onRouteDidUpdate</code> will be called at (4). They both receive the current location and the previous location (which can be null, if this is the first screen).</p>
</blockquote>
<p>となっています．この関数の中で <code>renderMathInElement</code> を呼び出します． 次のようになります．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword module" style="color:#66d9ef">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">ExecutionEnvironment</span><span class="token plain"> </span><span class="token keyword module" style="color:#66d9ef">from</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"@docusaurus/ExecutionEnvironment"</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#66d9ef">default</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">!</span><span class="token maybe-class-name">ExecutionEnvironment</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">canUseDOM</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#66d9ef">null</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">onRouteDidUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token parameter punctuation" style="color:#f8f8f2">{</span><span class="token parameter"> </span><span class="token parameter dom variable" style="color:#f8f8f2">location</span><span class="token parameter"> </span><span class="token parameter punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token function" style="color:#e6db74">renderMathInElement</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token dom variable" style="color:#f8f8f2">document</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">body</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token literal-property property" style="color:#f92672">delimiters</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token literal-property property" style="color:#f92672">left</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'$$'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">right</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'$$'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">display</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token literal-property property" style="color:#f92672">left</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'$'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">right</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'$'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">display</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token literal-property property" style="color:#f92672">left</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'\\('</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">right</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'\\)'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">display</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token literal-property property" style="color:#f92672">left</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'\\['</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">right</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'\\]'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">display</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token literal-property property" style="color:#f92672">throwOnError</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token literal-property property" style="color:#f92672">strict</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>onRouteDidUpdate</code> の引数にある <code>location</code> でルートを取得できます．これを使って処理するページを特定します．パスは
<code>location.pathname</code> です．<code>katex-client</code>プラグインのClient Moduleである<code>render.js</code>は次のようになります．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">./plugins/docusaurus-plugin-katex-client/render.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword module" style="color:#66d9ef">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">ExecutionEnvironment</span><span class="token plain"> </span><span class="token keyword module" style="color:#66d9ef">from</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"@docusaurus/ExecutionEnvironment"</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword module" style="color:#66d9ef">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#66d9ef">default</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">!</span><span class="token maybe-class-name">ExecutionEnvironment</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">canUseDOM</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#66d9ef">null</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">onRouteDidUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token parameter punctuation" style="color:#f8f8f2">{</span><span class="token parameter"> </span><span class="token parameter dom variable" style="color:#f8f8f2">location</span><span class="token parameter"> </span><span class="token parameter punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> pathIsIncluded </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token dom variable" style="color:#f8f8f2">location</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">pathname</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">startsWith</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"/docs/note"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">||</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token dom variable" style="color:#f8f8f2">location</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">pathname</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">startsWith</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"/blog"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">pathIsIncluded </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#66d9ef">null</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token function" style="color:#e6db74">renderMathInElement</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token dom variable" style="color:#f8f8f2">document</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">body</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token literal-property property" style="color:#f92672">delimiters</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token literal-property property" style="color:#f92672">left</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'$$'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">right</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'$$'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">display</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token literal-property property" style="color:#f92672">left</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'$'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">right</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'$'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">display</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token literal-property property" style="color:#f92672">left</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'\\('</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">right</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'\\)'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">display</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token literal-property property" style="color:#f92672">left</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'\\['</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">right</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'\\]'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#f92672">display</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token literal-property property" style="color:#f92672">throwOnError</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token literal-property property" style="color:#f92672">strict</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="katex-clientプラグインを有効にする"><code>katex-client</code>プラグインを有効にする<a class="hash-link" aria-label="katex-clientプラグインを有効にする への直接リンク" title="katex-clientプラグインを有効にする への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#katex-client%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%92%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B">​</a></h3>
<p>後は作成した<code>katex-client</code>プラグインを有効にします．<code>docusaurus.config.js</code>の<code>plugins</code>で指定します．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">./docusaurus.config.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token literal-property property" style="color:#f92672">plugins</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token string" style="color:#a6e22e">'./plugins/docusaurus-plugin-katex-client'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコ��ードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="結果">結果<a class="hash-link" aria-label="結果 への直接リンク" title="結果 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#%E7%B5%90%E6%9E%9C">​</a></h3>
<p>ビルド時間が改善されて、生成されるファイルも小さくなりました．以下は、GitHub Actionsでビルドしたときのログです．まずは、<code>remark-math+rehype-katex</code>の場合：</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">Run yarn build</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">yarn run v1.22.19</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">$ docusaurus build</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[INFO] [ja] Creating an optimized production build...</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[info] [webpackbar] Compiling Client</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[info] [webpackbar] Compiling Server</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[BABEL] Note: The code generator has deoptimised the styling of /home/runner/work/mebiusbox.github.com/mebiusbox.github.com/docs/note/math-3dtransformation.md as it exceeds the max of 500KB.</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[BABEL] Note: The code generator has deoptimised the styling of /home/runner/work/mebiusbox.github.com/mebiusbox.github.com/docs/note/math-3dtransformation.md as it exceeds the max of 500KB.</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[success] [webpackbar] Client: Compiled successfully in 1.40m</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[success] [webpackbar] Server: Compiled successfully in 1.53m</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[SUCCESS] Generated static files in "build".</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[INFO] Use `npm run serve` command to test your build locally.</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Done in 103.03s.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>そして、<code>katex-client</code>プラグインに変えた場合は次の結果となりました．</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">Run yarn build</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">yarn run v1.22.19</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">$ docusaurus build</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[INFO] [ja] Creating an optimized production build...</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[info] [webpackbar] Compiling Client</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[info] [webpackbar] Compiling Server</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[success] [webpackbar] Client: Compiled successfully in 26.71s</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[success] [webpackbar] Server: Compiled successfully in 32.79s</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[SUCCESS] Generated static files in "build".</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">[INFO] Use `npm run serve` command to test your build locally.</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Done in 42.66s.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>実際のページは<a href="http://mebiusbox.github.io/docs/note/math-3dtransformation" target="_blank" rel="noopener noreferrer">こちら</a>です．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="注意点">注意点<a class="hash-link" aria-label="注意点 への直接リンク" title="注意点 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#%E6%B3%A8%E6%84%8F%E7%82%B9">​</a></h2>
<p><code>katex-client</code>プラグインにしたことによる注意点です．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="クライアント側の負荷">クライアント側の負荷<a class="hash-link" aria-label="クライアント側の負荷 への直接リンク" title="クライアント側の負荷 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E5%81%B4%E3%81%AE%E8%B2%A0%E8%8D%B7">​</a></h3>
<p>もちろん、クライアント側で数式処理をするのでページを開いたときに負荷がかかってしまいます．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="マークダウンでエスケープが必要">マークダウンでエスケープが必要<a class="hash-link" aria-label="マークダウンでエスケープが必要 への直接リンク" title="マークダウンでエスケープが必要 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E3%81%A7%E3%82%A8%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%97%E3%81%8C%E5%BF%85%E8%A6%81">​</a></h3>
<p>マークダウンの数式をそのまま remark や rehype に通すので、エスケープする必要があります．これは手間ではありますが、置換で対応できるので許容範囲としています．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="remark-math--rehype-katexor-rehype-mathjax-と併用できない">remark-math + rehype-katex(or rehype-mathjax) と併用できない<a class="hash-link" aria-label="remark-math + rehype-katex(or rehype-mathjax) と併用できない への直接リンク" title="remark-math + rehype-katex(or rehype-mathjax) と併用できない への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#remark-math--rehype-katexor-rehype-mathjax-%E3%81%A8%E4%BD%B5%E7%94%A8%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84">​</a></h3>
<p>現状は併用できないです．<code>katex-client</code>プラグインを正常に動かすには <code>remark-math</code> を有効にできません．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ページをリロードすると一部の数式処理に失敗する">ページをリロードすると一部の数式処理に失敗する<a class="hash-link" aria-label="ページをリロードすると一部の数式処理に失敗する への直接リンク" title="ページをリロードすると一部の数式処理に失敗する への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#%E3%83%9A%E3%83%BC%E3%82%B8%E3%82%92%E3%83%AA%E3%83%AD%E3%83%BC%E3%83%89%E3%81%99%E3%82%8B%E3%81%A8%E4%B8%80%E9%83%A8%E3%81%AE%E6%95%B0%E5%BC%8F%E5%87%A6%E7%90%86%E3%81%AB%E5%A4%B1%E6%95%97%E3%81%99%E3%82%8B">​</a></h3>
<p>原因不明．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="余談">余談<a class="hash-link" aria-label="余談 への直接リンク" title="余談 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#%E4%BD%99%E8%AB%87">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="rehypeプラグイン">rehypeプラグイン<a class="hash-link" aria-label="rehypeプラグイン への直接リンク" title="rehypeプラグイン への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#rehype%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3">​</a></h3>
<p><code>remark-math</code> で数式がASTに変換されるので、<code>rehype</code> のプラグインを自作して、デリミタを加えてそのまま出力することができれば、余計なエスケープ処理をする必要がないのでは、と考えています．ただ、そこまで突っ込んで作る気にはなれなかったです．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="babelの警告">Babelの警告<a class="hash-link" aria-label="Babelの警告 への直接リンク" title="Babelの警告 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/15/docusaurus-katex-client-side-rendering#babel%E3%81%AE%E8%AD%A6%E5%91%8A">​</a></h3>
<p><code>remark-math+rehype-katex</code>で構築していたときに、数式の多いページをビルドすると以下の警告がたくさん出てきます．</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">[BABEL] Note: The code generator has deoptimised the styling of XXX as it exceeds the max of 500KB.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>500KBを超えると最適化が無効になるとのことです．検索してみるとBabelの設定で、<code>compact</code>を<code>false</code>にすれば解決するとありましたが、どうも上手くいきませんでした．また、Docusaurusでプロジェクトを作成したときの <code>babel.config.js</code> は次のようになっています．</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">./bable.config.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">module</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token literal-property property" style="color:#f92672">presets</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">require</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token method function property-access" style="color:#e6db74">resolve</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">'@docusaurus/core/lib/babel/preset'</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>そして、<code>@docusaurus/core/lib/bable/preset</code>の中身を見てみると<code>compact</code>は<code>true</code>と指定されています．今回の問題のために、<code>compact</code>を<code>false</code>にするのはどうかと思いますので、結局そのままにしました．</p>
<p>以上です．</p>]]></content:encoded>
            <category>Docusaurus</category>
            <category>katex</category>
        </item>
        <item>
            <title><![CDATA[NotionでShadertoyやつぶやき系のツイートをギャラリーにまとめる]]></title>
            <link>https://mebiusbox.github.io/blog/2023/01/14/notion-shadertoy-gallery</link>
            <guid>https://mebiusbox.github.io/blog/2023/01/14/notion-shadertoy-gallery</guid>
            <pubDate>Sat, 14 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[なるべく手間をかけずにサムネイルを作成する方法を紹介します]]></description>
            <content:encoded><![CDATA[<p>Notionのギャラリービューを使うと、ページをサムネイル一覧で確認できます．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-14-notion-shadertoy-gallery-230114021100-11315a915d60c4fbb9303e66a04ed1e1.png" width="816" height="551" class="img_ev3q"></p>
<p>とはいえ、サムネイルを用意しなければなりません．
ここではなるべく手間をかけずにサムネイルを作成する方法を紹介します．</p>
<p>まずは、データベースを作成します．<code>Link(URL)</code>と<code>Description(Text)</code>プロパティを作成します．
そして、ギャラリービューにして、プレビューをカバー、サイズを小にします</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-14-notion-shadertoy-gallery-230114030500-5a779b3877252a00ff1f5473f3be0ca8.png" width="327" height="469" class="img_ev3q"></p>
<p>Shadertoyやツイートへのリンクをデータベースに保存します．<a href="https://chromewebstore.google.com/detail/save-to-notion/ldmmifpegigmeammaeckplhnjbbpccmm?hl=ja" target="_blank" rel="noopener noreferrer">Save to Notion</a>やWebブックマークにしてからデータベースに移動すると Description をいい感じに埋めてくれます．</p>
<p>ここから、リンク元によって処理が変わります．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="つぶやき系">つぶやき系<a class="hash-link" aria-label="つぶやき系 への直接リンク" title="つぶやき系 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/14/notion-shadertoy-gallery#%E3%81%A4%E3%81%B6%E3%82%84%E3%81%8D%E7%B3%BB">​</a></h2>
<p>Notionのページ上にツイートを埋め込みます．埋め込んだツイートの動画(画像)部分を右クリックして、「画像アドレスをコピー」します．次に、Notionのページ上部にある<code>Add Cover</code> を選択してカバー画像を追加し、コピーしたアドレスを <code>Link</code> にペーストして送信します．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-14-notion-shadertoy-gallery-230114032100-f51f56052209e2564282b11799caaec8.png" width="680" height="268" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="shadertoy">Shadertoy<a class="hash-link" aria-label="Shadertoy への直接リンク" title="Shadertoy への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/14/notion-shadertoy-gallery#shadertoy">​</a></h2>
<p>Shadertoyの画面に行きます．左上のレンダリングしている場所を右クリックして「画像をコピー」します．Notionのページにそのまま貼り付けます．</p>
<p><img decoding="async" loading="lazy" src="https://mebiusbox.github.io/assets/images/2023-01-14-notion-shadertoy-gallery-230114032500-011cef84f3feb45a88a4885e847ccca8.png" width="686" height="437" class="img_ev3q"></p>
<p>ちなみに、Shadertoyの場合はWebブックマークを作成するといい感じのサムネイルができます．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="glslsandbox">GLSLSandbox<a class="hash-link" aria-label="GLSLSandbox への直接リンク" title="GLSLSandbox への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/14/notion-shadertoy-gallery#glslsandbox">​</a></h2>
<p>GLSLSandboxの場合は、StylusとDevToolsを使ってサムネイルを作成します．
まず、Stylusを使ってサムネイル用の画像サイズに調整します．</p>
<div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token selector" style="color:#a6e22e;font-style:italic">canvas</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token property" style="color:#f92672">display</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> block</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token property" style="color:#f92672">position</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> absolute</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token property" style="color:#f92672">top</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token property" style="color:#f92672">left</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token property" style="color:#f92672">right</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token property" style="color:#f92672">bottom</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token property" style="color:#f92672">width</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">300</span><span class="token unit">px</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token property" style="color:#f92672">height</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">200</span><span class="token unit">px</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token property" style="color:#f92672">margin</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> auto</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>そして、DevToolsでcanvasを選択した状態で、コマンドパレット(<code>Ctrl+Shift+P</code>)から<code>Run&gt; Capture node screenshot</code>を選択するとサムネイルが保存されるので、それをページに貼り付けます．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="save-to-notion">Save To Notion<a class="hash-link" aria-label="Save To Notion への直接リンク" title="Save To Notion への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/14/notion-shadertoy-gallery#save-to-notion">​</a></h2>
<p><a href="https://chromewebstore.google.com/detail/save-to-notion/ldmmifpegigmeammaeckplhnjbbpccmm?hl=ja" target="_blank" rel="noopener noreferrer">Save to Notion</a>を使うと、GLSLSandboxやShadertoyをもっと簡単に保存できます．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="shadertoy-1">Shadertoy<a class="hash-link" aria-label="Shadertoy への直接リンク" title="Shadertoy への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/14/notion-shadertoy-gallery#shadertoy-1">​</a></h3>
<p><code>Name</code>, <code>Cover</code>, <code>Description</code> を次のように設定します．タグは任意に設定してください．</p>
<p><img decoding="async" loading="lazy" alt="Save To Notion for Shadertoy" src="https://mebiusbox.github.io/assets/images/2024-01-14-notion-shadertoy-gallery-240118-142658-831a9ce8e3ab17d5700a6b062356b318.png" width="461" height="293" class="img_ev3q"></p>
<p>Save To Notion はコンテンツをCSSセレクタを使って指定することができます．
Shadertoyでは名前や詳細をCSSセレクタを使って取得する必要があります．</p>
<p>それぞれ、<code>Data on Webpage</code> を指定してピックします．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="glslsandbox-1">GLSLSandbox<a class="hash-link" aria-label="GLSLSandbox への直接リンク" title="GLSLSandbox への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/14/notion-shadertoy-gallery#glslsandbox-1">​</a></h3>
<p><code>Name</code>, <code>Content</code>, <code>Cover</code> を次のように設定します．タグは任意に設定してください．</p>
<p><img decoding="async" loading="lazy" alt="Save To Notion for GLSLSandbox" src="https://mebiusbox.github.io/assets/images/2024-01-14-notion-shadertoy-gallery-240118-142315-d25a811f321903e33a923d2b08bcd313.png" width="374" height="234" class="img_ev3q"></p>
<p>以上です．</p>]]></content:encoded>
            <category>Notion</category>
            <category>Shadertoy</category>
            <category>つぶやきGLSL</category>
        </item>
        <item>
            <title><![CDATA[リニューアル：Docusaurusへ移行]]></title>
            <link>https://mebiusbox.github.io/blog/2023/01/11/docusaurus</link>
            <guid>https://mebiusbox.github.io/blog/2023/01/11/docusaurus</guid>
            <pubDate>Wed, 11 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[サイトリニューアルしました]]></description>
            <content:encoded><![CDATA[<p>サイトをリニューアルしました．そして、数年振りのブログ更新です．
自分のサイトを持つ意味があまりなくなってきている感じはしますが、もはや学習も含めて新しいフレームワークを使ってみるテストになりつつあります．</p>
<!-- -->
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurus">Docusaurus<a class="hash-link" aria-label="Docusaurus への直接リンク" title="Docusaurus への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#docusaurus">​</a></h2>
<p>これまで、WordPressやMkDocs、Jekyllなどを使ってきました．今回は Meta(旧Facebook)製 <a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus v2</a> を使いました．</p>
<p>なぜ、Docusaurusにしたのか．</p>
<p>それはReactを使いたかったから．あとは、バージョン指定だったりAPIなどに対応したサイトも作れるということで試してみたかった．まだまだReactやらTypeScriptに慣れていないこともあって、Docusaurusを使う前にある程度学習したおかげか、ここまで作るのに4,5日程度でした．Jekyllで使っていたMarkdownは多少の調整は入ったものの、ほぼそのまま移行できているのであまり苦労はしなかったです．環境を構築できればかなり楽かなとは思います．まあ、それはどのフレームワークでも同じことが言えます．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reactとmdx">ReactとMDX<a class="hash-link" aria-label="ReactとMDX への直接リンク" title="ReactとMDX への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#react%E3%81%A8mdx">​</a></h2>
<p>やはり目玉はこの2つ <span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">React</span> と <span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">MDX</span> です． <a href="https://reactjs.org/" target="_blank" rel="noopener noreferrer">React</a> はUIフレームワーク、 <a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a> はマークダウンの中に <span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">JSX</span> を使用することができる機能です． JSXはJavaScriptの拡張構文で、JavaScript内にタグ構文をそのまま使用できます．今、 <span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">React</span> や <span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">MDX</span> という表示がありますが、まさにこれがReactコンポーネントです．ちなみに、 codeタグで囲むと、 <code>React</code>, <code>MDX</code> というようになります．このブログのソースファイルはマークダウン形式であり、Reactコンポーネントを使用できます．しかも簡単に．ただ、通常のマークダウンは MDX と互換がありますが、MDXは通常のマークダウンとは互換がありません．</p>
<p>Docusaurusで構築するときにReactコンポーネントを使って構築しなければならないかと言われればそうではないです．マークダウンファイルだけでも十分構築できます．今回のサイトではトップページのみ JSX で構築していますが、それ以外のものはすべてマークダウンを使っています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="静的サイトジェネレータとしての比較">静的サイトジェネレータとしての比較<a class="hash-link" aria-label="静的サイトジェネレータとしての比較 への直接リンク" title="静的サイトジェネレータとしての比較 への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#%E9%9D%99%E7%9A%84%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B8%E3%82%A7%E3%83%8D%E3%83%AC%E3%83%BC%E3%82%BF%E3%81%A8%E3%81%97%E3%81%A6%E3%81%AE%E6%AF%94%E8%BC%83">​</a></h2>
<p>個人的な所感に基づいて、以下のドキュメントサイトを生成するツールの使い分けみたいなのを書いておきます．</p>
<ul>
<li><a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a></li>
<li><a href="https://www.mkdocs.org/" target="_blank" rel="noopener noreferrer">MkDocs</a></li>
<li><a href="https://rust-lang.github.io/mdBook/" target="_blank" rel="noopener noreferrer">mdBook</a></li>
<li><a href="http://jekyllrb-ja.github.io/" target="_blank" rel="noopener noreferrer">Jekyll</a></li>
<li><a href="https://www.notion.so/" target="_blank" rel="noopener noreferrer">Notion</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="単にブログを書きたいなら">単にブログを書きたいなら<a class="hash-link" aria-label="単にブログを書きたいなら への直接リンク" title="単にブログを書きたいなら への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#%E5%8D%98%E3%81%AB%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E6%9B%B8%E3%81%8D%E3%81%9F%E3%81%84%E3%81%AA%E3%82%89">​</a></h3>
<p>ブログサービスを使いましょう．静的サイトを使う理由がとくにないです．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ブログをマークダウンで書きたいけどgithubで管理したい">ブログをマークダウンで書きたいけど、githubで管理したい<a class="hash-link" aria-label="ブログをマークダウンで書きたいけど、githubで管理したい への直接リンク" title="ブログをマークダウンで書きたいけど、githubで管理したい への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E3%81%A7%E6%9B%B8%E3%81%8D%E3%81%9F%E3%81%84%E3%81%91%E3%81%A9github%E3%81%A7%E7%AE%A1%E7%90%86%E3%81%97%E3%81%9F%E3%81%84">​</a></h3>
<p><span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">Jekyll</span>を使いましょう．GitHubが標準でサポートしています．お手軽ですし、こだわりたいならテンプレートを使ってレイアウトを自分で構築してカスタマイズできます．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ドキュメントをマークダウンのみでweb上に公開するなら">ドキュメントをマークダウンのみでWeb上に公開するなら<a class="hash-link" aria-label="ドキュメントを��マークダウンのみでWeb上に公開するなら への直接リンク" title="ドキュメントをマークダウンのみでWeb上に公開するなら への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92%E3%83%9E%E3%83%BC%E3%82%AF%E3%83%80%E3%82%A6%E3%83%B3%E3%81%AE%E3%81%BF%E3%81%A7web%E4%B8%8A%E3%81%AB%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B%E3%81%AA%E3%82%89">​</a></h3>
<p><span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">MkDocs</span>を使いましょう．お手軽です． また、<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">mdBook</span>でも構いません． Nodeの環境があるなら MkDocs、Rust (cargo) の環境があるなら mdBook という感じでもいいです．どちらの環境もあってどうしようという場合は <span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">mdBook</span> を使いましょう．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="本のようなある程度まとまったドキュメントを公開するなら">本のようなある程度まとまったドキュメントを公開するなら<a class="hash-link" aria-label="本のようなある程度まとまったドキュメントを公開するなら への直接リンク" title="本のようなある程度まとまったドキュメントを公開するなら への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#%E6%9C%AC%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E3%81%82%E3%82%8B%E7%A8%8B%E5%BA%A6%E3%81%BE%E3%81%A8%E3%81%BE%E3%81%A3%E3%81%9F%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88%E3%82%92%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B%E3%81%AA%E3%82%89">​</a></h3>
<p>もし、それがローカルではなくワールドに公開したいのであれば、 <span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">Zennのブック</span>を使いましょう．
Zennのブックなら、無料で公開していてもサポートでお金が入ってくることがあります．また、有料にすることもできます．SEOも強いので、検索で見つけやすいです．<span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">Qiita</span>ではできないですし、なによりQiitaは規約で公開した内容がQiita側にも帰属することになります．</p>
<p>ローカルの場合や、Zenn以外の方法だと <span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">mdBook</span>を使いましょう．mdBookは機能が他よりも劣っているように見えるかもしれませんが、本として執筆する最低限の環境は整っています．むしろ、余計な機能（Webでのインタラクティブなものなど）があると、実際に印刷するときに困ることになります．mdBookの印刷はブラウザの機能を使うことになりますが、1つのPDFとして出力できます．PDFでも出力したいということであれば mdBook がいいでしょう．また、 mdBook は Rust のエコシステムの一部なので、メンテナンスがしっかりしていることもあります．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="notion">Notion<a class="hash-link" aria-label="Notion への直接リンク" title="Notion への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#notion">​</a></h3>
<p><span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">Notion</span>はマークダウンの文法をサポートしていて、かつさまざまなブロックを使うことができるツールです．お手軽に公開することもできて便利です．私もずっと使っています．ブロックはReactコンポーネントと考えることもできます．ブロックを開発することはできませんが、多くのブロックがあったり、埋め込みブロックでウィジットという形で追加することもできます．1人だったり多人数であってもドキュメントを構築するツールとして Notion はありかなと思っています．ただ、ブログとか記事をNotionで公開するのは限定的なので、どこからかリンクするかサイトとしてデプロイするといったことをやったほうがいいです．また、ReactコンポーネントとしてNotionを使うこともできますので、Notionで原稿を書いてReactで表示するといったことも可能だと思います．</p>
<hr>
<ul>
<li><a href="https://github.com/NotionX/react-notion-x" target="_blank" rel="noopener noreferrer">NotionX/react-notion-x</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="えっじゃあ-docusaurusは">えっ、じゃあ Docusaurusは？<a class="hash-link" aria-label="えっ、じゃあ Docusaurusは？ への直接リンク" title="えっ、じゃあ Docusaurusは？ への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#%E3%81%88%E3%81%A3%E3%81%98%E3%82%83%E3%81%82-docusaurus%E3%81%AF">​</a></h3>
<p>正直なところ、あまりオススメはしないです．用途もあまり思いつきません．恐らく Docusaurusで作るなら Next で作った方がいいよね、ということになるとは思います．もしくはそれ以外で Gatsby とか．Reactの<a href="https://reactjs.org/" target="_blank" rel="noopener noreferrer">公式サイト</a>は Gatsby ですし、新しいReactの<a href="https://beta.reactjs.org/" target="_blank" rel="noopener noreferrer">ドキュメントサイト</a>も Next みたいです．Nextなどに精通しているなら、そちらを使った方がいいです．では、あまり詳しくない場合、Docusaurusはどうかという話になると思いますが、日本語の解説がかなり不足しているので、余計につらいかなと思います．公式ドキュメントはもちろんありますが、あまりわかりやすいものではないです．また、対応状況ももはや保守という感じも否めません．標準で採用しているCSSフレームワークの <a href="https://infima.dev/" target="_blank" rel="noopener noreferrer">Infima</a> もまだ開発段階みたいですし．時間があるなら、Nextを覚えた方がいいのではと思ってしまいます．ただ、DocusaurusもReactに精通しているならアリかなとは思います．プラグインとか数は少ないように見えますが、それで十分とも言えなくもないです．あとはReactで構築してどうぞという感じ．もう少しいろいろいじったら、まとめて記事にするかもしれません．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="さいごに">さいごに<a class="hash-link" aria-label="さいごに への直接リンク" title="さいごに への直接リンク" href="https://mebiusbox.github.io/blog/2023/01/11/docusaurus#%E3%81%95%E3%81%84%E3%81%94%E3%81%AB">​</a></h2>
<p><span style="background-color:var(--ifm-color-primary-dark);border-radius:2px;color:var(--ifm-color-emphasis-0);padding:0.2rem 0.4rem;margin:0 0.4rem;font-family:var(--ifm-font-family-monospace)">Docusaurus</span>はドキュメントをReactで構築するフレームワークだと思います．どこにどのファイルを置くのか、どういうルーティング処理がされるのか、プラグインはどう実装するのか、そういったことが決まっているものです．あとはそれをベースにカスタマイズしていってね、というものですね．とくに最初はナビゲーション当たりが手こずる感じです．わかると大分サクっと作れるようになるのですが、ただ、今でもまだ完全には把握できていないです．まだ、導入したばかりなので探っていきたいところですね．それでは．</p>]]></content:encoded>
            <category>diary</category>
            <category>docusaurus</category>
            <category>MkDocs</category>
            <category>mdBook</category>
            <category>Notion</category>
            <category>Jekyll</category>
        </item>
        <item>
            <title><![CDATA[自前ライブラリの整備]]></title>
            <link>https://mebiusbox.github.io/blog/2018/02/27/diary</link>
            <guid>https://mebiusbox.github.io/blog/2018/02/27/diary</guid>
            <pubDate>Tue, 27 Feb 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[うーん，毎日ブログ書けるかなと思っていたんだけど難しいね．あれこれやっていると，何かが疎かになる．]]></description>
            <content:encoded><![CDATA[<p>うーん，毎日ブログ書けるかなと思っていたんだけど難しいね．あれこれやっていると，何かが疎かになる．</p>
<p>Mebiusbox や FileHammer などは MFC で作成しているのですが，MFC 用または汎用ライブラリを１つ，.Net アプリ用にも自前ライブラリを１つ，他にもコンピュータグラフィック用のライブラリがあって，今はそれぞれメンテ中です．.Net アプリ用のライブラリは一部 GitHub で公開しています．</p>
<p>正直，FileHammer や DiskCatalogManager もソースコード公開しようかなと思ったことはあるのですが，依存ライブラリがいくつかあって結構面倒だったというのがあります．とはいえ，今だと画像関係は OpenCV にまとめられそうですね．でも OpenCV の DLL はサイズが大きくてフリーソフトウェアで数十MBって結構大きいサイズになってしまいました．他にも便利なライブラリがあるので，そちらに移行するといいのですが，やっぱり面倒なのでやっていないです．とはいえ，FileHammer である程度整理しましたけどね．64bit になって Susie Plugin も対応しなくていいかな，なんて思ったりしていますが，対応は簡単なのでやってあります．</p>
<p>自前ライブラリもずっと手付かずだったので，色々と整備していて機能を追加したり，リファクタリングしたり．Visual Studio 2012 が出たときも一度整理したんですが，Visual Studio もどんどんバージョンアップしていって，エラーが出るようになったりと結構厄介です．自分のライブラリはともかく他のライブラリの管理が大変．バージョンアップしていたりとか．まあ，色々やっています．</p>]]></content:encoded>
            <category>diary</category>
        </item>
        <item>
            <title><![CDATA[PackAssistant 1.6.0 リリース]]></title>
            <link>https://mebiusbox.github.io/blog/2018/02/23/packassistant-x64</link>
            <guid>https://mebiusbox.github.io/blog/2018/02/23/packassistant-x64</guid>
            <pubDate>Fri, 23 Feb 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[PackAssistant 1.6.0 をリリースしました．こちらは Windows 10 (64bit) に対応したものです．]]></description>
            <content:encoded><![CDATA[<p>PackAssistant 1.6.0 をリリースしました．こちらは Windows 10 (64bit) に対応したものです．</p>
<p>前回の記事でトンチンカンなことを言ってしまいましたが，既に PackAssistant 上で振り分けたあとに，フォルダをライティングソフトにD&amp;Dが出来ます．そちらを使うようにしてください．</p>
<p>PackClassify は削除しました．こちらの機能を使いたいという方は，1.5.2 (x86版) をご利用ください．Windows 10 でも使えます．</p>
<p>あと，パックサイズの標準に <code>Blu-ray XL (100GB)</code> を追加しました．</p>
<hr>
<p>ダウンロードは<a href="http://mebiusbox.github.io/software_pack_assistant.html" target="_blank" rel="noopener noreferrer">こちらから</a></p>]]></content:encoded>
            <category>diary</category>
        </item>
        <item>
            <title><![CDATA[PackAssistant について]]></title>
            <link>https://mebiusbox.github.io/blog/2018/02/22/packassistant</link>
            <guid>https://mebiusbox.github.io/blog/2018/02/22/packassistant</guid>
            <pubDate>Thu, 22 Feb 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[FileHammer も 64bit 化したので，ついでに PackAssistant も 64bit 化しようかなと．]]></description>
            <content:encoded><![CDATA[<p>FileHammer も 64bit 化したので，ついでに PackAssistant も 64bit 化しようかなと．
今でも窓の杜で公開されているので，使っている人はまだいてくれているのかなと思っています．</p>
<p>かなり前から何か更新するなら PackClassify を削除して，直接 iso ファイルを作れるようにしたいと思っていました．
<strong>mkisofs</strong> を使うと簡単に作れるらしいのですが，一次フォルダに全部まとめないといけないので，あまりよろしくないわけです．</p>
<p>そこで，別の方法を考えていたのですが，<strong>BurnAware</strong> というソフトでデータディスクを作成するときに，<code>貼り付け</code>  で複数の任意のフォルダやファイルを登録出来るのでは，と思いました．とりあえず，何かしらの方法で登録できれば <strong>PackClassify</strong> なんていらないわけです．</p>
<p>ということで，ちょっと試してみます．</p>]]></content:encoded>
            <category>diary</category>
        </item>
        <item>
            <title><![CDATA[サポートについて（ユーザーフォーラムの設置）]]></title>
            <link>https://mebiusbox.github.io/blog/2018/02/18/user-forum</link>
            <guid>https://mebiusbox.github.io/blog/2018/02/18/user-forum</guid>
            <pubDate>Sun, 18 Feb 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[サポート体制も何度か変わっていて，今ではメールのみでしたが，ユーザーフォーラムを設置しました．]]></description>
            <content:encoded><![CDATA[<p>サポート体制も何度か変わっていて，今ではメールのみでしたが，ユーザーフォーラムを設置しました．</p>
<ul>
<li><a href="http://mebiusbox.sakura.ne.jp/forum/" target="_blank" rel="noopener noreferrer">ユーザーフォーラム</a></li>
</ul>
<p>何かあれば上記に書き込んでみてください．また，メールにより問い合わせも受け付けています．</p>]]></content:encoded>
            <category>diary</category>
        </item>
        <item>
            <title><![CDATA[開発終了・公開停止ソフト]]></title>
            <link>https://mebiusbox.github.io/blog/2018/02/17/discontinued-projects</link>
            <guid>https://mebiusbox.github.io/blog/2018/02/17/discontinued-projects</guid>
            <pubDate>Sat, 17 Feb 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[以下のソフトウェアは開発終了・公開停止とさせていただきます．]]></description>
            <content:encoded><![CDATA[<p>以下のソフトウェアは開発終了・公開停止とさせていただきます．</p>
<ul>
<li>Mebiusbox2</li>
<li>FolderHammer</li>
<li>CodeMage</li>
<li>ExtendQuickBar</li>
<li>Bugboard</li>
<li>Mirage</li>
<li>PortalFolder</li>
<li>SmartQuickBar</li>
<li>MebiusPress</li>
<li>SmartTweetBar</li>
<li>MebiusboxReader</li>
<li>JsonBridge</li>
<li>FileMater</li>
</ul>
<p>使用してくれていた方々，ありがとうございました．</p>]]></content:encoded>
            <category>diary</category>
        </item>
        <item>
            <title><![CDATA[FileHammer  について]]></title>
            <link>https://mebiusbox.github.io/blog/2018/02/16/filehammer</link>
            <guid>https://mebiusbox.github.io/blog/2018/02/16/filehammer</guid>
            <pubDate>Fri, 16 Feb 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[これまで32bit 版から以下の対応をしました．]]></description>
            <content:encoded><![CDATA[<p>これまで32bit 版から以下の対応をしました．</p>
<ul>
<li>64bit 版</li>
<li>susie プラグインは 64bit 版（sph）ファイルに対応しました．</li>
<li>動画ルールを追加しました</li>
<li>重複ルールに xxHash を追加しました</li>
<li>ID3 ルールを使うために dll を用意してもらう必要がなくなりました</li>
<li>サポートしている画像形式：jpg, jpeg, jpe, jp2, pbm, ppm, pgm, png, tga, bmp, psd, gif, hdr, pic, pnm, tiff, tif, exr</li>
<li>サポートしている動画形式：mp4, avi, wmv, mov</li>
<li>動作させるために「Visual Studio 2015 の Visual C++ 再頒布可能パッケージ」のインストールが必要です． <a href="https://www.microsoft.com/ja-jp/download/details.aspx?id=48145" target="_blank" rel="noopener noreferrer">
https://www.microsoft.com/ja-jp/download/details.aspx?id=48145</a></li>
<li>動作環境は　Windows10 64bit のみです．（サポート対象外ですが Windows7 でも動作確認済み）</li>
</ul>
<p>※サポートしている画像形式や動画形式は仕様しているライブラリのドキュメントから抜粋しており，全ての形式で動作確認しているわけではありません．動画形式についてはコーデックによってサポートしていないものも存在します．</p>
<p>一通りやりたいことはやったので，あとは保守と何かあれば機能を追加するかもしれません．</p>
<hr>
<p><a href="http://mebiusbox.github.io/software_file_hammer.html" target="_blank" rel="noopener noreferrer">FileHammer</a></p>]]></content:encoded>
            <category>diary</category>
        </item>
        <item>
            <title><![CDATA[FileHammer  1.20.2 (64bit版) リリース]]></title>
            <link>https://mebiusbox.github.io/blog/2018/02/15/release-filehammer-x64</link>
            <guid>https://mebiusbox.github.io/blog/2018/02/15/release-filehammer-x64</guid>
            <pubDate>Thu, 15 Feb 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[1.20.2]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1202">1.20.2<a class="hash-link" aria-label="1.20.2 への直接リンク" title="1.20.2 への直接リンク" href="https://mebiusbox.github.io/blog/2018/02/15/release-filehammer-x64#1202">​</a></h2>
<ul>
<li>動画ルールを追加</li>
<li>Susie Plugin (64bit, .sph) に対応</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="64bit版について">64bit版について<a class="hash-link" aria-label="64bit版について への直接リンク" title="64bit版について への直接リンク" href="https://mebiusbox.github.io/blog/2018/02/15/release-filehammer-x64#64bit%E7%89%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6">​</a></h2>
<p>一部機能が削除されていたりします．これは開発版です．動作が以前より不安定になっている可能性があります．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="32bit版と違うところ">32bit版と違うところ<a class="hash-link" aria-label="32bit版と違うところ への直接リンク" title="32bit版と違うところ への直接リンク" href="https://mebiusbox.github.io/blog/2018/02/15/release-filehammer-x64#32bit%E7%89%88%E3%81%A8%E9%81%95%E3%81%86%E3%81%A8%E3%81%93%E3%82%8D">​</a></h2>
<ul>
<li>susie プラグインは 64bit 版（sph）ファイルに対応しました．</li>
<li>ID3 ルールを使うために dll を用意してもらう必要がなくなりました</li>
<li>サポートしている画像フォーマットが変わっています．</li>
<li>動作させるために「Visual Studio 2015 の Visual C++ 再頒布可能パッケージ」のインストールが必要です． <a href="https://www.microsoft.com/ja-jp/download/details.aspx?id=48145" target="_blank" rel="noopener noreferrer">
https://www.microsoft.com/ja-jp/download/details.aspx?id=48145</a></li>
<li>動作環境は　Windows10 64bit のみです．（サポート対象外ですが Windows7 でも動作確認済み）</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ダウンロード">ダウンロード<a class="hash-link" aria-label="ダウンロード への直接リンク" title="ダウンロード への直接リンク" href="https://mebiusbox.github.io/blog/2018/02/15/release-filehammer-x64#%E3%83%80%E3%82%A6%E3%83%B3%E3%83%AD%E3%83%BC%E3%83%89">​</a></h2>
<ul>
<li><a href="http://mebiusbox.sakura.ne.jp/bin/dl.php?dl=FileHammerSetupX64" target="_blank" rel="noopener noreferrer">インストーラ</a></li>
<li><a href="http://mebiusbox.sakura.ne.jp/bin/dl.php?dl=FileHammerX64" target="_blank" rel="noopener noreferrer">zip</a></li>
</ul>]]></content:encoded>
            <category>diary</category>
        </item>
    </channel>
</rss>