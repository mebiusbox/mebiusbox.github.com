<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Mebiusbox software Blog</title>
        <link>https://mebiusbox.github.io/blog</link>
        <description>Mebiusbox software Blog</description>
        <lastBuildDate>Sat, 03 May 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>ja</language>
        <item>
            <title><![CDATA[mdBookで一部を非公開にするプリプロセッサを作る]]></title>
            <link>https://mebiusbox.github.io/blog/2025/05/03/mdbook-private</link>
            <guid>https://mebiusbox.github.io/blog/2025/05/03/mdbook-private</guid>
            <pubDate>Sat, 03 May 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[公開したくない内容をビルド時に除外するプリプロセッサについて]]></description>
            <content:encoded><![CDATA[<p>mdBookで生成したWebコンテンツを公開する必要があったのですが、一部の内容は公開したくないものがありました．
本記事ではプリプロセッサを作成して実現する方法について解説します．</p>
<p>mdBookではマークダウン方式で記述した内容を静的Webコンテンツにビルドします．通常は <code>src</code> ディレクトリに含まれている <code>SUMMARY.md</code> をルートとして木構造で構築します．今回は、除外対象としてファイル単位、またはファイル内の一部を公開用ビルドしたときに除外します．また、非公開でビルドするときは除外しないようにします．</p>
<p>除外するためにプリプロセッサを使います．プリプロセッサは標準入力と標準出力さえ出来れば可能なので、Pythonを使います．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="mdbook-private">mdbook-private<a href="https://mebiusbox.github.io/blog/2025/05/03/mdbook-private#mdbook-private" class="hash-link" aria-label="mdbook-private への直接リンク" title="mdbook-private への直接リンク">​</a></h2>
<p>除外するプリプロセッサを <code>mdbook-private</code> という名前で作成します．ちなみに同名のプリプロセッサがすでに存在しますが、想定した使い方と異なるので自作します．
実装する機能としては以下の3つになります．</p>
<ul>
<li>ファイル名の先頭がアンダースコア（<code>_</code>）なら除外</li>
<li>Front Matterで非公開を制御する</li>
<li>コンテンツ内の一部を非公開にする</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="プリプロセッサの利用">プリプロセッサの利用<a href="https://mebiusbox.github.io/blog/2025/05/03/mdbook-private#%E3%83%97%E3%83%AA%E3%83%97%E3%83%AD%E3%82%BB%E3%83%83%E3%82%B5%E3%81%AE%E5%88%A9%E7%94%A8" class="hash-link" aria-label="プリプロセッサの利用 への直接リンク" title="プリプロセッサの利用 への直接リンク">​</a></h3>
<p>mdBookのプロジェクトディレクトリ（<code>book.toml</code>がある）に <code>preprocessor</code> ディレクトリを作り、そこに <code>mdbook-private.py</code> ファイルを作成します．
このプリプロセッサを使うには <code>book.toml</code> に以下のセクションを追加します．Windows用なので <code>py</code> を使っています．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">preprocessor.private</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"py preprocessor/mdbook_private.py"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ひな形">ひな形<a href="https://mebiusbox.github.io/blog/2025/05/03/mdbook-private#%E3%81%B2%E3%81%AA%E5%BD%A2" class="hash-link" aria-label="ひな形 への直接リンク" title="ひな形 への直接リンク">​</a></h3>
<div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"__main__"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token builtin" style="color:#e6db74">len</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic"># we check if we received any argument</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"supports"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token comment" style="color:#8292a2;font-style:italic"># then we are good to return an exit status code of 0, since the other argument will just be the renderer's name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">exit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># load both the context and the book representations from stdin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    context</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> book </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">load</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">stdin</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># we are done with the book's modification, we can just print it to stdout,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">print</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">book</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>プリプロセッサは標準入力からデータが渡されます．それを加工して標準出力に出力します．<code>context</code>には<code>book.toml</code>ファイルの設定が渡されます．<code>book</code>は <code>SUMMARY.md</code> からリンクされているすべてのファイルがまとめらたものです．どちらも<code>json</code>形式です．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ファイル名の先頭がアンダースコア_なら除外">ファイル名の先頭がアンダースコア（<code>_</code>）なら除外<a href="https://mebiusbox.github.io/blog/2025/05/03/mdbook-private#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%81%AE%E5%85%88%E9%A0%AD%E3%81%8C%E3%82%A2%E3%83%B3%E3%83%80%E3%83%BC%E3%82%B9%E3%82%B3%E3%82%A2_%E3%81%AA%E3%82%89%E9%99%A4%E5%A4%96" class="hash-link" aria-label="ファイル名の先頭がアンダースコア_なら除外 への直接リンク" title="ファイル名の先頭がアンダースコア_なら除外 への直接リンク">​</a></h3>
<p>各章は <code>book["sections"]</code> にあります．それを解析して処理します．以下がコードです．</p>
<div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">from</span><span class="token plain"> pathlib </span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> Path</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">def</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token comment" style="color:#8292a2;font-style:italic"># check prefix</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"path"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">stem</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">startswith</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"_"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        items </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> item </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> items</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"__main__"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token builtin" style="color:#e6db74">len</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic"># we check if we received any argument</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"supports"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token comment" style="color:#8292a2;font-style:italic"># then we are good to return an exit status code of 0, since the other argument will just be the renderer's name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">exit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># load both the context and the book representations from stdin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    context</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> book </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">load</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">stdin</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    sections </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> section </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> sections</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># we are done with the book's modification, we can just print it to stdout,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">print</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">book</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>check_section</code>関数は公開対象なら<code>True</code>を、そうでないなら<code>False</code>を返します．ファイル名は <code>section["Chapter"]["path"]</code> や <code>section["Chapter"]["source_path"]</code> で取得できるので、その値を使ってファイル名の先頭にアンダースコアがあるか確認します．また、節や項などはさらに<code>sub_items</code>に入っています．なので、再帰的に処理する必要があります．<code>check_section</code>関数の結果によって、公開する場合は <code>book["sections"]</code> に追加します．</p>
<p>章や節などには番号が割り振られていて、<code>book["sections"]["Chapter"]["number"]</code> にあります．章などを除外するとこの番号がずれてしまいますので番号を再割り当てする必要があります．この処理は今回は省略するので必要であれば処理を実装してください．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="front-matterで非公開を制御する">Front Matterで非公開を制御する<a href="https://mebiusbox.github.io/blog/2025/05/03/mdbook-private#front-matter%E3%81%A7%E9%9D%9E%E5%85%AC%E9%96%8B%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B" class="hash-link" aria-label="Front Matterで非公開を制御する への直接リンク" title="Front Matterで非公開を制御する への直接リンク">​</a></h2>
<p>ファイル名以外に、Front Matterを使って非公開を制御する仕組みを導入します．方法は簡単で、コンテンツにあるFront Matterを調べて <code>private</code> フィールドに <code>true</code> が設定されていれば非公開とします．</p>
<div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> re</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">def</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">check_private_with_frontmatter</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">content</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    pattern </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token builtin" style="color:#e6db74">compile</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">r"^---(?P&lt;frontmatters&gt;.*?)---\r?\n*"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">DOTALL</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    result </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> pattern</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">search</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">content</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        frontmatters </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">group</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"frontmatters"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        result </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">search</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">r"^private:\s*(?P&lt;private&gt;.*?)$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> frontmatters</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">MULTILINE</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">group</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"private"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">strip</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">startswith</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"true"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">def</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token comment" style="color:#8292a2;font-style:italic"># check frontmatter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> check_private_with_frontmatter</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"content"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        items </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> item </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> items</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"__main__"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token builtin" style="color:#e6db74">len</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic"># we check if we received any argument</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"supports"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token comment" style="color:#8292a2;font-style:italic"># then we are good to return an exit status code of 0, since the other argument will just be the renderer's name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">exit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># load both the context and the book representations from stdin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    context</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> book </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">load</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">stdin</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    sections </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> section </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> sections</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># we are done with the book's modification, we can just print it to stdout,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">print</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">book</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>check_private_with_frontmatter</code>関数でFront Matterを調べます．ここでは、正規表現を使って調べています．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="コンテンツ内の一部を非公開にする">コンテンツ内の一部を非公開にする<a href="https://mebiusbox.github.io/blog/2025/05/03/mdbook-private#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E5%86%85%E3%81%AE%E4%B8%80%E9%83%A8%E3%82%92%E9%9D%9E%E5%85%AC%E9%96%8B%E3%81%AB%E3%81%99%E3%82%8B" class="hash-link" aria-label="コンテンツ内の一部を非公開にする への直接リンク" title="コンテンツ内の一部を非公開にする への直接リンク">​</a></h3>
<p>コンテンツ内の一部を非公開にするため、コメントを使います．コメントで <code>&lt;!-- begin private --&gt;</code> と <code>&lt;!-- end private --&gt;</code> で囲まれた部分を非公開とします．
これも正規表現を使って処理します．</p>
<div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> re</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">def</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">remove_private_block</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"content"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">sub</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token string" style="color:#a6e22e">r"&lt;!--\s*begin\s+private\s*--&gt;[\r?\n]*(?P&lt;content&gt;.*?)[\r?\n]*&lt;!--\s*end\s+private\s*--&gt;[\r?\n]*"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token string" style="color:#a6e22e">""</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"content"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> item </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            remove_private_block</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"__main__"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token builtin" style="color:#e6db74">len</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic"># we check if we received any argument</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"supports"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token comment" style="color:#8292a2;font-style:italic"># then we are good to return an exit status code of 0, since the other argument will just be the renderer's name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">exit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># load both the context and the book representations from stdin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    context</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> book </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">load</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">stdin</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    sections </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> section </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> sections</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            remove_private_block</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># we are done with the book's modification, we can just print it to stdout,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">print</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">book</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="オプション機能">オプション機能<a href="https://mebiusbox.github.io/blog/2025/05/03/mdbook-private#%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E6%A9%9F%E8%83%BD" class="hash-link" aria-label="オプション機能 への直接リンク" title="オプション機能 への直接リンク">​</a></h3>
<p>プリプロセッサに対してオプション機能を実装します．たとえば、それぞれの機能の有効・無効の切替を制御できると便利です．
プリプロセッサのオプションは <code>book.toml</code> ファイルの各プリプロセッサセクションで設定できます．このオプションは <code>context</code> に含まれています．
<code>mdbook-private.py</code> プリプロセッサのオプションは <code>context["config"]["preprocessor"]["private"]</code> に入っています．
ここでは、プリプロセッサの有効・無効を切り替える <code>enabled</code> と、コンテンツ内の一部を非公開にする機能を切り替える <code>hidden-block</code> オプションに対応します．</p>
<p>このオプションに対応したコードは次のようになります：</p>
<div class="language-py codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-py codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> re</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">from</span><span class="token plain"> pathlib </span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> Path</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">def</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">check_private_with_frontmatter</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">content</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    pattern </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token builtin" style="color:#e6db74">compile</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">r"^---(?P&lt;frontmatters&gt;.*?)---\r?\n*"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">DOTALL</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    result </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> pattern</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">search</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">content</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        frontmatters </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">group</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"frontmatters"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        result </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">search</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">r"^private:\s*(?P&lt;private&gt;.*?)$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> frontmatters</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">MULTILINE</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">group</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"private"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">strip</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">startswith</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"true"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">def</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token comment" style="color:#8292a2;font-style:italic"># check prefix</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"path"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">stem</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">startswith</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"_"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token comment" style="color:#8292a2;font-style:italic"># check frontmatter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> check_private_with_frontmatter</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"content"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">False</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        items </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> item </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> items</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">def</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">remove_private_block</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"content"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">sub</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token string" style="color:#a6e22e">r"&lt;!--\s*begin\s+private\s*--&gt;[\r?\n]*(?P&lt;content&gt;.*?)[\r?\n]*&lt;!--\s*end\s+private\s*--&gt;[\r?\n]*"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token string" style="color:#a6e22e">""</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"content"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> item </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            remove_private_block</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"__main__"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token builtin" style="color:#e6db74">len</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic"># we check if we received any argument</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"supports"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token comment" style="color:#8292a2;font-style:italic"># then we are good to return an exit status code of 0, since the other argument will just be the renderer's name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">exit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># load both the context and the book representations from stdin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    context</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> book </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">load</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">stdin</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    config </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> context</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"config"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"preprocessor"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"private"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"enabled"</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">not</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> config </span><span class="token keyword" style="color:#66d9ef">or</span><span class="token plain"> config</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"enabled"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        sections </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> section </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> sections</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> check_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"hidden-block"</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> config </span><span class="token keyword" style="color:#66d9ef">and</span><span class="token plain"> config</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"hidden-block"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                    remove_private_block</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># we are done with the book's modification, we can just print it to stdout,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">print</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">book</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>あとは<code>book.toml</code>でこれらのオプションを設定します．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">preprocessor.private</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"py preprocessor/mdbook_private.py"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">enabled</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">hidden-block</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="プリプロセッサの実行順番">プリプロセッサの実行順番<a href="https://mebiusbox.github.io/blog/2025/05/03/mdbook-private#%E3%83%97%E3%83%AA%E3%83%97%E3%83%AD%E3%82%BB%E3%83%83%E3%82%B5%E3%81%AE%E5%AE%9F%E8%A1%8C%E9%A0%86%E7%95%AA" class="hash-link" aria-label="プリプロセッサの実行順番 への直接リンク" title="プリプロセッサの実行順番 への直接リンク">​</a></h3>
<p>このプリプロセッサはFront Matterを使っていますが、mdBookでは標準だと普通にレンダリングされてしまいます．たとえば、以前に書いた記事 <a href="https://mebiusbox.github.io/blog/2024/10/12/mdbook-frontmatter">mdBookでFront Matterを処理する</a> で作成したプリプロセッサ（<code>mdbook-frontmatter.py</code>）などで取り除くことができます．それと組合せて使うと次のようになります．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">preprocessor.frontmatter</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"py preprocessor/mdbook_frontmatter.py"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">preprocessor.private</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"py preprocessor/mdbook_private.py"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">enabled</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">hidden-block</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>このとき、処理される順番は定義順ではなく、何かしらでソートされた順番で処理されているようです．frontmatterプリプロセッサでFront Matter部分が取り除かれるとprivateプリプロセッサが正常に処理できません．そのため、privateプリプロセッサがfrontmatterプリプロセッサの前に処理するようにしなければなりません．そこで、<code>after</code> や <code>before</code> を使います．ここでは <code>before</code> を使って次のようにします．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">preprocessor.frontmatter</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"py preprocessor/mdbook_frontmatter.py"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">preprocessor.private</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">before</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"frontmatter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"py preprocessor/mdbook_private.py"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">hidden-block</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">enabled</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>これで、privateプリプロセッサがfrontmatterプリプロセッサの前に処理されます．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="実行時にプリプロセッサのオプションを変更�する">実行時にプリプロセッサのオプションを変更する<a href="https://mebiusbox.github.io/blog/2025/05/03/mdbook-private#%E5%AE%9F%E8%A1%8C%E6%99%82%E3%81%AB%E3%83%97%E3%83%AA%E3%83%97%E3%83%AD%E3%82%BB%E3%83%83%E3%82%B5%E3%81%AE%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B" class="hash-link" aria-label="実行時にプリプロセッサのオプションを変更する への直接リンク" title="実行時にプリプロセッサのオプションを変更する への直接リンク">​</a></h3>
<p>公開用と非公開用をコマンドラインから切り替えられると便利です．<code>book.toml</code> の設定は環境変数を使って実行時に書き換えることができます．通常は非公開用にすべてレンダリングするようにします．設定は次のようになります．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">preprocessor.frontmatter</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"py preprocessor/mdbook_frontmatter.py"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">preprocessor.private</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">before</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"frontmatter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"py preprocessor/mdbook_private.py"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">hidden-block</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">enabled</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>公開用にビルドするときは、privateプリプロセッサを有効にし、出力先のディレクトリも変更します．各オプションは環境変数で <code>MDBOOK</code> を接頭辞にして指定します．セクションは <code>__</code> で区切り、<code>-</code> は <code>_</code> に置き換えます．以下は公開用の環境変数設定例です．</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">MDBOOK_BUILD__BUILD_DIR = "book_public"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">MDBOOK_PREPROCESSOR__PRIVATE__ENABLED = "true"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>公開用は "book_public" ディレクトリに出力するように指定しています．たとえば、<code>cargo-make</code> を使った設定は次のようになります．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">tasks.build</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">description</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Build book"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"mdbook"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">args</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token string" style="color:#a6e22e">"build"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token string" style="color:#a6e22e">"${@}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">tasks.build-public</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">description</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Build book"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">script_runner</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"pwsh"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">script_extension</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"ps1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">script</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'''</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token string" style="color:#a6e22e">$BuildDir = ".\book_public"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token string" style="color:#a6e22e">$env:MDBOOK_BUILD__BUILD_DIR = $BuildDir</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token string" style="color:#a6e22e">$env:MDBOOK_PREPROCESSOR__PRIVATE__ENABLED = "true"</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token string" style="color:#a6e22e">mdbook clean</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token string" style="color:#a6e22e">mdbook build</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token string" style="color:#a6e22e">'''</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>次のように使います．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">makers build        </span><span class="token comment" style="color:#8292a2;font-style:italic"># for private</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">makers build-public </span><span class="token comment" style="color:#8292a2;font-style:italic"># for public</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以上です．</p>]]></content:encoded>
            <category>mdBook</category>
        </item>
        <item>
            <title><![CDATA[Visual Studio CodeのC#フォーマッタ設定]]></title>
            <link>https://mebiusbox.github.io/blog/2025/04/17/csharp-formatter-for-vscode</link>
            <guid>https://mebiusbox.github.io/blog/2025/04/17/csharp-formatter-for-vscode</guid>
            <pubDate>Thu, 17 Apr 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Visual Studio Code のフォーマット設定について]]></description>
            <content:encoded><![CDATA[<p>Visual Studio Code のC#フォーマッタの設定について解説します．</p>
<p>これまでは主にC#を使った開発は Visual Studio を使っていましたが、Visual Studio CodeでもC#のコードを書けるようにしたいです．
そこで、Visual Studio CodeでのC#フォーマッタについて備忘録として残しておきます．ただ、きちんと調べたわけではなく、正確な情報とは言えませんので注意してください．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="フォーマッタ">フォーマッタ<a href="https://mebiusbox.github.io/blog/2025/04/17/csharp-formatter-for-vscode#%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%82%BF" class="hash-link" aria-label="フォーマッタ への直接リンク" title="フォーマッタ への直接リンク">​</a></h2>
<p>Visual Studio Code の拡張機能 <a href="https://marketplace.visualstudio.com/items/?itemName=ms-dotnettools.csharp" target="_blank" rel="noopener noreferrer">C#</a> に入っています．
フォーマットしようとしたときに、標準のフォーマッタが指定されていないと表示されたら、以下の設定を追加します．</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token property" style="color:#f92672">"[csharp]"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token property" style="color:#f92672">"editor.defaultFormatter"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"ms-dotnettools.csharp"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token property" style="color:#f92672">"editor.formatOnSave"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>editor.formatOnSave</code> を <code>true</code> に設定することで保存時にフォーマッタが実行されるようにしています．</p>
<p>ちなみに、コマンドラインからフォーマッタを実行する <code>dotnet-format</code> というツールもありますが、私が試したところ、あまり意図したフォーマットにならなかったり、ちょっと使いづらい印象でした．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="設定">設定<a href="https://mebiusbox.github.io/blog/2025/04/17/csharp-formatter-for-vscode#%E8%A8%AD%E5%AE%9A" class="hash-link" aria-label="設定 への直接リンク" title="設定 への直接リンク">​</a></h2>
<p>C#拡張機能にあるフォーマッタは <code>.editorconfig</code> ファイルを参照してくれます．なので、設定は <code>.editorconfig</code> ファイルに記述します．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="基本設定">基本設定<a href="https://mebiusbox.github.io/blog/2025/04/17/csharp-formatter-for-vscode#%E5%9F%BA%E6%9C%AC%E8%A8%AD%E5%AE%9A" class="hash-link" aria-label="�基本設定 への直接リンク" title="基本設定 への直接リンク">​</a></h3>
<p>あらかじめ用意されている設定については <a href="https://learn.microsoft.com/ja-jp/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options" target="_blank" rel="noopener noreferrer">C# 書式設定オプション</a> を参照してください．以下は一例です．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">*</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain">cs</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain">csx</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># New Line Options</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_new_line_before_open_brace</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> none </span><span class="token comment" style="color:#8292a2;font-style:italic"># "{"を新しい行に配置するか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_new_line_before_else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "else"を新しい行に配置するか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_new_line_before_catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "catch"を新しい行に配置するか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_new_line_before_finally</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "finally"を新しい行に配置するか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_new_line_before_members_in_object_initializers</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># オブジェクト初期化子のメンバーを別の行に配置するか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_new_line_before_members_in_anonymous_types</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># 匿名型のメンバーを別の行に配置するか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_new_line_between_query_expression_clauses</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># クエリ式の句の要素を別の行に配置するか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Indentation Options</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_indent_block_contents</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># ブロックの内容をインデントするか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_indent_braces</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "{}"をインデントするか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_indent_switch_labels</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "switch" ラベルにインデントを付けるか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_indent_case_contents</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "switch" ケースにインデントを付けるか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_indent_case_contents_when_block</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "switch" ケースでのブロックをインデントするか</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_indent_labels</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> one_less_than_current </span><span class="token comment" style="color:#8292a2;font-style:italic"># ラベルの配置位置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Spacing Options</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_before_comma</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># コンマの前</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_after_comma</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># コンマの後</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_before_dot</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># ドットの前</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_after_dot</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># ドットの後</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_between_parentheses</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "()"間</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_around_binary_operators</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> before_and_after </span><span class="token comment" style="color:#8292a2;font-style:italic"># バイナリ演算子の前後</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_before_open_square_brackets</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "["の前</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_between_square_brackets</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># "[]"の間</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_between_empty_square_brackets</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># 空の"[]"の間</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_after_cast</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># キャストの間</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_after_keywords_in_control_flow_statements</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># 制御フローステートメント(forなど)の後</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_before_semicolon_in_for_statement</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># forステートメントのセミコロンの前</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_after_semicolon_in_for_statement</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># forステートメントのセミコロンの後</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_around_declaration_statements</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># 宣言ステートメントの余計な空白文字. "false"なら削除</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_between_method_declaration_name_and_open_parenthesis</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># メソッド宣言のメソッド名と始め括弧の間</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_between_method_declaration_parameter_list_parentheses</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># メソッド宣言パラメータのリスト始めと終わり</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_between_method_declaration_empty_parameter_list_parentheses</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># メソッド宣言の空パラメータのリスト始めと終わり</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_between_method_call_name_and_opening_parenthesis</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># メソッド呼び出し名と始め括弧の間</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_between_method_call_parameter_list_parentheses</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># メソッド呼び出しの始め括弧と終わり括弧</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_between_method_call_empty_parameter_list_parentheses</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># 空パラメータのメソッド呼び出しの始め括弧と終わり括弧</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_before_colon_in_inheritance_clause</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># 型宣言の":"前</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_space_after_colon_in_inheritance_clause</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># 型宣言の":"後</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Wrap Options</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_preserve_single_line_statements</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># 1行に複数のステートメントとメンバー宣言を表示</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">csharp_preserve_single_line_blocks</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># コードブロックを単一行に配置</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="命名規則の拡張">命名規則の拡張<a href="https://mebiusbox.github.io/blog/2025/04/17/csharp-formatter-for-vscode#%E5%91%BD%E5%90%8D%E8%A6%8F%E5%89%87%E3%81%AE%E6%8B%A1%E5%BC%B5" class="hash-link" aria-label="命名規則の拡張 への直接リンク" title="命名規則の拡張 への直接リンク">​</a></h3>
<p>整形以外に、命名規則のルールを設定できます．設定は <code>.editorconfig</code> に記述します．命名規則のルールを追加するには、3つのエンティティ（スタイル・シンボル・ルール）を記述する必要があります．詳しくは <a href="https://learn.microsoft.com/ja-jp/dotnet/fundamentals/code-analysis/style-rules/naming-rules" target="_blank" rel="noopener noreferrer">コードスタイルの名前付けルール</a> にあります．スタイルで、PascalCaseやcamelCase、アンダースコアなどを指定します．シンボルではルールを適用するシンボルの種類を指定します．そして、ルールでスタイルとシンボルを指定することで命名規則ルールが適用されます．</p>
<p>エンティティは <code>AAA.BBB.CCC</code> という形で指定します．<code>AAA</code>はどのエンティティかを指定します．</p>
<table><thead><tr><th>名前</th><th>エンティティ</th></tr></thead><tbody><tr><td>dotnet_naming_style</td><td>スタイル</td></tr><tr><td>dotnet_naming_symbols</td><td>シンボル</td></tr><tr><td>dotnet_naming_rule</td><td>ルール</td></tr></tbody></table>
<p>次に <code>BBB</code> はエンティティ名となります．好きな名前を指定できます．たとえば、<code>dotnet_naming_style.pascal_case</code> としたら、<code>pascal_case</code>という名前のスタイルになります．</p>
<p>そして、<code>CCC</code>でそれぞれのカテゴリに関するプロパティを設定します．たとえば、<code>PascalCase</code>のスタイルを指定する場合</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key property" style="color:#f92672">dotnet_naming_style.pascal_case.capitalization</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>という様になります．<code>camelCase</code>なら</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key property" style="color:#f92672">dotnet_naming_style.camel_case.capitalization</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> camel_case</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>となります．また、アンダースコア（<code>_</code>）と<code>camelCase</code>を組み合わせる場合は次のようになります．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key property" style="color:#f92672">dotnet_naming_style.camel_case_and_prefix_with_underscore.required_prefix</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> _</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_style.camel_case_and_prefix_with_underscore.capitalization</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> camel_case</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>他にインターフェイスクラスで接頭辞を<code>I</code>、<code>PascalCase</code>にしたい場合は次のようになります．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key property" style="color:#f92672">dotnet_naming_style.pascal_case_and_prefix_with_I.required_prefix</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> I</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_style.pascal_case_and_prefix_with_I.capitalization</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以下はスタイルの設定例です．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key property" style="color:#f92672">dotnet_naming_style.camel_case.capitalization</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> camel_case</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_style.pascal_case.capitalization</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_style.camel_case_and_prefix_with_underscore.required_prefix</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> _</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_style.camel_case_and_prefix_with_underscore.capitalization</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> camel_case</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_style.pascal_case_and_prefix_with_I.required_prefix</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> I</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_style.pascal_case_and_prefix_with_I.capitalization</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_style.pascal_case_and_prefix_with_T.required_prefix</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> T</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_style.pascal_case_and_prefix_with_T.capitalization</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>次に、シンボルでは <code>applicable_kinds</code>、<code>applicable_accessibilities</code>、<code>required_modifiers</code> などを指定します．以下は一例です．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token comment" style="color:#8292a2;font-style:italic"># Naming Symbols</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Interfaces</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.interface.applicable_kinds</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> interface</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.interface.applicable_accessibilities</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> *</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Type parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.type_parameter_symbols.applicable_kinds</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> type_parameter</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.type_parameter_symbols.applicable_accessibilities</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> *</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Constants</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.constant.applicable_kinds</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> field</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.constant.required_modifiers</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> const</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.constant.applicable_accessibilities</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> *</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Pascal most of the things</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.pascal.applicable_kinds</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> class</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> struct</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> enum</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> property</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> method</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> namespace</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> delegate</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> local_function</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.pascal.applicable_accessibilities</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> *</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Parameters, locals</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.locals_and_parameters.applicable_kinds</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> parameter</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> local</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.locals_and_parameters.applicable_accessibilities</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> *</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Private fields</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.private_or_internal_field.applicable_kinds</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> field</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> internal</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> private</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.private_or_internal_field.required_modifiers</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Public fields</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.public_field.applicable_kinds</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> field</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_symbols.public_field.applicable_accessibilities</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> public</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> internal</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> friend</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> protected</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> protected_internal</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> protected_friend</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> private_protected</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>これまで定義したスタイルとシンボルを組合せてルールを定義します．たとえば、インターフェイスクラスの命名規則として <code>I</code> + <code>PascalCase</code> を指定する場合は次のようになります．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key property" style="color:#f92672">dotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.symbols</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> interface</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.style</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case_and_prefix_with_I</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.severity</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> warning</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>severity</code> は重要度で警告やエラーなどを指定できます．</p>
<table><thead><tr><th>重要度</th><th>動作</th></tr></thead><tbody><tr><td>error</td><td>エラー</td></tr><tr><td>warning</td><td>警告</td></tr><tr><td>suggestion</td><td>メッセージ．IDEでは修正候補として表示される</td></tr><tr><td>silent</td><td>非表示</td></tr><tr><td>none</td><td>無視</td></tr><tr><td>default</td><td>既定の動作</td></tr></tbody></table>
<p>以下はルールの一例です．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token comment" style="color:#8292a2;font-style:italic"># Naming Rules</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Interfaces</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.symbols</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> interface</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.style</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case_and_prefix_with_I</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.interfaces_must_be_pascal_cased_and_prefixed_with_I.severity</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> warning</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Type parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.type_parameters_must_be_pascal_cased_and_prefixed_with_T.symbols</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> type_parameter</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.type_parameters_must_be_pascal_cased_and_prefixed_with_T.style</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case_and_prefix_with_T</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.type_parameters_must_be_pascal_cased_and_prefixed_with_T.severity</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> warning</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Pascal most of the things</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.externally_visible_members_must_be_pascal_cased.symbols</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.externally_visible_members_must_be_pascal_cased.style</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.externally_visible_members_must_be_pascal_cased.severity</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> warning</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Parameters, locals</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.parameters_must_be_camel_cased.symbols</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> locals_and_parameters</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.parameters_must_be_camel_cased.style</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> camel_case</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.parameters_must_be_camel_cased.severity</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> warning</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Constants</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.constants_must_be_pascal_cased.symbols</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> constant</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.constants_must_be_pascal_cased.style</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.constants_must_be_pascal_cased.severity</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> warning</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Public fields</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.public_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.symbols</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> public_field</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.public_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.style</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> pascal_case</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.public_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.severity</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> warning</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># Private fields</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.symbols</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> private_or_internal_field</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.style</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> camel_case_and_prefix_with_underscore</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">dotnet_naming_rule.private_instance_fields_must_be_camel_cased_and_prefixed_with_underscore.severity</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> warning</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>実際の <code>.editorconfig</code> については <a href="https://gist.github.com/mebiusbox/c660eee4639989e8f1ebe1a3b80e5ade" target="_blank" rel="noopener noreferrer">こちら</a>を参照してください．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="コード分析の設定">コード分析の設定<a href="https://mebiusbox.github.io/blog/2025/04/17/csharp-formatter-for-vscode#%E3%82%B3%E3%83%BC%E3%83%89%E5%88%86%E6%9E%90%E3%81%AE%E8%A8%AD%E5%AE%9A" class="hash-link" aria-label="コード分析の設定 への直接リンク" title="コード分析の設定 への直接リンク">​</a></h2>
<p>余談ですが、他にもコード分析の設定を <code>.editorconfig</code> に記述できます．詳しくは <a href="https://learn.microsoft.com/ja-jp/dotnet/fundamentals/code-analysis/configuration-options#severity-level" target="_blank" rel="noopener noreferrer">コード分析の構成オプション</a> を参照してください．たとえば、<a href="https://learn.microsoft.com/ja-jp/dotnet/fundamentals/code-analysis/style-rules/ide0044" target="_blank" rel="noopener noreferrer">IDE0044</a>を無効にしたい場合、次のように指定します．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key property" style="color:#f92672">dotnet_diagnostic.IDE0044.severity</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> none</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以上です．</p>]]></content:encoded>
            <category>VS Code</category>
            <category>C#</category>
        </item>
        <item>
            <title><![CDATA[Obsidianで複数のディレクトリを1つのVaultで管理する方法]]></title>
            <link>https://mebiusbox.github.io/blog/2025/03/29/obsidian-single-vault</link>
            <guid>https://mebiusbox.github.io/blog/2025/03/29/obsidian-single-vault</guid>
            <pubDate>Sat, 29 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[（場所がばらばらな）複数のディレクトリを1つのVaultで管理する方法について]]></description>
            <content:encoded><![CDATA[<p>Obsidianで（場所がばらばらな）複数のディレクトリを1つのVaultで管理する方法について解説します．</p>
<p>先日、<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian">VS CodeとmdBookとObsidianを使った環境</a>という記事を書きました．
非常に快適なので、他のドキュメントも Obsidian で閲覧できるようにしたいなと思いました．</p>
<p>バージョン管理するほどでないちょっとしたメモ（テキストベース）は Visual Studio Code の拡張機能 Notes で管理しています．
このデータは Google Drive で保存しています．これは Markdown で書かれていたり、PDFの資料が入っています．このディレクトリも合わせて Obsidian で見れないかと思いました．Vault を新規に作成して管理する方法もありますが、プラグインや設定が別々になってしまって管理しづらくなってしまうので、なんとか1つのVaultで管理できないか、というのが今回のテーマです．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="シンボリックリンクの作成">シンボリックリンクの作成<a href="https://mebiusbox.github.io/blog/2025/03/29/obsidian-single-vault#%E3%82%B7%E3%83%B3%E3%83%9C%E3%83%AA%E3%83%83%E3%82%AF%E3%83%AA%E3%83%B3%E3%82%AF%E3%81%AE%E4%BD%9C%E6%88%90" class="hash-link" aria-label="シンボリックリンクの作成 への直接リンク" title="シンボリックリンクの作成 への直接リンク">​</a></h2>
<p>結論から言うと、標準の Vault ディレクトリの中に、それぞれシンボリックリンクを作成する方法で解決しました．
もはや Visual Studio Code で管理する必要はないのではと思わなくもないですが、やはり、手軽に Visual Studio Code で編集したいので、とりあえず Notes を使いつつ、Obsidian はビューアとして使っていこうと思います．</p>
<p>以上です．</p>]]></content:encoded>
            <category>Obsidian</category>
        </item>
        <item>
            <title><![CDATA[VS CodeとmdBookとObsidianを使った環境]]></title>
            <link>https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian</link>
            <guid>https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian</guid>
            <pubDate>Sun, 23 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[VS CodeとmdBook、Obsidianを使ったドキュメント管理について]]></description>
            <content:encoded><![CDATA[<p>ドキュメント管理の方法として VS Code、mdBook そして Obsidian を組み合わせて使う方法について解説します．</p>
<p>最近、VS Code と mdBook 以外に Obsidian も導入したので、それについてここにまとめておきます．</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>備考</div><div class="admonitionContent_BuS1"><p>まだ、Obsidian を試しに導入したばかりなので、まだわからないことが多いです．</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="notionについて">Notionについて<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#notion%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6" class="hash-link" aria-label="Notionについて への直接リンク" title="Notionについて への直接リンク">​</a></h2>
<p>まず、Notionについて少し触れておこうと思います．Notionは主にInputとして使っていて、いろんな情報をとりあえずまとめておきたいときに使っています．
データベースをうまく使ってまとめていたり、タスクやカレンダーなどの機能も使って重宝しています．</p>
<p>とても便利なのですが、一方で、いくつか不満もあります．</p>
<ul>
<li>編集しづらい</li>
<li>表示が遅い</li>
<li>ページが表示されないことがある</li>
</ul>
<p>やはり編集する場合はVS Codeなどのエディタに慣れているとどうしても不満があります．これは Notion の問題というより、ブラウザまたはネイティブアプリ全般に共通していることなので仕方ありません．基本的にブラウザで編集していますが、Stylusでカスタマイズすることで何とかマシになっています．</p>
<p>あと、とくにコード編集がイマイチで、これに関しては少しずつ改善されてきていますが、まだまだといった感じです．たとえば、2行目から先頭行にカーソルを移動したいのに、上のブロックにカーソルが移動してしまったり．今は改善されましたが、1行目とシンタックスハイライトの言語がかぶって見えずらかった時期もありました（そのため、意図的に先頭に空行を入れていたり）．</p>
<p>表示が遅い件については、多少環境に依存しているところもあるのですが、ページを開くと数十秒以上かかることがあります．データベースビューの場合は結構待たされることが多い気がします．ページを細かくしてしまうと、ページ遷移だけでも遅く感じるのでなるべくまとめておきたくなるぐらいです．これは、無料版を使っている影響もあるかもしれません．</p>
<p>最後に、一番の問題はページが表示されないことがあることです．いつまでたっても表示されないことがときどきあります．とくにサーバーが落ちている訳でもないのにです．この状況になると1時間近く見られないこともありました．謎ですが、結構致命的な問題です．なので、Notionをメインに扱うことは避けるようになってきました．</p>
<p>これまで、いくつか不満な部分を挙げましたが、それでも便利なのは間違いありません．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vs-code--mdbook">VS Code + mdBook<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#vs-code--mdbook" class="hash-link" aria-label="VS Code + mdBook への直接リンク" title="VS Code + mdBook への直接リンク">​</a></h2>
<p>入力として Notion を使っているのですが、ある程度資料が溜まりだすと情報が細分化されすぎてて管理しづらくなります．
なので、最終的にはある程度まとめて本としてまとめあげることが多いです．Zennで本としていくつも執筆して公開しているようにです．</p>
<p>その場合は、VS Code と mdBook を使って書いています．VS Codeのビルトイン機能であるブラウザ機能を使えば、backendにmdBookを使ったドキュメント管理をVS Code上でできます．もちろん、ビルドしたものを外部ブラウザで表示したり、PDFとして出力することも簡単にできます．</p>
<p>これで本としてドキュメントをいくつも管理しています．</p>
<p>ただ、開発全般の本をまとめているときに不満が出てきました．やはり、木構造で管理するため、分岐が多くなってくると不便に感じます．
とはいえ、編集環境そのものは今のままでいいと思っています．今、問題なのはmdBookで作成したドキュメントの「閲覧」をもっとお手軽かつ素早く行えることです．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="obsidian">Obsidian<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#obsidian" class="hash-link" aria-label="Obsidian への直接リンク" title="Obsidian への直接リンク">​</a></h2>
<p>そこで、Obsidianに目を付けました．実は何回かインストールしては消していたりしていました．毎回、Notion や mdBook でいいよね、って感じます．
今回はただの「ビューア」として利用することにしました．</p>
<p>基本的にReaderモードで使います．ただ、デイリーログがとてもやりやすいのでその機能だけ有効にしています．他の不要なものは無効にしています．</p>
<p>ある程度セットアップが終わったら、思った以上に悪くなかったのでしばらく様子見することにします．以下は、Obsidianを導入する際にインストールしたプラグインや気になったところをまとめます．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="コアプラグイン">コアプラグイン<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#%E3%82%B3%E3%82%A2%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3" class="hash-link" aria-label="コアプラグイン への直接リンク" title="コアプラグイン への直接リンク">​</a></h3>
<table><thead><tr><th>Plugin</th><th>Enable/Disable</th></tr></thead><tbody><tr><td>Audio recorder</td><td>Disable</td></tr><tr><td>Backlinks</td><td>Disable</td></tr><tr><td>Bookmarks</td><td>Disable</td></tr><tr><td>Canvas</td><td>Disable</td></tr><tr><td>Command palette</td><td>✅Enable</td></tr><tr><td>Daily notes</td><td>✅Enable</td></tr><tr><td>File recovery</td><td>Disable</td></tr><tr><td>Files</td><td>✅Enable</td></tr><tr><td>Format converter</td><td>Disable</td></tr><tr><td>Graph view</td><td>Disable</td></tr><tr><td>Note composer</td><td>Disable</td></tr><tr><td>Outgoing links</td><td>Disable</td></tr><tr><td>Outline</td><td>✅Enable</td></tr><tr><td>Page preview</td><td>Disable</td></tr><tr><td>Properties view</td><td>Disable</td></tr><tr><td>Publish</td><td>Disable</td></tr><tr><td>Quick switcher</td><td>✅Enable</td></tr><tr><td>Random note</td><td>Disable</td></tr><tr><td>Search</td><td>✅Enable</td></tr><tr><td>Slash commands</td><td>Disable</td></tr><tr><td>Slides</td><td>Disable</td></tr><tr><td>Sync</td><td>Disable</td></tr><tr><td>Tags view</td><td>Disable</td></tr><tr><td>Templates</td><td>✅Enable</td></tr><tr><td>Unique note creator</td><td>Disable</td></tr><tr><td>Web viewer</td><td>Disable</td></tr><tr><td>Word count</td><td>Disable</td></tr><tr><td>Workspaces</td><td>Disable</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="コミュニティプラグイン">コミュニティプラグイン<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#%E3%82%B3%E3%83%9F%E3%83%A5%E3%83%8B%E3%83%86%E3%82%A3%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3" class="hash-link" aria-label="コミュニティプラグイン への直接リンク" title="コミュニティプラグイン への直接リンク">​</a></h3>
<table><thead><tr><th>Plugin</th><th>Description</th></tr></thead><tbody><tr><td>Calender</td><td>カレンダー機能</td></tr><tr><td>Dataview</td><td>データ抽出</td></tr><tr><td>Incremental ID</td><td>固有ID</td></tr><tr><td>Meta bind</td><td>カスタムボタン</td></tr><tr><td>Templater</td><td>テンプレート</td></tr><tr><td>Thino</td><td>デイリーログ</td></tr><tr><td>Tray</td><td>システムトレイ、ホットキー</td></tr><tr><td>Metadata Hider</td><td>プロパティが空なら非表示</td></tr></tbody></table>
<p>以下は、試したけど不採用だったもの．</p>
<table><thead><tr><th>Plugin</th><th>Description</th></tr></thead><tbody><tr><td>Admonition</td><td>mdBookと互換がない</td></tr><tr><td>Another Quick Switcher</td><td>標準のもので十分だった．高性能だけど表示がみづらい</td></tr><tr><td>Show Whitespace</td><td>なぜかコードブロックの表示がおかしくなる</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="frontmatter">Frontmatter<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#frontmatter" class="hash-link" aria-label="Frontmatter への直接リンク" title="Frontmatter への直接リンク">​</a></h3>
<p>ObsidianではFrontmatterに色々な情報を設定することでタグなどプロパティを設定できるが、mdBookは標準でFrontmatterをそのまま表示するので、対応が必要．
これに関しては、以前にmdBookのFrontmatterを処理するものを書いていたので問題にならなかった．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="mdbookと共存">mdBookと共存<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#mdbook%E3%81%A8%E5%85%B1%E5%AD%98" class="hash-link" aria-label="mdBookと共存 への直接リンク" title="mdBookと共存 への直接リンク">​</a></h3>
<p>mdBookの <code>src</code> フォルダを Obsidian の Vault に設定しているけど、とくに問題はなかった．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="タブサイズ">タブサイズ<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#%E3%82%BF%E3%83%96%E3%82%B5%E3%82%A4%E3%82%BA" class="hash-link" aria-label="タブサイズ への直接リンク" title="タブサイズ への直接リンク">​</a></h3>
<p>Obsidian ではハードタブを使うとプラグインが動作しないものがあったので、スペース一択．そして、スペースの幅を2にしたいけど、強制で4スペースになる．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ホットキ�ー">ホットキー<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#%E3%83%9B%E3%83%83%E3%83%88%E3%82%AD%E3%83%BC" class="hash-link" aria-label="ホットキー への直接リンク" title="ホットキー への直接リンク">​</a></h3>
<p>コミュニティプラグインの <code>Tray</code> を使うことで表示・非表示を簡単に切り替えられる．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="見た目のカスタマイズ">見た目のカスタマイズ<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#%E8%A6%8B%E3%81%9F%E7%9B%AE%E3%81%AE%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA" class="hash-link" aria-label="見た目のカスタマイズ への直接リンク" title="見た目のカスタマイズ への直接リンク">​</a></h3>
<p>CSSで問題なくできた．プレビューだけでなくそれ以外の部分もフォントはもちろん大きさも変えられる．ある程度文字のサイズを大きくしないときつい．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="カラーコードがタグとして認識される">カラーコードがタグとして認識される<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#%E3%82%AB%E3%83%A9%E3%83%BC%E3%82%B3%E3%83%BC%E3%83%89%E3%81%8C%E3%82%BF%E3%82%B0%E3%81%A8%E3%81%97%E3%81%A6%E8%AA%8D%E8%AD%98%E3%81%95%E3%82%8C%E3%82%8B" class="hash-link" aria-label="カラーコードがタグとして認識される への直接リンク" title="カラーコードがタグとして認識される への直接リンク">​</a></h3>
<p>色の管理をしていて、 <code>#123456</code> などと書いているものがあるけど、これがタグとして認識されてしまう．
インラインコードにしているものは無視してくれるけど、VS Codeではインラインコードにしないでおくと画面にその色が表示されるので便利だからそのまま記述しています．また、<code>#000000</code> というように数字だけだとタグにならない．そうなると、次のように表示が一貫しない．</p>
<p><img decoding="async" loading="lazy" alt="ColorAsTag - Obsidian" src="https://mebiusbox.github.io/assets/images/03-23-vscode-mdbook-obsidian-7c587f5a3ae24b9eabdc4fdcbd94c6b6.jpg" width="435" height="432" class="img_ev3q"></p>
<p>ちなみに、VS Codeだと次のように表示されます．</p>
<p><img decoding="async" loading="lazy" alt="ColorAsTag(VS Code) - Obsidian" src="https://mebiusbox.github.io/assets/images/03-23-vscode-mdbook-obsidian-colorastag-vscode-c5e8c977ff53c0d26643820a48d71b8a.jpg" width="448" height="253" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="終わりに">終わりに<a href="https://mebiusbox.github.io/blog/2025/03/23/vscode-mdbook-obsidian#%E7%B5%82%E3%82%8F%E3%82%8A%E3%81%AB" class="hash-link" aria-label="終わりに への直接リンク" title="終わりに への直接リンク">​</a></h2>
<p>以上が ObisidanをVS CodeとmdBookの環境にビューアとして使った環境になります．
Obsidianのプラグインや設定が Vault ごとなのはメリットでもありデメリットなので、今回のように複数のドキュメントリポジトリがある場合はあまり向いていない気もします．まだ、Obsidianを導入したばかりなのでまだまだわからないことが多いです．ちなみに、mdBookでは <code>SUMMARY.md</code> がルートとなりますが、今回のObsidianでは<code>src/daily/</code> にデイリーログを、<code>src/templates/</code> にテンプレートを、<code>src/OBSIDIAN.md</code> をダッシュボードとして配置しています．設定は <code>src/.obsidian</code> で、gitの管理外としています．</p>
<p>参考になれば幸いです．</p>]]></content:encoded>
            <category>VS Code</category>
            <category>mdBook</category>
            <category>Obsidian</category>
            <category>Notion</category>
        </item>
        <item>
            <title><![CDATA[ちょっとしたMarkdown編集用の拡張機能を作りました]]></title>
            <link>https://mebiusbox.github.io/blog/2025/03/20/vscode-toggle-markers</link>
            <guid>https://mebiusbox.github.io/blog/2025/03/20/vscode-toggle-markers</guid>
            <pubDate>Thu, 20 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[ショートカットをムダに増やさないために]]></description>
            <content:encoded><![CDATA[<p>Markdown編集用にちょっと欲しかった機能があったので拡張機能を作りました．</p>
<!-- -->
<p>Markdownを編集するときに太字などにショートカットが使えると便利です．しかし、たとえば太字は <code>Ctrl+B</code> とか、斜体は <code>Ctrl+I</code> など、他に割り当てている機能とかぶることが多いです．そこで、1つのショートカットキーで「斜体」→「太字」→「斜体＋太字」→「取り消し線」→「なし」と切り替える機能が欲しくなりました．ざっくり調べたところ、とくにそういう機能がなかったので自作することにしました．といっても、1から作るよりかは既存のものを改良すると楽なので、今回もそのように作りました．</p>
<p>今回の拡張機能は「<a href="https://marketplace.visualstudio.com/items?itemName=BriteSnow.vscode-toggle-quotes" target="_blank" rel="noopener noreferrer">toggleQuotes</a>」にインスパイアされました．また、ソースコードも参考にしています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="実装">実装<a href="https://mebiusbox.github.io/blog/2025/03/20/vscode-toggle-markers#%E5%AE%9F%E8%A3%85" class="hash-link" aria-label="実装 への直接リンク" title="実装 への直接リンク">​</a></h2>
<p>実装してみたんですがいくつか問題、というか不便な部分が残っています．改良できるといいのですが、とりあえず様子見で．
まず、あらかじめクォーテーションで囲んである必要があります．これは、Visual Studio Code で <code>editor.autoSurround</code> を <code>quotes</code> に設定することで選択した文字を簡単に囲むことができます．その状態で作成したコマンドを呼び出すショートカットキーを入力すれば切り替わります．</p>
<p>今回の実装では、太字や斜体から逆に取り消したいことがあったので、最後に「なし」に設定しているのですが、「なし」の状態からまた「斜体」などに繰り返すことができません．ちょっと難しそうだったのであきらめました．</p>
<p>この機能を使うと次のようになります．</p>
<div class="videoWrapper_xpwa"><div style="width:100%;height:100%" class="videoPlayer_IRVz"></div></div>
<p>以上です．</p>]]></content:encoded>
            <category>vscode</category>
            <category>markdown</category>
        </item>
        <item>
            <title><![CDATA[OpenCV 4.12 をビルドする]]></title>
            <link>https://mebiusbox.github.io/blog/2025/03/09/build-opencv-412</link>
            <guid>https://mebiusbox.github.io/blog/2025/03/09/build-opencv-412</guid>
            <pubDate>Sun, 09 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[WindowsでOpenCV 4.12をビルドする方法]]></description>
            <content:encoded><![CDATA[<p>WindowsでOpenCVをビルドする方法です．OpenCVをビルドする方法の解説はそこらじゅうにありますが、必要最低限のビルド構成について解説します．</p>
<p>OpenCVにはさまざまなモジュールがあります．今回は最低限の画像処理だけできればいいように <code>core</code>, <code>imgproc</code>, <code>imgcodecs</code>, <code>videoio</code>のみをビルドする構成にします．また、64bit版のみとします．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="準備">準備<a href="https://mebiusbox.github.io/blog/2025/03/09/build-opencv-412#%E6%BA%96%E5%82%99" class="hash-link" aria-label="準備 への直接リンク" title="準備 への直接リンク">​</a></h2>
<p>ソースコードは OpenCV の<a href="https://github.com/opencv/opencv" target="_blank" rel="noopener noreferrer">リポジトリ</a>から取得します．今回は Contrib を使いません．また、OpenCV は<code>4.x</code>の最新版を取得しました．ビルドするには <a href="https://cmake.org/" target="_blank" rel="noopener noreferrer">CMake</a> が必要です．必要であればWinGetでインストールします．WinGetでインストールする場合はパスが追加されてませんので、必要に応じて追加します．</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">winget install Kitware.Cmake</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ビルドには Visual Studio 2022 を使います．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="プロジェクトの生成">プロジェクトの生成<a href="https://mebiusbox.github.io/blog/2025/03/09/build-opencv-412#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E7%94%9F%E6%88%90" class="hash-link" aria-label="プロジェクトの生成 への直接リンク" title="プロジェクトの生成 への直接リンク">​</a></h2>
<p>CMakeを使ってプロジェクトを作成します．不要なモジュールとテストコードを除外します．</p>
<p>クローンしたディレクトリに <code>build.x64</code> ディレクトリを作成し、そこに移動します．そして、次のコマンドを実行します．
必要なモジュールがあれば、削除して有効にしてください．</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">cmake -G "Visual Studio 17 2022" -A x64 -DBUILD_TESTS=OFF -DBUILD_PERF_TEST=OFF -DBUILD_opencv_apps=OFF -DBUILD_opencv_calib3d=OFF -DBUILD_opencv_dnn=OFF -DBUILD_opencv_features2d=OFF -DBUILD_opencv_flann=OFF -DBUILD_opencv_gapi=OFF -DBUILD_opencv_highgui=OFF -DBUILD_opencv_java_bindings_generator=OFF -DBUILD_opencv_js_bindings_generator=OFF -DBUILD_opencv_ml=OFF -DBUILD_opencv_objc_bindings_generator=OFF -DBUILD_opencv_objdetect=OFF -DBUILD_opencv_photo=OFF -DBUILD_opencv_python3=OFF -DBUILD_opencv_python_bindings_generator=OFF -DBUILD_opencv_python_tests=OFF -DBUILD_opencv_stitching=OFF -DBUILD_opencv_ts=OFF -DBUILD_opencv_video=OFF ..</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>警告</div><div class="admonitionContent_BuS1"><p>Pythonモジュールを有効にするとDebugビルド時にPythonライブラリのDebug版が求められますので注意．</p></div></div>
<p>正常終了すればプロジェクトファイルが作成されます．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ビルド">ビルド<a href="https://mebiusbox.github.io/blog/2025/03/09/build-opencv-412#%E3%83%93%E3%83%AB%E3%83%89" class="hash-link" aria-label="ビルド への直接リンク" title="ビルド への直接リンク">​</a></h2>
<p><code>ALL_BUILD.vcxproj</code> を開いて <code>ALL_BUILD</code> 構成でビルドします．その後、<code>INSTALL</code> 構成でビルドすれば <code>build.x64\install</code> にインストールされます．
ターミナルでも CMake を使ってビルドやインストールができます．その場合は次のコマンドを実行します．</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">cmake --build .\ --config Debug</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">cmake --build .\ --config Release</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">cmake --install .\ --config Debug</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">cmake --install .\ --config Release</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>どちらでも構いません．個人的に何かエラーが発生した場合は、Visual Studioで確認したほうがいいので、面倒でもVisual Studioを開いてビルドすることをオススメします．</p>
<p>以上です．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="おまけ">おまけ<a href="https://mebiusbox.github.io/blog/2025/03/09/build-opencv-412#%E3%81%8A%E3%81%BE%E3%81%91" class="hash-link" aria-label="おまけ への直接リンク" title="おまけ への直接リンク">​</a></h2>
<p>CMake で次のようなエラーが出る場合：</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">CMake Error: The following variables are used in this project, but they are set to NOTFOUND. Please set them or make sure they are set and tested correctly in the CMake files: CUDA_nppial_LIBRARY (ADVANCED) linked by target ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>OpenCV 3.x 系をビルドしようとしたらこのようなエラーが出ました．一応、対応できるらしいですが、問題なければ 4.x 系を使いましょう．
（3.3.0 で確認しました．どうやら 3.4.0 から修正されているようですが、確認はしていません）</p>]]></content:encoded>
            <category>OpenCV</category>
            <category>CMake</category>
        </item>
        <item>
            <title><![CDATA[最近導入したWindows用のツール]]></title>
            <link>https://mebiusbox.github.io/blog/2025/03/07/windows-tools</link>
            <guid>https://mebiusbox.github.io/blog/2025/03/07/windows-tools</guid>
            <pubDate>Fri, 07 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[最近導入して便利だと感じたツールの紹介]]></description>
            <content:encoded><![CDATA[<p>最近、Windows用のツールを見直してインストールし直していました．
比較的ターミナルベースで操作することが多くなってきました．というのも、GUIのあるツールが減った感じがします．
ここでは、環境について少しお話します．その後に、導入してよく使っているツールを3つ紹介します．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="環境">環境<a href="https://mebiusbox.github.io/blog/2025/03/07/windows-tools#%E7%92%B0%E5%A2%83" class="hash-link" aria-label="環境 への直接リンク" title="環境 への直接リンク">​</a></h2>
<p>基本的に WinGet を使います．それ以外だと、cargo（Rust）や go を使います．一部のツールでは python モジュールだったり、node で実装されているものもありますが、かなり少なくしています．winget や <a href="https://github.com/nabijaczleweli/cargo-update" target="_blank" rel="noopener noreferrer">cargo-update</a>, <a href="https://github.com/nao1215/gup" target="_blank" rel="noopener noreferrer">gup</a> を使うことで最新バージョンへのアップデートがとても楽になっています．以前はポータブル版をダウンロードして管理していましたが、普通にインストールするようにしました．ただ、すべてというわけではなく、やはり一部のツールは従来通りの方法で管理しているものもあります．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="yazi">yazi<a href="https://mebiusbox.github.io/blog/2025/03/07/windows-tools#yazi" class="hash-link" aria-label="yazi への直接リンク" title="yazi への直接リンク">​</a></h2>
<p><a href="https://github.com/sxyazi/yazi" target="_blank" rel="noopener noreferrer">yazi</a> は Terminal File Manager です．以前は <a href="https://github.com/gokcehan/lf" target="_blank" rel="noopener noreferrer">lf</a> を使っていました．
yaziはRust言語、lfはGo言語で開発されています．yaziは速いということですが、結構バックグラウンドタスクが多いので、そんなに快適さは感じられません．ファイル処理も100ファイル程度を操作すると固まることもあります．</p>
<p>正直 lf でも良さそうな感じは否めないですが、カスタマイズや拡張に関して yazi の方がとてもやりやすく感じました．yazi は plugin によって機能を拡張できます．プラグインはlua言語です．使っているツールでlua言語によるカスタマイズがいくつかあるので、やりやすいです．ただ、また情報は少ないといった印象を受けます．また、カスタマイズも結構しないと使い勝手はよくありませんが、ちゃんと設定すれば快適です．最近のWindowsTerminalでは画像プレビューもできるようになっています．</p>
<p>ちなみにファイル操作はターミナルだとyazi、それ以外だと <a href="https://freecommander.com/en/summary/" target="_blank" rel="noopener noreferrer">FreeCommander</a> をまだ使っています．最近 <a href="https://filepilot.tech/" target="_blank" rel="noopener noreferrer">File Pilot</a> というのが無料で使えるようになったようで、実際に使ってみたのですが、確かに爆速でした．が、残念ながらUnicode対応されておらず、日本語がまともに表示されません．一応、対応予定に入っているようです．設定も十分だったし良さそうなので、期待しています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="window-swicher">window-swicher<a href="https://mebiusbox.github.io/blog/2025/03/07/windows-tools#window-swicher" class="hash-link" aria-label="window-swicher への直接リンク" title="window-swicher への直接リンク">​</a></h2>
<p><a href="https://github.com/sigoden/window-switcher" target="_blank" rel="noopener noreferrer">window-switcher</a>は同じアプリケーションのウィンドウをすぐに切り替えることができるツールです．タスクの切り替えは <a href="https://www.ntwind.com/software/alttabter.html" target="_blank" rel="noopener noreferrer">Alt-Tab Terminator</a> を使っていますが、同じアプリケーションを切り替える場合は window-swicher の方が便利です．複数のプロジェクトをワークスペースで管理する方法も試していたのですが、メリット・デメリットがあって、結局ワークスペースはあまり使わないようにしています．そうすると VS Code のウィンドウが多くなりがちですが、これでサクっと切り替えられます．ただ、注意点はあって、ショートカットキーが <code>Alt</code>+<code>`</code> なのですが、ときどき悪さをします．不具合だと思いますが、<code>`</code> が入力できなくなることがあるんですよね．適当に操作していると直ります．不満なところはこれですね．</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>2025/03/20 追記</div><div class="admonitionContent_BuS1"><p>Visual Studio Code には <code>Switch Window</code> というコマンドがあるので、Visual Studio Codeだけならこれで十分でした．</p></div></div>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>2025/05/21 追記</div><div class="admonitionContent_BuS1"><p>ショートカットキーの暴発が結構ストレスで、結局使うのをやめました．</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="manictime">ManicTime<a href="https://mebiusbox.github.io/blog/2025/03/07/windows-tools#manictime" class="hash-link" aria-label="ManicTime への直接リンク" title="ManicTime への直接リンク">​</a></h2>
<p><a href="https://www.manictime.com/" target="_blank" rel="noopener noreferrer">ManicTime</a> はトラッキングツールです．自分が何のアプリケーションを、どれくらい使っていたかを確認できます．
とくに設定が不要で、標準のままで使えます．GUIもよくできているので、わかりやすいです．あまり進捗がよくないときや、時間が取れてないなと感じたら ManicTime で確認してみると、何に時間を取られているのかがわかります．個人でかつローカルで使うだけなら無料版で十分です．</p>
<p>以上です．</p>]]></content:encoded>
            <category>windows</category>
        </item>
        <item>
            <title><![CDATA[PowerShellで標準正規分布の累積分布関数の値を計算する]]></title>
            <link>https://mebiusbox.github.io/blog/2024/11/14/normal-cdf-in-powershell</link>
            <guid>https://mebiusbox.github.io/blog/2024/11/14/normal-cdf-in-powershell</guid>
            <pubDate>Thu, 14 Nov 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[PowerShellで標準正規分布の累積分布関数(CDF)の値を計算する方法]]></description>
            <content:encoded><![CDATA[<p>PowerShellで標準正規分布の累積分布関数を求める方法（近似）を紹介します．</p>
<p>検索してみると、「<a href="https://numerics.mathdotnet.com/" target="_blank" rel="noopener noreferrer">Math.Net Numerics</a>」を使う方法が見つかりますが、今回は、外部モジュールに依存しないかたちで実装します．</p>
<p>ここでは、標準正規分布の累積分布関数を求めるために、誤差関数を使います．そして、誤差関数は近似式を使って実装します．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Get-ErrorFunction</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[CmdletBinding()]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">param</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[double]</span><span class="token variable" style="color:#f8f8f2">$x</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic"># https://en.wikipedia.org/wiki/Error_function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$a1</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">254829592</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$a2</span><span class="token plain"> = </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">284496736</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$a3</span><span class="token plain"> = 1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">421413741</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$a4</span><span class="token plain"> = </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">453152027</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$a5</span><span class="token plain"> = 1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">061405429</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$p</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">3275911</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$sign</span><span class="token plain"> = </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[Math]</span><span class="token plain">::Sign</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$x</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$x</span><span class="token plain"> = </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[Math]</span><span class="token plain">::Abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$x</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$t</span><span class="token plain"> = 1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0 </span><span class="token operator" style="color:#66d9ef">/</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0 </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$p</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$x</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$t2</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$t</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$t</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$t3</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$t2</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$t</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$t4</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$t3</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$t</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$t5</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$t4</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$t</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$y</span><span class="token plain"> = </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$a1</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$t</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$a2</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$t2</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$a3</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$t3</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$a4</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$t4</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$a5</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$t5</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$sign</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0 </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$y</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[Math]</span><span class="token plain">::Exp</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">-</span><span class="token variable" style="color:#f8f8f2">$x</span><span class="token operator" style="color:#66d9ef">*</span><span class="token variable" style="color:#f8f8f2">$x</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>この近似式については「<a href="https://en.wikipedia.org/wiki/Error_function" target="_blank" rel="noopener noreferrer">Wikipedia</a>」を参照してください．
また、この近似式による計算誤差は最大で $1.5\times 10^{-7}$ ということです．
あとは、この誤差関数を使って累積分布関数の値を計算します．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Get-NormalCDF</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[CmdletBinding()]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">param</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[double]</span><span class="token variable" style="color:#f8f8f2">$x</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># https://en.wikipedia.org/wiki/Normal_distribution</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5 </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0 </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">Get-ErrorFunction</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$x</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">/</span><span class="token plain"> </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[Math]</span><span class="token plain">::Sqrt</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">2</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>この計算式については、「<a href="https://en.wikipedia.org/wiki/Normal_distribution" target="_blank" rel="noopener noreferrer">Wikipedia</a>」を参照してください．
テストコードと結果は次のようになりました．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Test-ErrorFunction</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$testValues</span><span class="token plain"> = @</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">2</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">75</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$expectValues</span><span class="token plain"> = @</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">222702</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">520499</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">711155</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">842700</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$i</span><span class="token plain"> = 0</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">foreach</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$value</span><span class="token plain"> in </span><span class="token variable" style="color:#f8f8f2">$testValues</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$result</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">Get-ErrorFunction</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$expect</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$expectValues</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token variable" style="color:#f8f8f2">$i</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"P(X ≤ </span><span class="token string variable" style="color:#f8f8f2">$value</span><span class="token string" style="color:#a6e22e">) = </span><span class="token string variable" style="color:#f8f8f2">$result</span><span class="token string" style="color:#a6e22e"> (expect = </span><span class="token string variable" style="color:#f8f8f2">$expect</span><span class="token string" style="color:#a6e22e">)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$i</span><span class="token operator" style="color:#66d9ef">++</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Test-NormalCDF</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$testValues</span><span class="token plain"> = @</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">333333</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 2</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$expectValues</span><span class="token plain"> = @</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">1915</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">3413</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">408788726</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">4332</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">4773</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$i</span><span class="token plain"> = 0</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">foreach</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$value</span><span class="token plain"> in </span><span class="token variable" style="color:#f8f8f2">$testValues</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$result</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">Get-NormalCDF</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$expect</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$expectValues</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token variable" style="color:#f8f8f2">$i</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"P(X ≤ </span><span class="token string variable" style="color:#f8f8f2">$value</span><span class="token string" style="color:#a6e22e">) = </span><span class="token string variable" style="color:#f8f8f2">$result</span><span class="token string" style="color:#a6e22e"> (expect = </span><span class="token string variable" style="color:#f8f8f2">$expect</span><span class="token string" style="color:#a6e22e">)"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$i</span><span class="token operator" style="color:#66d9ef">++</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; </span><span class="token function" style="color:#e6db74">Test-ErrorFunction</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">2</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">222702457858316 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">222702</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">520500016304747 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">520499</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">75</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">711155569636656 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">711155</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 1</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">84270068974759 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">8427</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; </span><span class="token function" style="color:#e6db74">Test-NormalCDF</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">691462462723994 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">6915</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 1</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">841344736167636 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">8413</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">333333</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">908788660560468 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">908788726</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">933192769023498 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">9332</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">P</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">X ≤ 2</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">977249937112744 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">expect = 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">9773</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以上です．</p>]]></content:encoded>
            <category>powershell</category>
        </item>
        <item>
            <title><![CDATA[Visual Studio CodeでJupyter NotebookのMarkdownセルのスタイルを変更する]]></title>
            <link>https://mebiusbox.github.io/blog/2024/10/21/modify-styles-of-markdown-on-vs-code</link>
            <guid>https://mebiusbox.github.io/blog/2024/10/21/modify-styles-of-markdown-on-vs-code</guid>
            <pubDate>Mon, 21 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Visual Studio CodeでJupyter NotebookのMarkdownセルのスタイルを変更する方法について解説]]></description>
            <content:encoded><![CDATA[<p>Visual Studio CodeでJupyter NotebookのMarkdownセルの見た目を変更する方法に関する備忘録です．</p>
<p>Jupyter Notebookサーバーを使ってNotebookを編集するのではなく、Visual Studio Codeで編集できるとエディタの機能が使えてとても便利です．
しかし、Markdownセルの見た目が標準のままだとわかりづらいので、カスタマイズしたいです．
そのためにはテーマや拡張機能「<a href="https://marketplace.visualstudio.com/items?itemName=drcika.apc-extension" target="_blank" rel="noopener noreferrer">Apc Customize UI++</a>」を使う方法があります．
とくにApc Customize UI++拡張機能がお手軽で楽なのですが、影響範囲が広く、またVisual Studio Codeのバージョンによって動作が不安定になります．
Visual Studio CodeのUIをカスタマイズする拡張機能には他にも「<a href="https://marketplace.visualstudio.com/items?itemName=drcika.apc-extension" target="_blank" rel="noopener noreferrer">Custom CSS and JS Loader</a>」があります．私はこれを利用しているのですが、Notebookのカスタマイズに
は手が届きませんでした．</p>
<p>何とかしてスタイルシートによる調整をしたかったので調査しました．</p>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>警告</div><div class="admonitionContent_BuS1"><p>この内容と同じことをする場合は自己責任でお願いします．また、バックアップは事前にしておいたほうがいいでしょう．</p></div></div>
<p>Developerツールを使ってJupyter Notebookのプレビュー画面を調べてみると、Markdownセルを表示しているタグの直前にいくつかのスタイルシートが定義されたり読み込まれていることがわかりました．これはビルトイン拡張機能 Markdown Language Features, Markdown Math によって行われているようです．
これらの拡張機能は <code>C:\Users\&lt;user&gt;\AppData\Local\Program\Microsoft VS Code\resources\app\extensions</code> にあります．
それらの拡張機能に含まれている <code>notebook-out</code> に含まれているファイルが処理されているようです．
Markdown Language Featuresはデフォルトのスタイルを、Markdown MathはKaTeXのスタイルを管理しているようです．</p>
<p>ということで、デフォルトのスタイル部分を直接いじることで強引に見た目をカスタマイズします．
具体的には <code>markdown-language-features\notebook-out\index.js</code> ファイルを編集します．
ファイルを開くと、ファイル後ろにスタイルの定義がありますので、書き換えます．
あとは、Visual Studio Codeを再起動すれば反映されます．</p>
<p>変更前：</p>
<p><img decoding="async" loading="lazy" alt="カスタマイズ前" src="https://mebiusbox.github.io/assets/images/10-21-modify-styles-of-markdown-on-vs-code-before-3ac299e281d50c9801c5f4baa4cb9f5d.jpg" width="689" height="578" class="img_ev3q"></p>
<p>変更後：</p>
<p><img decoding="async" loading="lazy" alt="カスタマイズ後" src="https://mebiusbox.github.io/assets/images/10-21-modify-styles-of-markdown-on-vs-code-after-dc3265d390266d0f5fb492e1936b4a0c.jpg" width="698" height="572" class="img_ev3q"></p>
<p>ビルトイン拡張機能を直接書き換えているのでよろしくない方法ではありますが、現状だとこれがお手軽だと思います．
他に良い方法があれば教えていただけると助かります．</p>
<p>以上です．</p>]]></content:encoded>
            <category>vscode</category>
            <category>jupyter</category>
        </item>
        <item>
            <title><![CDATA[Eagleで無効なフォルダが存在する問題]]></title>
            <link>https://mebiusbox.github.io/blog/2024/10/12/eagle-unused-directory-in-library</link>
            <guid>https://mebiusbox.github.io/blog/2024/10/12/eagle-unused-directory-in-library</guid>
            <pubDate>Sat, 12 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Eagleで無効なフォルダが存在することがあり、ディスク容量を無駄に消費する場合があります]]></description>
            <content:encoded><![CDATA[<p>Eagleを使っているとライブラリの中に無効なフォルダが存在することがあります．
ここではこの無効なフォルダに関する内容を残しておきます</p>
<p><a href="https://jp.eagle.cool/" target="_blank" rel="noopener noreferrer">Eagle</a>を使っていると、ライブラリの中に無効なフォルダがあることに気づきました．
この無効なフォルダとはEagleからは認識されていないフォルダのことです．</p>
<p>Eagleでは1つのファイルごとにディレクトリがライブラリの<code>images</code>ディレクトリの中に作成され管理されているようです．
その中に<code>metadata.json</code>ファイルやサムネイルなどが格納されています．
無効なフォルダはこの<code>metadata.json</code>ファイルが入っていません．ですから、Eagleからは認識されていないようです．
ただし、確認したのは検索で見つかるかどうかなので、もしかすると内部では参照している可能性もあります．
記憶が曖昧なので、それが削除したものなのかEagleの不具合によって発生したのか見当がつきません．
少なくともEagleでのごみ箱は空になっている状態で、検索で見つからない以上、無効なフォルダと言っていいでしょう．</p>
<p>無効なフォルダを調べてみると、削除したものや重複したものがありました．それらは不要なので削除しておきたいです．</p>
<p>この無効なフォルダを探す場合はライブラリ内のディレクトリを走査して<code>metadata.json</code>ファイルが存在するかどうかを確認すればよさそうです．
そこで、次のようなPowerShellスクリプトを作成してライブラリを走査し、無効なフォルダがあれば出力しています．また、削除する機能も入れました．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Move-ToRecycleBin</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">CmdletBinding</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">SupportsShouldProcess = </span><span class="token boolean" style="color:#ae81ff">$True</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> DefaultParameterSetName = </span><span class="token string" style="color:#a6e22e">'Path'</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">Param</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[SupportsWildCards()]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">Parameter</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      Mandatory = </span><span class="token boolean" style="color:#ae81ff">$True</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      Position = 0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      ParameterSetName = </span><span class="token string" style="color:#a6e22e">'Path'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      ValueFromPipeline = </span><span class="token boolean" style="color:#ae81ff">$True</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      ValueFromPipelineByPropertyName = </span><span class="token boolean" style="color:#ae81ff">$True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[string[]]</span><span class="token variable" style="color:#f8f8f2">$Path</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">Alias</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">'LP'</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">Alias</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">'PSPath'</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">Parameter</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      Mandatory = </span><span class="token boolean" style="color:#ae81ff">$True</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      Position = 0</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      ParameterSetName = </span><span class="token string" style="color:#a6e22e">'LiteralPath'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      ValueFromPipeline = </span><span class="token boolean" style="color:#ae81ff">$False</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      ValueFromPipelineByPropertyName = </span><span class="token boolean" style="color:#ae81ff">$True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[string[]]</span><span class="token variable" style="color:#f8f8f2">$LiteralPath</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">Begin</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$shell</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">New-Object</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">ComObject Shell</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Application</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$trash</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$shell</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">NameSpace</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">10</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">Process</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$PSBoundParameters</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">ContainsKey</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">'Path'</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token variable" style="color:#f8f8f2">$targets</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">Convert-Path</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$Path</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token variable" style="color:#f8f8f2">$targets</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">Convert-Path</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">LiteralPath </span><span class="token variable" style="color:#f8f8f2">$LiteralPath</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$targets</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Foreach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$PSCmdlet</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">ShouldProcess</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$trash</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">MoveHere</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> CheckUnused</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[CmdletBinding()]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">param</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[string]</span><span class="token variable" style="color:#f8f8f2">$LibraryPath</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[switch]</span><span class="token variable" style="color:#f8f8f2">$Remove</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[switch]</span><span class="token variable" style="color:#f8f8f2">$Force</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">Test-Path</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">LiteralPath </span><span class="token variable" style="color:#f8f8f2">$LibraryPath</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$ImagePath</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">Join-Path</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$LibraryPath</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"images"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">Get-ChildItem</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Directory </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">LiteralPath </span><span class="token variable" style="color:#f8f8f2">$ImagePath</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token function" style="color:#e6db74">Write-Progress</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Activity </span><span class="token string" style="color:#a6e22e">"Checking..."</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Status </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Name</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token variable" style="color:#f8f8f2">$metaDataJson</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">Join-Path</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">FullName </span><span class="token string" style="color:#a6e22e">"metadata.json"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">-not</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">Test-Path</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">LiteralPath </span><span class="token variable" style="color:#f8f8f2">$metaDataJson</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Unused: </span><span class="token string function" style="color:#e6db74">$</span><span class="token string function punctuation" style="color:#f8f8f2">(</span><span class="token string function variable" style="color:#f8f8f2">$_</span><span class="token string function punctuation" style="color:#f8f8f2">.</span><span class="token string function" style="color:#e6db74">FullName</span><span class="token string function punctuation" style="color:#f8f8f2">)</span><span class="token string" style="color:#a6e22e">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token function" style="color:#e6db74">Get-ChildItem</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">LiteralPath </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">FullName </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          </span><span class="token string" style="color:#a6e22e">"    "</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Name</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$Remove</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$Force</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token function" style="color:#e6db74">Move-ToRecycleBin</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">LiteralPath </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">FullName</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token function" style="color:#e6db74">Move-ToRecycleBin</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Literalpath </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">FullName </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Confirm</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ここで使用している<code>Move-ToRecycleBin</code>はゴミ箱への削除機能で「<a href="https://zenn.dev/zuishin/articles/2019_03_02_1fa77bccd111b55f7bf6" target="_blank" rel="noopener noreferrer">PowerShell でファイルやフォルダをごみ箱に入れる</a>」を参考にして作成したものです．</p>
<p><code>CheckUnused</code>コマンドレットでEagleのライブラリをチェックします．<code>-LibraryPath</code>には<code>xxx.library</code> (xxxは任意)のパスを指定します．
<code>-Remove</code>で削除します．通常は削除確認しますが、<code>-Force</code>を有効にすれば確認せずに削除します．</p>
<p>なお、ここに記述しているコードは使用する場合は自己責任でお願いいたします．</p>
<p>以上です．</p>]]></content:encoded>
            <category>eagle</category>
            <category>powershell</category>
        </item>
        <item>
            <title><![CDATA[mdBookでFront Matterを処理する]]></title>
            <link>https://mebiusbox.github.io/blog/2024/10/12/mdbook-frontmatter</link>
            <guid>https://mebiusbox.github.io/blog/2024/10/12/mdbook-frontmatter</guid>
            <pubDate>Sat, 12 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[mdBookでFront Matterを処理するプログラムの作成]]></description>
            <content:encoded><![CDATA[<p>mdBookでMarkdownファイルに含まれているFront Matterを処理するスクリプトの作成について解説します．</p>
<p>mdBookではMarkdownファイルをレンダリングする前にプリプロセス（事前処理）する仕組みがあります．
これはプリプロセッサが行います．プリプロセッサは標準入力からデータを受け取って加工し、それを標準出力に出力します．
ここで、実行ファイルが<code>python</code>などであればスクリプトで処理することもできます．
ここでは、Markdownファイルに含まれるFrontMatterを処理するプリプロセッサをPythonプログラムで作成します．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="front-matter">Front Matter<a href="https://mebiusbox.github.io/blog/2024/10/12/mdbook-frontmatter#front-matter" class="hash-link" aria-label="Front Matter への直接リンク" title="Front Matter への直接リンク">​</a></h2>
<p>Front Matterはファイルの先頭に付加するメタデータです．通常YAML形式が使われます．
たとえば、<a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a>ではブログ記事のソースファイルであるMarkdownファイルにFront Matterを入れてさまざまな設定や追加情報を入れることができます．しかし、mdBookでは標準だと処理されずにそのままレンダリングされます．</p>
<p>Markdownファイルにメタデータは残しつつ、レンダリング時には表示してほしくありません．
そこで、プリプロセッサを使います．
mdBookのプラグインを探してみるとFront Matterを処理するものがいくつか見つかりますが、実際に使ってみるとFront Matter以外も削除したりと意図した挙動になってませんでした．なので、自分でプリプロセッサを作ってみることにします．ここでは、Pythonを使ってプログラムを作成します．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="プリプロセッサ">プリプロセッサ<a href="https://mebiusbox.github.io/blog/2024/10/12/mdbook-frontmatter#%E3%83%97%E3%83%AA%E3%83%97%E3%83%AD%E3%82%BB%E3%83%83%E3%82%B5" class="hash-link" aria-label="プリプロセッサ への直接リンク" title="プリプロセッサ への直接リンク">​</a></h2>
<p>プリプロセッサをPythonで作成する方法と使用方法はmdBookの公式ドキュメントに書かれています：</p>
<ul>
<li><a href="https://rust-lang.github.io/mdBook/format/configuration/preprocessors.html#provide-your-own-command" target="_blank" rel="noopener noreferrer">Configuring Preprocessors - Provide Your Own Command</a></li>
<li><a href="https://rust-lang.github.io/mdBook/for_developers/preprocessors.html#implementing-a-preprocessor-with-a-different-language" target="_blank" rel="noopener noreferrer">Preprocessor - Implementing a preprocessor with a different language</a></li>
</ul>
<p>前述したとおり、標準入力からデータが入ってきます．データはJSON形式です．データを変更したあとに標準出力に渡します．公式には次の単純なプログラムが紹介されています．</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'__main__'</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token builtin" style="color:#e6db74">len</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token comment" style="color:#8292a2;font-style:italic"># we check if we received any argument</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"supports"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token comment" style="color:#8292a2;font-style:italic"># then we are good to return an exit status code of 0, since the other argument will just be the renderer's name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">exit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># load both the context and the book representations from stdin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    context</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> book </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">load</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">stdin</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># and now, we can just modify the content of the first chapter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">'sections'</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">'Chapter'</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">'content'</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">'# Hello'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># we are done with the book's modification, we can just print it to stdout,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">print</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">book</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>これをベースに機能を作成します．今回作成するのはFront Matter部分のカットと、Front Matterに含まれている<code>Title</code>を見出しとして出力する機能です．
作成したプリプロセッサ <code>mdbook-frontmatter.py</code> は次のとおりです．</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">mdbook-frontmatter.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> re</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">def</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">process</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">content</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    pattern </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token builtin" style="color:#e6db74">compile</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">r"^---(?P&lt;frontmatters&gt;.*?)---\r?\n*"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">DOTALL</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    result </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> pattern</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">search</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">content</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        frontmatters </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">group</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"frontmatters"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        title </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        result </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">search</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">r"^title:\s*(?P&lt;title&gt;.*?)$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> frontmatters</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> re</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">MULTILINE</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> result</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            title </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"# {}\n\n"</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token builtin" style="color:#e6db74">format</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">result</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">group</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"title"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">strip</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">'"'</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        content </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> title </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> pattern</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">sub</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">""</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> content</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> content</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">def</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">process_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"content"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> process</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"content"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> item </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> section</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"Chapter"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sub_items"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            process_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">item</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"__main__"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token builtin" style="color:#e6db74">len</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic"># we check if we received any argument</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">==</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"supports"</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token comment" style="color:#8292a2;font-style:italic"># then we are good to return an exit status code of 0, since the other argument will just be the renderer's name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">exit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic"># load both the context and the book representations from stdin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    context</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> book </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">load</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">stdin</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> section </span><span class="token keyword" style="color:#66d9ef">in</span><span class="token plain"> book</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token string" style="color:#a6e22e">"sections"</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        process_section</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">section</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">print</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">dumps</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">book</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>すべてのデータがまとめて1つのJSONデータになって渡されます．
mdBookではチャプター情報を<code>SUMMARY.md</code>で記述しますが、そのチャプターごとに <code>book["sections"]</code> に格納されているようです．
たとえば、<code>SUMMARY.md</code>が次のような内容だった場合：</p>
<div class="language-markdown codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-markdown codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token title important punctuation" style="color:#f8f8f2">#</span><span class="token title important"> Summary</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token list punctuation" style="color:#f8f8f2">-</span><span class="token plain"> </span><span class="token url" style="color:#a6e22e">[</span><span class="token url content" style="color:#a6e22e">Chapter 1</span><span class="token url" style="color:#a6e22e">](</span><span class="token url" style="color:#a6e22e">./chapter_1.md</span><span class="token url" style="color:#a6e22e">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token list punctuation" style="color:#f8f8f2">-</span><span class="token plain"> </span><span class="token url" style="color:#a6e22e">[</span><span class="token url content" style="color:#a6e22e">Chapter 2</span><span class="token url" style="color:#a6e22e">](</span><span class="token url" style="color:#a6e22e">./chapter_2.md</span><span class="token url" style="color:#a6e22e">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>渡されるJSONデータは次のようなデータが渡されていました：</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token property" style="color:#f92672">"sections"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token property" style="color:#f92672">"Chapter"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"name"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Chapter 1"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"content"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"---\\ntitle: Chapter 1\\ndescription: Description Here.\\ntags: []\\n---\\n\\n## Chapter 1\\n"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"number"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          </span><span class="token number" style="color:#ae81ff">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"sub_items"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"path"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"chapter_1.md"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"source_path"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"chapter_1.md"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"parent_names"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token property" style="color:#f92672">"Chapter"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"name"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Chapter 2"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"content"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"# chapter_2\\n"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"number"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          </span><span class="token number" style="color:#ae81ff">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"sub_items"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"path"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"chapter_2.md"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"source_path"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"chapter_2.md"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token property" style="color:#f92672">"parent_names"</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>セクションから<code>Chapter</code>キーのデータを参照できます．Chapterデータの<code>content</code>がMarkdownファイルの中身のようですので、それを<code>process</code>関数に渡して処理し、処理した後のデータを返しています．</p>
<p><code>process</code>関数の中では正規表現を使ってFront Matterを抽出しています．また、Front Matterの中に<code>Title</code>があれば、取り出して見出し（<code>H1</code>）として出力しています．
やっていることはとても単純なものです．</p>
<p>あとは、mdBookにプロセッサを設定します．作成した <code>mdbook-frontmatter.py</code> を適当な場所において、<code>mdbook.toml</code>ファイルに次のように記述を追加します．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">mdbook.toml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">preprocessor.frontmatter</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">command</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"py mdbook-frontmatter.py"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Windowsを使っているので<code>py</code>としています．これは<code>python</code>などに書き換えてください．また、Pythonプログラムも必要であれば絶対パスで指定します．
これで、<code>build</code>や<code>serve</code>をすれば自動でプリプロセッサが動作します．</p>
<p>以上です．</p>]]></content:encoded>
            <category>mdBook</category>
            <category>python</category>
        </item>
        <item>
            <title><![CDATA[ForEach-Objectにおけるcontinueとbreakについて]]></title>
            <link>https://mebiusbox.github.io/blog/2024/10/11/foreach-object-continue-break</link>
            <guid>https://mebiusbox.github.io/blog/2024/10/11/foreach-object-continue-break</guid>
            <pubDate>Fri, 11 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[誤解を招きやすいForEach-Objectでのcontinueとbreakについて]]></description>
            <content:encoded><![CDATA[<p>ForEach-Object内での<code>continue</code>や<code>break</code>に関する備忘録です．</p>
<p>PowerShellでパイプライン処理のfor文として <code>ForEach-Object</code> をよく使います．これは <code>foreach</code> や <code>%</code> のエイリアスがあります．
この <code>foreach</code> エイリアスと <code>foreach(in)</code> は別物です．本文では <code>foreach(in)</code> は次のような構文を指しているとします．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">foreach</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$i</span><span class="token plain"> in </span><span class="token variable" style="color:#f8f8f2">$arr</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>ForEach-Object</code> は便利な反面、誤解を招きやすいものだと思います．
実際、AIチャットも見当違いな回答をしていましたし、ネットでも間違った内容が見受けられました．
かくいう私も絶対の確信をもっていっているわけではないので、ご了承ください．動作環境はPowerShell<code>7.4.5</code>です．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="foreach-object-に-continue-や-break-は使えない">ForEach-Object に continue や break は使えない<a href="https://mebiusbox.github.io/blog/2024/10/11/foreach-object-continue-break#foreach-object-%E3%81%AB-continue-%E3%82%84-break-%E3%81%AF%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84" class="hash-link" aria-label="ForEach-Object に continue や break は使えない への直接リンク" title="ForEach-Object に continue や break は使えない への直接リンク">​</a></h2>
<p>これがすべてです．使えるのは <code>return</code> です．<code>ForEach-Object</code>はパイプライン処理であって、<code>continue</code>や<code>break</code>はパイプラインに直接作用しません．
<code>continue</code>や<code>break</code>が作用するのは内側のループ処理に対してです．ちなみに、ループがなければプログラム全体に作用しますので、その場合はプログラムが終了します．</p>
<p>たとえば次のプログラムでは、<code>continue</code> が実行されたときにプログラムが終了します．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">test.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5 </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-gt</span><span class="token plain"> 3</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">continue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"CHECKPOINT"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>この出力は次のようになります．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">1</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">2</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>CHECKPOINT</code>は出力されません．これは <code>break</code> でも同じです．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5 </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-gt</span><span class="token plain"> 3</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"CHECKPOINT"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>この場合、次のように<code>return</code>を使うと意図した動作になります．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5 </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-gt</span><span class="token plain"> 3</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"CHECKPOINT"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>この出力は次のようになります．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">1</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">2</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">3</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">CHECKPOINT</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>このコードではすべてのパイプラインが実行されていることに注意してください．5回処理されています．
<code>break</code>のように中断されるわけではありません．
<code>continue</code>や<code>break</code>を使いたい場合は、ループ回数が分かっているなら <code>foreach(in)</code> を使うか <code>for</code>文を使いましょう．</p>
<p>では、パイプライン処理で中断させたいときはどうすればいいでしょうか．1つの方法としてパイプラインの外にループを入れて<code>break</code>することです．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">do</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    1</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">5 </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-gt</span><span class="token plain"> 3</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">            </span><span class="token keyword" style="color:#66d9ef">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token boolean" style="color:#ae81ff">$false</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"CHECKPOINT"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>この出力は次のようになります．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">1</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">2</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">3</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">CHECKPOINT</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>continue</code>や<code>break</code>は<code>ForEach-Object</code>に対して使いたくなるし、<code>foreach</code>というエイリアスもあって間違えやすいですよね．
以上です．</p>]]></content:encoded>
            <category>powershell</category>
        </item>
        <item>
            <title><![CDATA[WindowsでTensorflow(GPU)を使う]]></title>
            <link>https://mebiusbox.github.io/blog/2024/09/20/tensorflow-gpu-for-windows</link>
            <guid>https://mebiusbox.github.io/blog/2024/09/20/tensorflow-gpu-for-windows</guid>
            <pubDate>Fri, 20 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[WindowsでWSLとDocker Desktopを使ってTensorflowがGPUを使うようにする方法]]></description>
            <content:encoded><![CDATA[<p>WindowsでTensorflowがGPUを使えるようにするための方法をここに記録しておきます．
また、それに関係するWSLやDocker Desktopについてもまとめておきます．</p>
<p>試した環境はWindowsでpythonの仮想環境を構築して、Visual Studio CodeのJupyter拡張機能を使っています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tensorflow-intel">tensorflow-intel<a href="https://mebiusbox.github.io/blog/2024/09/20/tensorflow-gpu-for-windows#tensorflow-intel" class="hash-link" aria-label="tensorflow-intel への直接リンク" title="tensorflow-intel への直接リンク">​</a></h2>
<p>Tensorflowを使う機会があったので、普通に Tensorflow を <code>uv add tensorflow</code> でインストールしてみました．
とりあえず、インストールはできたみたいなのですが、Jupyter Notebook からインポートしてもモジュールが見つかりませんとエラーになります．
まずは<code>uv pip list</code>を実行してインストールされていることを確認しました．
あとはネットで検索したりして同様な症状が発生しているときの対処方法を試してみても変わらず．
そこで、<code>uv pip show tensorflow</code> としたところ次のように表示されました．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">Name: tensorflow</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Version: 2</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">17</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">0</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Location: F:\src\jupyter\</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">venv\Lib\site-packages</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Requires: tensorflow-intel</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Required-by:</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>どうやら<code>tensorflow-intel</code>が必要みたいです．確認してみるとインストールされていませんでした．
uvでは依存解決できなかったらしく、直接指定してインストールすることで Jupyter Notebookからでもモジュールが見つかるようになりました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tensorflow-gpu対応">tensorflow (GPU対応)<a href="https://mebiusbox.github.io/blog/2024/09/20/tensorflow-gpu-for-windows#tensorflow-gpu%E5%AF%BE%E5%BF%9C" class="hash-link" aria-label="tensorflow (GPU対応) への直接リンク" title="tensorflow (GPU対応) への直接リンク">​</a></h2>
<p><code>tensorflow-intel</code>が必要だったので、GPUの対応はどうなっているのか気になりました．
そこで調べてみると、最近のWindows用 tensorflow はGPUに対応していないみたいです．
どうやらWSL2を使えばいいらしいので、試してみることにしました．また、Dockerイメージも用意されているみたいなので、それも使うことにします．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="wsl2--docker-desktop">WSL2 + Docker Desktop<a href="https://mebiusbox.github.io/blog/2024/09/20/tensorflow-gpu-for-windows#wsl2--docker-desktop" class="hash-link" aria-label="WSL2 + Docker Desktop への直接リンク" title="WSL2 + Docker Desktop への直接リンク">​</a></h2>
<p>WSLは環境構築済みで、Ubuntu (<code>22.04.5 LTS</code>) を使っています．
Docker Desktopは最新のものをインストールしています．</p>
<p>あまり両者とも使っていなかったので、整理することにしました．
Ubuntuは再インストールして最低限の設定をしておきました．
問題は Docker Desktop です．イメージが肥大化していくので大容量HDDに移動しておこうと思います．</p>
<p>色々調べてみると情報が結構古かったので調べたり試したりして得られたことをここに書いておきます．
もしかすると設定が必要なのかもしれませんが、そこはご了承ください．</p>
<p>まず、Docker Desktop は WSL2 をバックエンドとして実行されます．
Docker DesktopをWSL2にインテグレーションすると <code>docker-desktop</code> というディストリビューションが作られます．
これは <code>docker-desktop</code> と <code>docker-desktop-data</code> の2つが作成されるとネットでよく見たのですが、最新は1つだけのようです．
また、データの格納先も変わっていました．</p>
<p>旧バージョン</p>
<table><thead><tr><th style="text-align:left">ディストリビューション</th><th style="text-align:left">場所</th></tr></thead><tbody><tr><td style="text-align:left">docker-desktop</td><td style="text-align:left"><code>%LocalAppData%\Docker\wsl\distro\ext4.vhdx</code></td></tr><tr><td style="text-align:left">docker-desktop-data</td><td style="text-align:left"><code>%LocalAppData%\Docker\wsl\data\ext4.vhdx</code></td></tr></tbody></table>
<p>最新</p>
<table><thead><tr><th style="text-align:left">ディストリビューション</th><th style="text-align:left">場所</th></tr></thead><tbody><tr><td style="text-align:left">docker-desktop</td><td style="text-align:left"><code>%LocalAppData%\Docker\wsl\disk\docker_data.vhdx</code></td></tr></tbody></table>
<p>このファイルがどんどん肥大化していくので、別のドライブにしたいのです．
まず、Docker Desktop自体に設定で場所を変更できる機能がありますが、試したところ失敗することが多く、まったく安定しません．
次に、エクスポート・インポートする方法がありますが、ちょっと面倒ですし、人によっては上手くいかないこともあるようです．
なので、シンボリックリンクを作成して<code>%LocalAppData%\Docker\wsl</code>ディレクトリを別のドライブにリンクするようにしました．</p>
<p>あと、WSL2にインテグレーションすると、WSL側のディストリビューションで docker コマンドが Docker Desktop を経由するようになります．
この場合、別途 Docker をインストールする必要がありません．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tensorflow-gpu">tensorflow-gpu<a href="https://mebiusbox.github.io/blog/2024/09/20/tensorflow-gpu-for-windows#tensorflow-gpu" class="hash-link" aria-label="tensorflow-gpu への直接リンク" title="tensorflow-gpu への直接リンク">​</a></h2>
<p>これで WSL2(Ubuntu) で Docker を使う環境が整ったので、あとはイメージをpullして実行するだけです．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">docker pull tensorflow/tensorflow:latest-gpu</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">docker run </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">gpus all </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">it </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">name tfgpu tensorflow/tensorflow:latest-gpu</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>必要に応じてマウントを追加してください．
あとは、Visual Studio Codeの Dev Containerを使ってアタッチします．
実行するカーネルを選択したり、Jupyter notebookを使うために拡張機能や ipykernel のインストールなどが求められますのでインストールします．
諸々設定が終わったらGPUを認識しているか確認します．</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">IN</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">import</span><span class="token plain"> tensorflow </span><span class="token keyword" style="color:#66d9ef">as</span><span class="token plain"> tf</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">tf</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">config</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">list_physical_devices</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"GPU"</span><span class="token punctuation" style="color:#f8f8f2">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">OUT</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">PhysicalDevice</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">name=</span><span class="token string" style="color:#a6e22e">'/physical_device:GPU:0'</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> device_type=</span><span class="token string" style="color:#a6e22e">'GPU'</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="��コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ちゃんと認識しているみたいです．</p>
<p>ちなみに、Jupyter notebookのサーバーを立ち上げたい場合は <code>tensorflow/tensorflow:latest-gpu-jupyter</code> を使います．</p>
<p>以上です．</p>]]></content:encoded>
            <category>wsl</category>
            <category>ubuntu</category>
            <category>docker</category>
            <category>tensorflow</category>
            <category>python</category>
            <category>jupyter</category>
        </item>
        <item>
            <title><![CDATA[cargo-makeを少し使いやすくする]]></title>
            <link>https://mebiusbox.github.io/blog/2024/09/15/improve-cargo-make</link>
            <guid>https://mebiusbox.github.io/blog/2024/09/15/improve-cargo-make</guid>
            <pubDate>Sun, 15 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[cargo-makeをより使いやすくするためのPowerShellスクリプト]]></description>
            <content:encoded><![CDATA[<p>タスクランナーとしてcargo-makeを使用しています．
ここでは、より使いやすくするためのPowerShellスクリプトを作成したのでここに残しておきます．</p>
<p><a href="https://github.com/sagiegurari/cargo-make" target="_blank" rel="noopener noreferrer">cargo-make</a>はタスクランナーです．
汎用的に使えるタスクランナーを探していて、他にも <a href="https://github.com/casey/just" target="_blank" rel="noopener noreferrer">Just</a> がありました．
cargo-makeは基本的にRust言語の開発用ツールですが、Rust言語以外でも汎用的に使うことができます．
また、Makefile形式よりかはTOML形式の記述に統一していきたいとも思っていて、cargo-makeを利用しています．
ちなみに、機能的にはどちらでも問題なさそうな感じでした．</p>
<p>cargo-makeを日常的に使っていて、ちょっとこういう機能が欲しいなとかここを改善してほしいなと思うところがありました．
そこで、PowerShellでWrapper関数（コマンドレット）を作成してみました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="タスク一覧">タスク一覧<a href="https://mebiusbox.github.io/blog/2024/09/15/improve-cargo-make#%E3%82%BF%E3%82%B9%E3%82%AF%E4%B8%80%E8%A6%A7" class="hash-link" aria-label="タスク一覧 への直接リンク" title="タスク一覧 への直接リンク">​</a></h2>
<p>まずは、タスクの一覧表示の改善です．cargo-makeは<code>--list-all-steps</code>オプションを指定することでタスクの一覧を表示できます．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; cargo make </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list-all-steps</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[cargo-make]</span><span class="token plain"> INFO </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> cargo make 0</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">37</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">16</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[cargo-make]</span><span class="token plain"> INFO </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Build File: Makefile</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">toml</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[cargo-make]</span><span class="token plain"> INFO </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Task: default</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[cargo-make]</span><span class="token plain"> INFO </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Profile: development</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Hooks</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">end</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> By default this task is invoked at the </span><span class="token keyword" style="color:#66d9ef">end</span><span class="token plain"> of every cargo-make run</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">init </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> By default this task is invoked at the </span><span class="token function" style="color:#e6db74">start</span><span class="token plain"> of every cargo-make run</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">No Category</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">dev </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Run gradio with watch mode </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[aliases: default]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">resize </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Resize image</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">serve </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Serve app</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">Tools</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">empty </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Empty Task</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>正直なところ見やすいとは言いづらいですね．
これは数が少ないからいいですが、多くなってくるとわかりづらくなります．
カテゴリを指定するオプションもありますが、まずはどんなカテゴリがあるかの確認もしたいです．</p>
<p>これを整形して見やすくしましょう．
具体的には出力内容から必要な文字を読み取って、カスタムオブジェクトに変換して表示します．
こうすることで PowerShell上で色々操作ができるようになります．
ここではさらに<a href="https://github.com/wfxr/csview" target="_blank" rel="noopener noreferrer">csview</a>を使って見やすく表示します．
そのためにカスタムオブジェクトからCSV形式に変換(<code>ConvertTo-Csv</code>)を使います．</p>
<p>これを使うと（コードは後述）さきほどのタスク一覧が次のように表示されます:</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; psmake </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">List</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">┌────────┬───────────────────────────────────────────────┬─────────────┐</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">│  Name  │                  Description                  │  Category   │</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">├────────┼───────────────────────────────────────────────┼─────────────┤</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">│ dev    │ Run gradio with watch mode </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[aliases: default]</span><span class="token plain"> │ No Category │</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">│ resize │ Resize image                                  │ No Category │</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">│ serve  │ Serve app                                     │ No Category │</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">│ empty  │ Empty Task                                    │ Tools       │</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">└────────┴───────────────────────────────────────────────┴─────────────┘</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="タスク選択">タスク選択<a href="https://mebiusbox.github.io/blog/2024/09/15/improve-cargo-make#%E3%82%BF%E3%82%B9%E3%82%AF%E9%81%B8%E6%8A%9E" class="hash-link" aria-label="タスク選択 への直接リンク" title="タスク選択 への直接リンク">​</a></h2>
<p>タスク一覧を表示する以外にも、インタラクティブなタスク選択機能も追加しました．
fzfを使ってタスクを選択します．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; psmake </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Sel</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">&gt;</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"> 6/6 </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">0</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">&gt; </span><span class="token keyword" style="color:#66d9ef">end</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> By default this task is invoked at the </span><span class="token keyword" style="color:#66d9ef">end</span><span class="token plain"> of every cargo-make run</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  init </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> By default this task is invoked at the </span><span class="token function" style="color:#e6db74">start</span><span class="token plain"> of every cargo-make run</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  dev </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Run gradio with watch mode </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[aliases: default]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  resize </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Resize image</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  serve </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Serve app</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  empty </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> Empty Task</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="複数のmakefile">複数のmakefile<a href="https://mebiusbox.github.io/blog/2024/09/15/improve-cargo-make#%E8%A4%87%E6%95%B0%E3%81%AEmakefile" class="hash-link" aria-label="複数のmakefile への直接リンク" title="複数のmakefile への直接リンク">​</a></h2>
<p>あまり使うことはありませんが、<code>makefile.toml</code>とは別にローカル用のmakefileが欲しいことがありました．
そのため、fzfを使って手軽に切り替えられる機能を追加しました．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="コマンド実行">コマンド実行<a href="https://mebiusbox.github.io/blog/2024/09/15/improve-cargo-make#%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E5%AE%9F%E8%A1%8C" class="hash-link" aria-label="コマンド実行 への直接リンク" title="コマンド実行 への直接リンク">​</a></h2>
<p>Windows環境なのでなるべくPowerShellで実行させたいですが、標準だと通常のコマンドプロンプトで実行されます．
プラグインだったり、スクリプトランナーにPowerShellを指定することで実行できます．
しかし、一時ファイルが生成されたり新しくプロセスが生成されるのでプロファイルの読み込みに時間がかかったりします．
<code>-nop</code>オプションを指定して、標準のプロファイル読み込みをさせないこともできますが、せっかく自作した便利な関数やコマンドレットを利用できないのはもったいないです．
そこで、設定ファイル（標準で<code>makefile.toml</code>）を読み込んで、開いているPowerShellプロンプトで実行する機能も追加しました．
ただし、機能は限定的でコマンドのみ、変数展開も<code>${@}</code>のみ対応しています（コマンド以外の場合、cargo-makeを実行するようにしています）．</p>
<p>これを実装するために、TOML形式からJSON形式に変換するのですが、これは<a href="https://github.com/TomWright/dasel" target="_blank" rel="noopener noreferrer">dasel</a>を使用しました．
私は json や yaml などの解析は <a href="https://github.com/mikefarah/yq" target="_blank" rel="noopener noreferrer">yq</a> を使っています．
yqは一応TOML形式も対応しているらしいのですが、基本的にまともに読み込めたことはないです．なのでTOML形式はdaselからJSON形式に変換して解析しています．
また、daselもデータ操作機能がありますが、jq/yq と互換はなく、ちょっと使いづらいです．</p>
<p>標準でdefaultタスクを参照します．また、defaultタスクの場合、aliasも参照するようにしています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="psmake">psmake<a href="https://mebiusbox.github.io/blog/2024/09/15/improve-cargo-make#psmake" class="hash-link" aria-label="psmake への直接リンク" title="psmake への直接リンク">​</a></h2>
<p>これらをまとめて <code>psmake</code> という関数にまとめました．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockTitle_Ktv7">psmake.psm1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> psmake</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[CmdletBinding()]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">param</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[string]</span><span class="token variable" style="color:#f8f8f2">$Name</span><span class="token plain"> = </span><span class="token string" style="color:#a6e22e">"default"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[string]</span><span class="token variable" style="color:#f8f8f2">$File</span><span class="token plain"> = </span><span class="token string" style="color:#a6e22e">"makefile.toml"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[switch]</span><span class="token variable" style="color:#f8f8f2">$List</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[switch]</span><span class="token variable" style="color:#f8f8f2">$Sel</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[string[]]</span><span class="token variable" style="color:#f8f8f2">$Arguments</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$File</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">-not</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">Test-Path</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">PathType Leaf</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token function" style="color:#e6db74">Write-Error</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Not found file [${File}]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">Get-ChildItem</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"*.toml"</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Where-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Name </span><span class="token operator" style="color:#66d9ef">-like</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"*makefile*.toml"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Name</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> fzf</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">-not</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$List</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$prevLine</span><span class="token plain"> = </span><span class="token string" style="color:#a6e22e">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$category</span><span class="token plain"> = </span><span class="token string" style="color:#a6e22e">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    cargo make </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">makefile </span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list-all-steps </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-match</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"^(?&lt;name&gt;\w+?)\s-\s(?&lt;desc&gt;.*)$"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[PSCustomObject]</span><span class="token plain">@</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          Name = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">name</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          Description = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">desc</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          Category = </span><span class="token variable" style="color:#f8f8f2">$category</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">elseif</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-match</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"^-+$"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$category</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$prevLine</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$prevLine</span><span class="token plain"> = </span><span class="token string" style="color:#a6e22e">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$category</span><span class="token plain"> = </span><span class="token string" style="color:#a6e22e">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token variable" style="color:#f8f8f2">$prevLine</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Where-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Category </span><span class="token operator" style="color:#66d9ef">-ne</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Hooks"</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ConvertTo-Csv</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> csview</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">elseif</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$Sel</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$tasks</span><span class="token plain"> = cargo make </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">makefile </span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list-all-steps </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-match</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"^(?&lt;name&gt;\w+?)\s-\s(?&lt;desc&gt;.*)$"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[PSCustomObject]</span><span class="token plain">@</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          Name = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">name</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          Description = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">desc</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          Category = </span><span class="token variable" style="color:#f8f8f2">$category</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          FullName = </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Where-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Category </span><span class="token operator" style="color:#66d9ef">-ne</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Hooks"</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$tasks</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">FullName</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> fzf </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">foreach</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token plain"> in </span><span class="token variable" style="color:#f8f8f2">$tasks</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-eq</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">FullName</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Command: </span><span class="token string function" style="color:#e6db74">$</span><span class="token string function punctuation" style="color:#f8f8f2">(</span><span class="token string function variable" style="color:#f8f8f2">$task</span><span class="token string function punctuation" style="color:#f8f8f2">.</span><span class="token string function" style="color:#e6db74">Name</span><span class="token string function punctuation" style="color:#f8f8f2">)</span><span class="token string" style="color:#a6e22e"> ${Arguments}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          cargo make </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">makefile </span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Name @Arguments</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$json</span><span class="token plain"> = dasel </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">f </span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">r toml </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">w json </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ConvertFrom-Json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$tasks</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">tasks </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Get-Member</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">MemberType Properties </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Select-Object</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">ExpandProperty Name </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$json</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">tasks</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[PSCustomObject]</span><span class="token plain">@</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        Name = </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        Category = </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">category</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        Command = </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">command</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        Args = </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">args</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        Description = </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">description</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        Alias = </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">alias</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$tasks</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Where-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Name </span><span class="token operator" style="color:#66d9ef">-eq</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$Name</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Alias</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$tasks</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Where-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Name </span><span class="token operator" style="color:#66d9ef">-eq</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Alias </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token variable" style="color:#f8f8f2">$newArguments</span><span class="token plain"> = </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Args </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ForEach-Object</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-eq</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"`${@}"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          </span><span class="token variable" style="color:#f8f8f2">$Arguments</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">          </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Command </span><span class="token operator" style="color:#66d9ef">-and</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$task</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Command </span><span class="token operator" style="color:#66d9ef">-ne</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">""</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Command: </span><span class="token string function" style="color:#e6db74">$</span><span class="token string function punctuation" style="color:#f8f8f2">(</span><span class="token string function variable" style="color:#f8f8f2">$task</span><span class="token string function punctuation" style="color:#f8f8f2">.</span><span class="token string function" style="color:#e6db74">Command</span><span class="token string function punctuation" style="color:#f8f8f2">)</span><span class="token string" style="color:#a6e22e"> ${newArguments}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        &amp; </span><span class="token string" style="color:#a6e22e">"</span><span class="token string function" style="color:#e6db74">$</span><span class="token string function punctuation" style="color:#f8f8f2">(</span><span class="token string function variable" style="color:#f8f8f2">$task</span><span class="token string function punctuation" style="color:#f8f8f2">.</span><span class="token string function" style="color:#e6db74">Command</span><span class="token string function punctuation" style="color:#f8f8f2">)</span><span class="token string" style="color:#a6e22e">"</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$newArguments</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        cargo make </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">makefile </span><span class="token variable" style="color:#f8f8f2">$file</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$Name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token function" style="color:#e6db74">Write-Error</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Not found Task [${Name}]"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>syntaxは次のようになっています：</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">NAME</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    psmake</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">SYNTAX</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    psmake </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Name</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> &lt;string&gt;</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">File</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> &lt;string&gt;</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Arguments</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> &lt;string</span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain">&gt;</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">List</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Sel</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">&lt;CommonParameters&gt;</span><span class="token punctuation" style="color:#f8f8f2">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="まとめ">まとめ<a href="https://mebiusbox.github.io/blog/2024/09/15/improve-cargo-make#%E3%81%BE%E3%81%A8%E3%82%81" class="hash-link" aria-label="まとめ への直接リンク" title="まとめ への直接リンク">​</a></h2>
<p>とくに欲しかったのはタスク一覧とタスク選択機能です．
これで makefile.toml にどんどんタスクを追加していってもよさそうです．</p>
<p>以上です．</p>]]></content:encoded>
            <category>make</category>
            <category>cargo</category>
            <category>powershell</category>
        </item>
        <item>
            <title><![CDATA[ghqでプロジェクト管理（整理）する]]></title>
            <link>https://mebiusbox.github.io/blog/2024/09/13/ghq</link>
            <guid>https://mebiusbox.github.io/blog/2024/09/13/ghq</guid>
            <pubDate>Fri, 13 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[ghqを使って一貫のあるフォルダ構成で管理する方法について]]></description>
            <content:encoded><![CDATA[<p>ある程度、自分なりにクローン先を指定して管理していたのですが、数が多くなって管理が難しくなってきたので、ghq を使ってみました．
ここでは、その備忘録を残しておきます．</p>
<p><a href="https://github.com/x-motemen/ghq" target="_blank" rel="noopener noreferrer">ghq</a> はリポジトリをクローンするときに、ルールにもとづいて自動的にフォルダを生成して、そこにクローンしてくれるツールです．一貫した構成になるので、管理しやすくなりますし、ghqコマンドを使ってリストを取得することもできます．fzfと組み合わせることで、プロジェクトの行き来が楽になります．</p>
<p>すでにある程度、自分なりにクローン先を分別してやっていたのですが、いざ不要なものを削除するときにわかりづらいものとなっていました．
たとえば、GitHubで管理しているものとローカルに作成したベアリポジトリ（バックアップ用）の区別がつきませんでした．
そこで、ghqを導入して整理することにしました．100個以上のクローンしたプロジェクトがあったので、なるべく一括でできるようにPowerShellでスクリプトを作成しました．
前述したように GitHubで管理しているものとローカルに作成したものがあったのですが、ghqではローカルに作成したもの（<code>ssh</code>や<code>https</code>以外）は上手くいかなかったので、そこはいい感じの構成にしておきました（<code>repo</code>ディレクトリの中に <code>xxx.git</code>ディレクトリが置いてあるので、<code>&lt;ghq.root&gt;/repo/&lt;project&gt;</code> という名前にしました）．
あとは、すでにあるプロジェクトを移行します．<code>migrate2ghq</code>という関数を作成してghqのフォルダ構成になるように移動するものです．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">function</span><span class="token plain"> migrate2ghq</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">param</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[Parameter(Mandatory)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[string]</span><span class="token variable" style="color:#f8f8f2">$InputPath</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token namespace" style="color:rgb(178, 204, 214);opacity:0.7">[switch]</span><span class="token variable" style="color:#f8f8f2">$DryRun</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">Push-Location</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">Set-Location</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$InputPath</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Location: </span><span class="token string function" style="color:#e6db74">$</span><span class="token string function punctuation" style="color:#f8f8f2">(</span><span class="token string function" style="color:#e6db74">Get-Location</span><span class="token string function punctuation" style="color:#f8f8f2">)</span><span class="token string" style="color:#a6e22e">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$url</span><span class="token plain"> = git remote </span><span class="token function" style="color:#e6db74">get-url</span><span class="token plain"> origin</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Origin  : ${url}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">Pop-Location</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$root</span><span class="token plain"> = git config </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">global ghq</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">root</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"ghq.root: ${root}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$repo</span><span class="token plain"> = @</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$url</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-match</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"^git@(?&lt;host&gt;.*?):(?&lt;user&gt;.*?)/(?&lt;project&gt;.*?)\.git$"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$repo</span><span class="token plain"> = @</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      Host = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">host</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      User = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">user</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      project = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">project</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">elseif</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$url</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-match</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"^https://(?&lt;host&gt;.*?)/(?&lt;user&gt;.*?)/(?&lt;project&gt;.*?)\.git$"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$repo</span><span class="token plain"> = @</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      Host = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">host</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      User = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">user</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      project = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">project</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">elseif</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$url</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-match</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"^(?&lt;drive&gt;\w+?):[/\\].*?(?&lt;host&gt;.*)[/\\](?&lt;project&gt;.+)\.git$"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token variable" style="color:#f8f8f2">$repo</span><span class="token plain"> = @</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      Host = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">host</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      User = </span><span class="token string" style="color:#a6e22e">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      project = </span><span class="token variable" style="color:#f8f8f2">$Matches</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">project</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">Write-Error</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Not found repository information. Couldn't migration."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic"># &lt;ghq.root&gt;/&lt;host&gt;/&lt;user&gt;/&lt;project&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$outputPath</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">Join-Path</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$root</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$repo</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">host </span><span class="token variable" style="color:#f8f8f2">$repo</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">user </span><span class="token variable" style="color:#f8f8f2">$repo</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">project</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token variable" style="color:#f8f8f2">$outputParentPath</span><span class="token plain"> = </span><span class="token function" style="color:#e6db74">Join-Path</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$root</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$repo</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">host </span><span class="token variable" style="color:#f8f8f2">$repo</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">user</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">-not</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">Test-Path</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$outputParentPath</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token function" style="color:#e6db74">Type</span><span class="token plain"> Container</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$DryRun</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"MKDIR(DryRun): ${outputParentPath}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token function" style="color:#e6db74">New-Item</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Path </span><span class="token variable" style="color:#f8f8f2">$outputParentPath</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">ItemType Directory</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">Test-Path</span><span class="token plain"> </span><span class="token variable" style="color:#f8f8f2">$outputPath</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token function" style="color:#e6db74">Type</span><span class="token plain"> Container</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token function" style="color:#e6db74">Write-Error</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"[${outputPath}] is Already exists."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token variable" style="color:#f8f8f2">$DryRun</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Move(DryRun): ${InputPath} -&gt; ${outputPath}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">Move-Item</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">LiteralPath </span><span class="token variable" style="color:#f8f8f2">$InputPath</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Destination </span><span class="token variable" style="color:#f8f8f2">$outputPath</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token function" style="color:#e6db74">Write-Host</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Move: ${InputPath} -&gt; ${outputPath}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>使い方は次のようになっています：</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; migrate2ghq hoge </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">DryRun</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; migrate2ghq hoge</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>リポジトリはリモートの <code>origin</code> に紐づいているURLを参照します．
また、ghqのルートパスはgitのグローバルに設定されていることを想定しています．
現在のディレクトリに一括で行う場合は次のように使います：</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; </span><span class="token function" style="color:#e6db74">Get-ChildItem</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Attributes Directory </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> migrate2ghq </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">DryRun </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; </span><span class="token function" style="color:#e6db74">Get-ChildItem</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain">Attributes Directory </span><span class="token punctuation" style="color:#f8f8f2">|</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> migrate2ghq </span><span class="token variable" style="color:#f8f8f2">$_</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>これであまり手間をかけずに移行できました．
ただ、完全に ghq で管理できるようになったわけではなく、いくつかのプロジェクトはその構成上 ghq に合わないため、除外しています．
また、クローン先は他にも2種類あって、高速なSSDと通常のHDDに分けており、その場合はどちらかが ghq 管理外としています．
実際には、ghqを使って取得したリストと別のフォルダで管理しているリストを切り替えて検索できる関数を作成して使用しています．
この場合は ghq を使わずとも今回作成した migrate2ghq を調整して、まず適当な場所にクローンしてから migrate2ghq で移動するのもありかなと思います．
残念ながらすべてを ghq 管理下に置くことはできませんが、全然マシかなと思っています．</p>
<p>以上です．</p>]]></content:encoded>
            <category>git</category>
            <category>ghq</category>
            <category>powershell</category>
        </item>
        <item>
            <title><![CDATA[PowerShellプロファイルの肥大化]]></title>
            <link>https://mebiusbox.github.io/blog/2024/09/13/powershell-profile</link>
            <guid>https://mebiusbox.github.io/blog/2024/09/13/powershell-profile</guid>
            <pubDate>Fri, 13 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[PowerShellプロファイルの肥大化に伴う問題]]></description>
            <content:encoded><![CDATA[<p>PowerShellが便利なので、さまざまな関数やコマンドレットをプロファイルに追加していったら、肥大化して少し問題になりました．
ここでは、それに関する備忘録を残しておきます．</p>
<p>PowerShellでも色んなことができるので、ちょっとしたことは可能ならPowerShellで処理するようにしています．
そういったものはスクリプトとして作成せずに、関数やコマンドレットとして作成していました．
ところが、PowerShellプロンプトを開くたびにコマンドが打てるまでの時間が長くなってしまいました．
プロファイルの読み込み時間が表示されるので確認してみると10秒以上かかっています．
さすがに長く感じてきたので、対処することにしました．</p>
<p>具体的には、もともといくつかのモジュールに分けていて、プロファイルですべてをインポートしていたのですが、それをやめて必要最小限にとどめました．
そして、必要であればモジュールをインポートする形に変更しました．結果、プロファイルの読み込みが2秒ぐらいになり、快適になりました．
その反面、必要になるたびにモジュールを手動でインポートする手間が発生するようになりました．
もちろん、インポートを手軽にできるように工夫してこの手間も最小限にしています．</p>
<p>機能ごとにスクリプトを1つ作成して呼び出すのは、結局管理が大変になりそうなので、今はこのやり方で落ち着いています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2025-03-28-追記">2025-03-28 追記<a href="https://mebiusbox.github.io/blog/2024/09/13/powershell-profile#2025-03-28-%E8%BF%BD%E8%A8%98" class="hash-link" aria-label="2025-03-28 追記 への直接リンク" title="2025-03-28 追記 への直接リンク">​</a></h2>
<p>いくつかのモジュールを分けることで大分速くなったのですが、それでも遅い部分がありました．以下、2つの点で改善できたので書いておきます．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="oh-my-posh-が遅い">Oh My Posh が遅い<a href="https://mebiusbox.github.io/blog/2024/09/13/powershell-profile#oh-my-posh-%E3%81%8C%E9%81%85%E3%81%84" class="hash-link" aria-label="Oh My Posh が遅い への直接リンク" title="Oh My Posh が遅い への直接リンク">​</a></h3>
<p>初期化に1秒以上かかっていました．ターミナル上でいろいろ確認できるので便利なのですが、どのターミナルでも必要というわけではなかったので、標準で実行しないようにしました．かわりに、<code>init</code>コマンドレットを作って、その中で実行するようにしました．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="スクリプトモジュール化">スクリプトモジュール化<a href="https://mebiusbox.github.io/blog/2024/09/13/powershell-profile#%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E5%8C%96" class="hash-link" aria-label="スクリプトモジュール化 への直接リンク" title="スクリプトモジュール化 への直接リンク">​</a></h3>
<p>モジュールを分けていたのですが、<code>Import-Module</code> で指定する形になっていました．これらのモジュールをスクリプトモジュール準拠にして、<code>$PSModulePath</code> の場所に登録することで、そもそも <code>Import-Module</code> を呼ぶ必要がなくなりました．PowerShellは <code>$PSModulePath</code> パスから自動でコマンドレットを検索してくれます．私の場合、<code>$PSModulePath</code> にパスを追加して管理しています．</p>
<p>以上です．</p>]]></content:encoded>
            <category>powershell</category>
        </item>
        <item>
            <title><![CDATA[Visual Studio Codeで Ruff を使ったときの問題]]></title>
            <link>https://mebiusbox.github.io/blog/2024/09/07/vscode-ruff</link>
            <guid>https://mebiusbox.github.io/blog/2024/09/07/vscode-ruff</guid>
            <pubDate>Sat, 07 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Visual Studio Codeで Ruff を使ったときに問題が発生したのでその対処方法について]]></description>
            <content:encoded><![CDATA[<p>Visual Studio CodeでRuffを使うときに1つ問題があったので対処方法を記録しておきます．</p>
<p><a href="https://docs.astral.sh/ruff/" target="_blank" rel="noopener noreferrer">Ruff</a> はリンターおよびフォーマッタです．高速なのが特徴です．
Visual Studio Codeで使う場合、<a href="https://marketplace.visualstudio.com/items?itemName=charliermarsh.ruff" target="_blank" rel="noopener noreferrer">拡張機能</a>をインストールします．</p>
<p>使用していると、整形時に最終行が複製されてしまう問題が発生しました．
どうやら、他の拡張機能と合わせて使っていると起きるようです．
issue(<a href="https://github.com/astral-sh/ruff-vscode/issues/128" target="_blank" rel="noopener noreferrer">#128</a>)として報告はされているようです．
対処方法は確認したところ、2つあるようです．</p>
<ul>
<li>他のリンターやフォーマッタなどの拡張機能を無効にする</li>
<li><code>ruff.organizeImports</code> を無効にする</li>
</ul>
<p>前者の場合、<a href="https://marketplace.visualstudio.com/items?itemName=ms-python.isort" target="_blank" rel="noopener noreferrer">ms-python.isort</a> を無効にします．
もしかするとそれ以外も無効にする必要があるかもしれません．</p>
<p>厄介な問題なので、対応はしておきましょう．</p>
<p>以上です．</p>]]></content:encoded>
            <category>vscode</category>
            <category>python</category>
            <category>ruff</category>
        </item>
        <item>
            <title><![CDATA[Visual Studio Codeの新規ファイル作成を支援する拡張機能]]></title>
            <link>https://mebiusbox.github.io/blog/2024/09/05/vscode-simple-new-file</link>
            <guid>https://mebiusbox.github.io/blog/2024/09/05/vscode-simple-new-file</guid>
            <pubDate>Thu, 05 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Visual Studio Codeの拡張機能「Simple New File」の紹介]]></description>
            <content:encoded><![CDATA[<p>Visual Studio Codeで新規にファイルを作成するときに便利な拡張機能「Simple New File」を紹介します．</p>
<p>Visual Studio Codeで新規にファイルを作成するときに、ファイルエクスプローラから作成するのが基本だと思います．
しかし、現在開いているフォルダに対して作成するのはいいのですが、それ以外の場所、とくにワークスペースのルートフォルダに作成するときにちょっとやりづらいかなと思っています．
そこで、以前は新規にファイルを作成するときに便利な拡張機能「<a href="https://marketplace.visualstudio.com/items?itemName=fayras.simple-new-file" target="_blank" rel="noopener noreferrer">Simple New File</a>」を使っていました．この拡張機能は現在更新されておらず、Visual Studio Codeのバージョンアップによってまともに動作しなくなっていました．</p>
<p>しばらく使わずにいたのですが、あらためて新規ファイル作成まわりを調べてもこの拡張機能が便利だなと感じたので、<a href="https://github.com/mebiusbox/vscode-simple-new-file" target="_blank" rel="noopener noreferrer">フォーク</a>して不具合を修正しました．
この拡張機能はファイル作成時にパスを入力することで、そのファイルを一発で作成できる機能があります．たとえば <code>/aaa/bbb/ccc/ddd.txt</code> と入力すれば、<code>aaa</code> や <code>bbb</code> フォルダを自動で作成してくれます．これを使うと、ワークスペースのルートフォルダに作成する場合、<code>/README.md</code>とすれば、すぐにルートフォルダに作成できます．
また、すでに存在すればそのファイルを開くこともできます．ただ、<code>Ctrl+P</code>でも開くことはできますので使いやすいほうを選べばいいと思います．</p>
<p>しばらく使ってみて問題なさそうならプルリクエストしてもいいかもしれません．</p>
<p>以上です．</p>
<hr>
<p>以下の場所からリリースページのvsixファイルを使ってインストールできます．</p>
<ul>
<li><a href="https://github.com/mebiusbox/vscode-simple-new-file" target="_blank" rel="noopener noreferrer">mebiusbox/vscode-simple-new-file</a></li>
</ul>]]></content:encoded>
            <category>vscode</category>
        </item>
        <item>
            <title><![CDATA[Gpg4winのgpg-agent.confの場所]]></title>
            <link>https://mebiusbox.github.io/blog/2024/09/02/gpg4win-gpgconf</link>
            <guid>https://mebiusbox.github.io/blog/2024/09/02/gpg4win-gpgconf</guid>
            <pubDate>Mon, 02 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Gpg4winのgpg-agent.confを置く正しい場所について]]></description>
            <content:encoded><![CDATA[<p>Gpg4winのgpg-agent.confを置く場所について書いておきます．</p>
<p>Gitで署名付きコミットをするためにGPGキーが必要なので、Gpg4winをインストールしました．
WinGetでインストールできます．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; winget install GnuPG</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Gpg4win</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>現在のバージョンは <code>4.3.1</code> です．
キーを生成して、GitとGitHubに登録．
Gitの設定で常に署名付きコミットをするために以下の設定をしました．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; git config </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">global commit</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">gpgsign true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>また、gpg.exe のパスをgitに設定しておく必要があります．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; git config </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">global gpg</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">program </span><span class="token string" style="color:#a6e22e">"C:\Program Files (x86)\GnuPG\bin\gpg.exe"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>あとは、普通にコミットすればパスフレーズの入力が求められるので、正しく入力できればコミットできます．
署名付きコミットをGitHubにプッシュすれば、<code>Verified</code>がつきます．</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>備考</div><div class="admonitionContent_BuS1"><p>グローバルで署名付きコミットを有効にしない場合、コミット時に <code>-S</code> オプションをつけると署名付きになります．</p></div></div>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>備考</div><div class="admonitionContent_BuS1"><p>署名付きでコミットされているかはGitのlogコマンドで <code>--show-signature</code> オプションを指定すると確認できます．</p></div></div>
<p>で、パスフレーズの入力は gpg-agent がある程度キャッシュしてくれるのですが、その期間は標準だと10分しかありません．
最大で2時間です．現在の設定は <code>gpgconf</code> で確認できます．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; gpgconf </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list-options gpg-agent</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>標準のキャッシュ期間はちょっと短すぎるので、もっと長くしたいです．
そのためには <code>gpg-agent.conf</code> ファイルを生成して、そこに設定を書きます．
このファイルは <code>$env:appdata\gnupg\</code> に置きます．</p>
<p>ちなみに、このファイルの置き場所として <code>~\.gnupg\</code> に置くとネットでは書かれているものが多いのですが、
Gpg4win 4.3.1 では認識されませんでした．確認はしてませんが、Git for Windowsに同梱されている gpg はこちらを参照するようです．</p>
<p>設定ファイルを作成できたら、反映されたか確認します．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; gpgconf </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">reload gpg-agent</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; gpgconf </span><span class="token operator" style="color:#66d9ef">--</span><span class="token plain">list-options gpg-agent</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">default-cache-ttl:24:0:expire cached PINs after N seconds:3:3:N:600::31536000</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">max-cache-ttl:24:2:</span><span class="token function" style="color:#e6db74">set</span><span class="token plain"> maximum PIN cache lifetime to N seconds:3:3:N:7200::31536000</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以下のコマンドでも設定ファイルをリロードできるようですが、ちゃんと反映されているかどうかわからないので上記のコマンドをオススメします．</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token function" style="color:#e6db74">PS</span><span class="token plain"> &gt; gpg-agent reloadagent </span><span class="token operator" style="color:#66d9ef">/</span><span class="token plain">bye</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以上です．</p>]]></content:encoded>
            <category>gpg4win</category>
            <category>gpg</category>
        </item>
        <item>
            <title><![CDATA[Typosでスペルミスを減らす]]></title>
            <link>https://mebiusbox.github.io/blog/2024/09/01/typos</link>
            <guid>https://mebiusbox.github.io/blog/2024/09/01/typos</guid>
            <pubDate>Sun, 01 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Typosを使ってスペルチェックするときの設定についてのメモ]]></description>
            <content:encoded><![CDATA[<p>スペルミス（typo）を減らすために、スペルチェッカー「Typos」を導入してみました．
ここでは、設定について調べたことを残しておきます．</p>
<p>スペルチェッカーは Visual Studio Codeの拡張機能である「<a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" target="_blank" rel="noopener noreferrer">Code Spell Checker</a>」を利用していました．ただ、誤検出や、過剰検出などのノイズが多いとも感じていました．
スペルチェックの範囲を限定したり、単語を登録しておくことによってノイズを減らすことはもちろんできますが、もう少し手抜きがしたいところです．</p>
<p>そこで、別のスペルチェッカーを試してみようと、調べたら <a href="https://github.com/crate-ci/typos" target="_blank" rel="noopener noreferrer">Typos</a> が目立ったので、試しに導入してみました．
よくCIで回して運用する方法が解説されていましたが、普通に個人の開発で利用するようにしました．
主に、Visual Studio Codeの拡張機能「<a href="https://marketplace.visualstudio.com/items?itemName=tekumara.typos-vscode" target="_blank" rel="noopener noreferrer">Typos spell checker</a>」と、コマンドラインツールによるチェックで使用しています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="インストール">インストール<a href="https://mebiusbox.github.io/blog/2024/09/01/typos#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB" class="hash-link" aria-label="インストール への直接リンク" title="インストール への直接リンク">​</a></h2>
<p>私は <code>cargo</code> でインストールしました．</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">cargo install typos-cli</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>後は <code>typos</code>コマンドで実行できます．標準で現在のディレクトリ以下のファイルをチェックします．</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">typos</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>実際にチェックされるファイルは <code>--files</code>オプションで確認できます．</li>
<li>スペルミスを修正する機能もあります．その場合は <code>-w</code> または <code>--write-changes</code> オプションを付けます．</li>
<li>出力フォーマットは <code>--format</code> で指定できます．標準は <code>long</code> ですが、<code>brief</code> で短く、<code>json</code>でJSON形式で出力できます．</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="設定ファイル">設定ファイル<a href="https://mebiusbox.github.io/blog/2024/09/01/typos#%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB" class="hash-link" aria-label="設定ファイル への直接リンク" title="設定ファイル への直接リンク">​</a></h2>
<p><code>.typos.toml</code>, <code>typos.toml</code>, <code>_typos.toml</code>、また <code>Cargo.toml</code>, <code>pyproject.toml</code> にも含めることができるようです．</p>
<p>詳しくは<a href="https://github.com/crate-ci/typos/blob/master/docs/reference.md" target="_blank" rel="noopener noreferrer">ドキュメント</a>に書かれています．</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ignore">ignore<a href="https://mebiusbox.github.io/blog/2024/09/01/typos#ignore" class="hash-link" aria-label="ignore への直接リンク" title="ignore への直接リンク">​</a></h3>
<p>個人的にちょっとわかりづらかった部分なので、調べた限りの情報を整理しておきます．
まず、標準で ignore 関連は有効になっています．オプションに <code>--dump-config -</code> を指定して実行すると、設定情報が出力されます．
何も指定していない状態だと次のような設定になります（一部のみ抜粋）：</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">files</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">extend-exclude</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">ignore-hidden</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">ignore-files</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">ignore-dot</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">ignore-vcs</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">ignore-global</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">ignore-parent</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token table class-name" style="color:#e6db74">default</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">binary</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">check-filename</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">check-file</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">unicode</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">ignore-hex</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">identifier-leading-digits</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">locale</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"en"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">extend-ignore-identifiers-re</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">extend-ignore-words-re</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token key property" style="color:#f92672">extend-ignore-re</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token punctuation" style="color:#f8f8f2">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>たとえば、<code>ignore-files</code> はドキュメントを確認すると <code>Respect ignore files.</code> とあってちょっと曖昧だと感じました．
なので、実際にソースコードを直接見てどうなっているのか調べてみました．</p>
<ul>
<li><code>ignore-files</code> が有効になっていると <code>ignore-dot</code>, <code>ignore-vcs</code>, <code>ignore-global</code>, <code>ignore-parent</code> が有効になります．</li>
<li><code>ignore-vcs</code> が有効になると <code>.gitignore</code> を参照します．ですから、標準で <code>.gitignore</code> に指定されているディレクトリやファイルは除外されます．また、<code>$GIT_DIR/info/exclude</code>も参照されます．</li>
<li><code>ignore-dot</code> はすべてのドットファイルが無視されるわけではなく <code>.ignore</code> ファイルという <code>.gitignore</code> と同じ記法のファイルが参照されます．</li>
<li><code>ignore-global</code> はgitのグローバル設定を参照します．これは <code>core.excludesfile</code> の値です．</li>
<li><code>ignore-parent</code>は親ディレクトリにある <code>.gitignore</code> を参照します．</li>
</ul>
<p>全部をしっかりと動作確認したわけではないので、誤りがあったら指摘してもらえると助かります．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enabledisable">enable/disable<a href="https://mebiusbox.github.io/blog/2024/09/01/typos#enabledisable" class="hash-link" aria-label="enable/disable への直接リンク" title="enable/disable への直接リンク">​</a></h2>
<p>Typosは標準でソースコード内でチェッカーの挙動を制御するものは用意されていないので、必要であれば追加する必要があります．
よくある <code>enable/disable</code> や <code>disable-line</code> はドキュメントに書かれているのでそれを使います．
あと <code>disable-next-line</code> も欲しかったのでこれも追加してみます．<code>extend-ignore-re</code>で設定します．</p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key property" style="color:#f92672">extend-ignore-re</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic"># spellchecker: disable-line, disable-next-line, disable, enable</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token string" style="color:#a6e22e">"(?Rm)^.*(#|//|/\\*)\\s*spellchecker:\\s*disable-line$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token string" style="color:#a6e22e">"(?m)^\\s*(?:#|//|/\\*)\\s*spellchecker:\\s*disable-next-line.*$\\r?\\n.*$"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token string" style="color:#a6e22e">"(?s)(#|//|/\\*|&lt;!--)\\s*spellchecker:\\s*disable.*?\\n\\s*(#|//|/\\*|&lt;!--)\\s*spellchecker:\\s*enable"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ドキュメントに書かれているものを少し改善して、4種類のコメントに対応しています：</p>
<div class="language-markdown codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-markdown codeBlock_bY9V thin-scrollbar" style="color:#f8f8f2;background-color:#272822"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token title important punctuation" style="color:#f8f8f2">#</span><span class="token title important"> spellchecker: disable</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">// spellchecker: disable</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">/</span><span class="token italic punctuation" style="color:#f8f8f2">*</span><span class="token italic content"> spellchecker: disable </span><span class="token italic punctuation" style="color:#f8f8f2">*</span><span class="token plain">/</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token comment" style="color:#8292a2;font-style:italic">&lt;!-- spellchecker: disable --&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>また、この記法は Code Spell Checker（内部でcspellを使用）にも準拠しています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハッシュ値">ハッシュ値<a href="https://mebiusbox.github.io/blog/2024/09/01/typos#%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E5%80%A4" class="hash-link" aria-label="ハッシュ値 への直接リンク" title="ハッシュ値 への直接リンク">​</a></h2>
<p>実際に使用していて気になったのがハッシュ値に対する誤検出です．issueでもいくつか報告（<a href="https://github.com/crate-ci/typos/issues/484" target="_blank" rel="noopener noreferrer">#484</a>）されていますが根本的な解決はまだされていないようです．対応としては、正規表現を使ってある一定以上の文字数を無視するぐらいしかできず、この方法もその文字数以上はすべてチェックされなくなるのでよろしくありません．いまのところどうしようもないので無視しています．</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="実際の運用について">実際の運用について<a href="https://mebiusbox.github.io/blog/2024/09/01/typos#%E5%AE%9F%E9%9A%9B%E3%81%AE%E9%81%8B%E7%94%A8%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6" class="hash-link" aria-label="実際の運用について への直接リンク" title="実際の運用について への直接リンク">​</a></h2>
<p>なかなか私の中でも確立した方法が見つかっていません．
Typosでもやはり誤検知はするので、該当箇所はスペルチェッカーを無効にしたりしないとノイズとして残り続けます．
とはいえ、スペルチェッカー関連でコードを汚染するのもよろしくないですし、難しい問題です．
まあ、ほどほどにしてスペルチェックの結果に対してチェック済みかどうか記録できる仕組みとかあると管理しやすいかもしれません．</p>
<p>以上です．</p>]]></content:encoded>
            <category>typos</category>
        </item>
    </channel>
</rss>